--- 
diff_files_001: 
  normal_contents: |
    <tr><td class="line_number">1</td><td id="1"><pre><span class="c">/*</span></pre></td><td class="line_number">1</td><td id="1"><pre><span class="c">/*</span></pre></td></tr>
    <tr><td class="line_number">2</td><td id="2"><pre><span class="c"> File:</span></pre></td><td class="line_number">2</td><td id="2"><pre><span class="c"> File:</span></pre></td></tr>
    <tr><td class="line_number">3</td><td id="3"><pre><span class="c">      analyzeme.c</span></pre></td><td class="line_number">3</td><td id="3"><pre><span class="c">      analyzeme.c</span></pre></td></tr>
    <tr><td class="line_number">4</td><td id="4"><pre><span class="c"> Copyright:</span></pre></td><td class="line_number">4</td><td id="4"><pre><span class="c"> Copyright:</span></pre></td></tr>
    <tr><td class="line_number">5</td><td id="5"><pre><span class="c">      Copyright (C) 2004 TOSHIBA CORPORATION. All Rights Reserved.</span></pre></td><td class="line_number">5</td><td id="5"><pre><span class="c">      Copyright (C) 2004 TOSHIBA CORPORATION. All Rights Reserved.</span></pre></td></tr>
    <tr><td class="line_number">6</td><td id="6"><pre><span class="c"> Product:</span></pre></td><td class="line_number">6</td><td id="6"><pre><span class="c"> Product:</span></pre></td></tr>
    <tr><td class="line_number">7</td><td id="7"><pre><span class="c">      AnalyzeMe</span></pre></td><td class="line_number">7</td><td id="7"><pre><span class="c">      AnalyzeMe</span></pre></td></tr>
    <tr><td class="line_number">8</td><td id="8"><pre><span class="c"> Abstract:</span></pre></td><td class="line_number">8</td><td id="8"><pre><span class="c"> Abstract:</span></pre></td></tr>
    <tr><td class="line_number">9</td><td id="9"><pre><span class="c">      AnalyzeMe????C??????????`????</span></pre></td><td class="line_number">9</td><td id="9"><pre><span class="c">      AnalyzeMe????C??????????`????</span></pre></td></tr>
    <tr><td class="line_number">10</td><td id="10"><pre><span class="c"> Author:</span></pre></td><td class="line_number">10</td><td id="10"><pre><span class="c"> Author:</span></pre></td></tr>
    <tr><td class="line_number">11</td><td id="11"><pre><span class="c">      zhang-gh</span></pre></td><td class="line_number">11</td><td id="11"><pre><span class="c">      zhang-gh</span></pre></td></tr>
    <tr><td class="line_number">12</td><td id="12"><pre><span class="c"> Date:</span></pre></td><td class="line_number">12</td><td id="12"><pre><span class="c"> Date:</span></pre></td></tr>
    <tr><td class="line_number">13</td><td id="13"><pre><span class="c">      2004/08/20</span></pre></td><td class="line_number">13</td><td id="13"><pre><span class="c">      2004/08/20</span></pre></td></tr>
    <tr><td class="line_number">14</td><td id="14"><pre><span class="c"> REVISION HISTORY:</span></pre></td><td class="line_number">14</td><td id="14"><pre><span class="c"> REVISION HISTORY:</span></pre></td></tr>
    <tr><td class="line_number">15</td><td id="15"><pre><span class="c"></span></pre></td><td class="line_number">15</td><td id="15"><pre><span class="c"></span></pre></td></tr>
    <tr><td class="line_number">16</td><td id="16"><pre><span class="c">*/</span></pre></td><td class="line_number">16</td><td id="16"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">17</td><td id="17"><pre></pre></td><td class="line_number">17</td><td id="17"><pre></pre></td></tr>
    <tr><td class="line_number">18</td><td id="18"><pre><span class="c">/*</span></pre></td><td class="line_number">18</td><td id="18"><pre><span class="c">/*</span></pre></td></tr>
    <tr><td class="line_number">19</td><td id="19"><pre><span class="c">    $AnalyzeMe 1.0.0.1$</span></pre></td><td class="line_number">19</td><td id="19"><pre><span class="c">    $AnalyzeMe 1.0.0.1$</span></pre></td></tr>
    <tr><td class="line_number">20</td><td id="20"><pre><span class="c">*/</span></pre></td><td class="line_number">20</td><td id="20"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">21</td><td id="21"><pre><span class="pp">#include</span> <span class="ic">&quot;analyzeme.h&quot;</span></pre></td><td class="line_number">21</td><td id="21"><pre><span class="pp">#include</span> <span class="ic">&quot;analyzeme.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">22</td><td id="22" class="added_line"><pre><span class="pp">#include</span> <span class="ic">&quot;common.h&quot;</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">23</td><td id="23" class="added_line"><pre><span class="pp">#include</span> <span class="ic">&quot;memory_manage.h&quot;</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">24</td><td id="24"><pre><span class="pp">#include</span> <span class="ic">&quot;parse_cmdline.h&quot;</span></pre></td><td class="line_number">22</td><td id="22"><pre><span class="pp">#include</span> <span class="ic">&quot;parse_cmdline.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">25</td><td id="25"><pre><span class="pp">#include</span> <span class="ic">&quot;common_measure.h&quot;</span></pre></td><td class="line_number">23</td><td id="23"><pre><span class="pp">#include</span> <span class="ic">&quot;common_measure.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">26</td><td id="26"><pre><span class="pp">#include</span> <span class="ic">&quot;trend_measure.h&quot;</span></pre></td><td class="line_number">24</td><td id="24"><pre><span class="pp">#include</span> <span class="ic">&quot;trend_measure.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">27</td><td id="27"><pre><span class="pp">#include</span> <span class="ic">&quot;make_file_list.h&quot;</span></pre></td><td class="line_number">25</td><td id="25"><pre><span class="pp">#include</span> <span class="ic">&quot;make_file_list.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">28</td><td id="28"><pre><span class="pp">#include</span> <span class="ic">&quot;output.h&quot;</span></pre></td><td class="line_number">26</td><td id="26"><pre><span class="pp">#include</span> <span class="ic">&quot;output.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">29</td><td id="29"><pre><span class="pp">#include</span> <span class="ic">&quot;get_process_macro.h&quot;</span></pre></td><td class="line_number">27</td><td id="27"><pre><span class="pp">#include</span> <span class="ic">&quot;get_process_macro.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">30</td><td id="30" class="added_line"><pre><span class="pp">#include</span> <span class="ic">&lt;signal.h&gt;</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">31</td><td id="31"><pre></pre></td><td class="line_number">28</td><td id="28"><pre></pre></td></tr>
    <tr><td class="line_number">32</td><td id="32"><pre><span class="c">/****************************************************/</span></pre></td><td class="line_number">29</td><td id="29"><pre><span class="c">/****************************************************/</span></pre></td></tr>
    <tr><td class="line_number">33</td><td id="33"><pre><span class="c">/*              ????                            */</span></pre></td><td class="line_number">30</td><td id="30"><pre><span class="c">/*              ????                            */</span></pre></td></tr>
    <tr><td class="line_number">34</td><td id="34"><pre><span class="c">/****************************************************/</span></pre></td><td class="line_number">31</td><td id="31"><pre><span class="c">/****************************************************/</span></pre></td></tr>
    <tr><td class="line_number">35</td><td id="35"><pre><span class="di">const</span> <span class="pt">char</span>* TRACEFILE = <span class="s"><span class="dl">&quot;</span><span class="k">analyzeme_trace.txt</span><span class="dl">&quot;</span></span>;</pre></td><td class="line_number">32</td><td id="32"><pre><span class="di">const</span> <span class="pt">char</span>* TRACEFILE = <span class="s"><span class="dl">&quot;</span><span class="k">analyzeme_trace.txt</span><span class="dl">&quot;</span></span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9603"><a href="/result/view_message/1/2/7?message_id=3211&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(35),(13) :Msg(2:3211) The global identifier 'TRACEFILE' is defined but not used.</b></a></div><div class="common_warning" id="warning_9604"><a href="/result/view_message/1/2/7?message_id=3408&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(35),(13) :Msg(2:3408) 'TRACEFILE' has external linkage but is being defined without any previous declaration.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10596"><a href="/result/view_message/1/2/11?message_id=3408&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(32),(13) :Msg(2:3408) 'TRACEFILE' has external linkage but is being defined without any previous declaration.</b></a></div></td></tr>
    <tr><td class="line_number">36</td><td id="36"><pre><span class="di">const</span> <span class="pt">char</span>* APPLOGFILE = <span class="s"><span class="dl">&quot;</span><span class="k">analyzeme_log.txt</span><span class="dl">&quot;</span></span>;</pre></td><td class="line_number">33</td><td id="33"><pre><span class="di">const</span> <span class="pt">char</span>* APPLOGFILE = <span class="s"><span class="dl">&quot;</span><span class="k">analyzeme_log.txt</span><span class="dl">&quot;</span></span>;</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9605"><a href="/result/view_message/1/2/7?message_id=3408&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(36),(13) :Msg(2:3408) 'APPLOGFILE' has external linkage but is being defined without any previous declaration.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10597"><a href="/result/view_message/1/2/11?message_id=3408&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(33),(13) :Msg(2:3408) 'APPLOGFILE' has external linkage but is being defined without any previous declaration.</b></a></div></td></tr>
    <tr><td class="line_number">37</td><td id="37"><pre></pre></td><td class="line_number">34</td><td id="34"><pre></pre></td></tr>
    <tr><td class="line_number">38</td><td id="38"><pre><span class="c">/****************************************************/</span></pre></td><td class="line_number">35</td><td id="35"><pre><span class="c">/****************************************************/</span></pre></td></tr>
    <tr><td class="line_number">39</td><td id="39"><pre><span class="c">/*              ?O???[?o???????                  */</span></pre></td><td class="line_number">36</td><td id="36"><pre><span class="c">/*              ?O???[?o???????                  */</span></pre></td></tr>
    <tr><td class="line_number">40</td><td id="40"><pre><span class="c">/****************************************************/</span></pre></td><td class="line_number">37</td><td id="37"><pre><span class="c">/****************************************************/</span></pre></td></tr>
    <tr><td class="line_number">41</td><td id="41"><pre><span class="c">/* ????????File??n???h????????????O???[?o???????? */</span></pre></td><td class="line_number">38</td><td id="38"><pre><span class="c">/* ????????File??n???h????????????O???[?o???????? */</span></pre></td></tr>
    <tr><td class="line_number">42</td><td id="42"><pre></pre></td><td class="line_number">39</td><td id="39"><pre></pre></td></tr>
    <tr><td class="line_number">43</td><td id="43"><pre><span class="c">/* Log File */</span></pre></td><td class="line_number">40</td><td id="40"><pre><span class="c">/* Log File */</span></pre></td></tr>
    <tr><td class="line_number">44</td><td id="44"><pre>FILE *g_fpLogFile = <span class="pc">NULL</span>;       <span class="c">/* Log File pointer */</span></pre></td><td class="line_number">41</td><td id="41"><pre>FILE *g_fpLogFile = <span class="pc">NULL</span>;       <span class="c">/* Log File pointer */</span></pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9606"><a href="/result/view_message/1/2/7?message_id=3408&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(44),(7) :Msg(2:3408) 'g_fpLogFile' has external linkage but is being defined without any previous declaration.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10598"><a href="/result/view_message/1/2/11?message_id=3408&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(41),(7) :Msg(2:3408) 'g_fpLogFile' has external linkage but is being defined without any previous declaration.</b></a></div></td></tr>
    <tr><td class="line_number">45</td><td id="45"><pre><span class="c">/*  Trace File */</span></pre></td><td class="line_number">42</td><td id="42"><pre><span class="c">/*  Trace File */</span></pre></td></tr>
    <tr><td class="line_number">46</td><td id="46"><pre>FILE *g_fpTraceFile = <span class="pc">NULL</span>;     <span class="c">/* Trace File pointer */</span></pre></td><td class="line_number">43</td><td id="43"><pre>FILE *g_fpTraceFile = <span class="pc">NULL</span>;     <span class="c">/* Trace File pointer */</span></pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9607"><a href="/result/view_message/1/2/7?message_id=3211&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(46),(7) :Msg(2:3211) The global identifier 'g_fpTraceFile' is defined but not used.</b></a></div><div class="common_warning" id="warning_9608"><a href="/result/view_message/1/2/7?message_id=3408&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(46),(7) :Msg(2:3408) 'g_fpTraceFile' has external linkage but is being defined without any previous declaration.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10599"><a href="/result/view_message/1/2/11?message_id=3408&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(43),(7) :Msg(2:3408) 'g_fpTraceFile' has external linkage but is being defined without any previous declaration.</b></a></div></td></tr>
    <tr><td class="line_number">47</td><td id="47"><pre><span class="c">/* ?G???[File */</span></pre></td><td class="line_number">44</td><td id="44"><pre><span class="c">/* ?G???[File */</span></pre></td></tr>
    <tr><td class="line_number">48</td><td id="48"><pre>FILE *g_fpErrorFile = <span class="pc">NULL</span>;</pre></td><td class="line_number">45</td><td id="45"><pre>FILE *g_fpErrorFile = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9609"><a href="/result/view_message/1/2/7?message_id=3408&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(48),(7) :Msg(2:3408) 'g_fpErrorFile' has external linkage but is being defined without any previous declaration.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10600"><a href="/result/view_message/1/2/11?message_id=3408&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(45),(7) :Msg(2:3408) 'g_fpErrorFile' has external linkage but is being defined without any previous declaration.</b></a></div></td></tr>
    <tr><td class="line_number">49</td><td id="49"><pre></pre></td><td class="line_number">46</td><td id="46"><pre></pre></td></tr>
    <tr><td class="line_number">50</td><td id="50" class="added_line"><pre><span class="pt">bool</span> g_bTrace           = <span class="pc">false</span>;    <span class="c">/* Trace flag */</span></pre></td><td class="line_number">47</td><td id="47" class="deleted_line"><pre><span class="pt">bool</span> g_bTrace;    <span class="c">/* Trace flag */</span></pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9610"><a href="/result/view_message/1/2/7?message_id=3408&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(50),(6) :Msg(2:3408) 'g_bTrace' has external linkage but is being defined without any previous declaration.</b></a></div></td><td class="deleted_warning" id="line_number"></td><td><div class="deleted_warning" id="warning_10601"><a href="/result/view_message/1/2/11?message_id=3408&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(47),(6) :Msg(2:3408) 'g_bTrace' has external linkage but is being defined without any previous declaration.</b></a></div></td></tr>
    <tr><td class="line_number">51</td><td id="51" class="added_line"><pre><span class="pt">char</span> g_szNVPath[MAX_PATH] = {<span class="i">0</span>};</pre></td><td class="line_number">48</td><td id="48" class="deleted_line"><pre><span class="pt">char</span> g_szNVPath[MAX_PATH] = {</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9611"><a href="/result/view_message/1/2/7?message_id=3408&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(51),(6) :Msg(2:3408) 'g_szNVPath' has external linkage but is being defined without any previous declaration.</b></a></div></td><td class="deleted_warning" id="line_number"></td><td><div class="deleted_warning" id="warning_10602"><a href="/result/view_message/1/2/11?message_id=3408&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(48),(6) :Msg(2:3408) 'g_szNVPath' has external linkage but is being defined without any previous declaration.</b></a></div></td></tr>
    <tr><td class="line_number">52</td><td id="52" class="added_line"><pre><span class="pt">char</span> g_szOVPath[MAX_PATH] = {<span class="i">0</span>};</pre></td><td class="line_number">49</td><td id="49" class="deleted_line"><pre>    <span class="i">0</span></pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9612"><a href="/result/view_message/1/2/7?message_id=3408&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(52),(6) :Msg(2:3408) 'g_szOVPath' has external linkage but is being defined without any previous declaration.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">53</td><td id="53" class="added_line"><pre><span class="pt">bool</span> g_bTrendFile = <span class="pc">false</span>;</pre></td><td class="line_number">50</td><td id="50" class="deleted_line"><pre>};</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9613"><a href="/result/view_message/1/2/7?message_id=3408&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(53),(6) :Msg(2:3408) 'g_bTrendFile' has external linkage but is being defined without any previous declaration.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">51</td><td id="51" class="deleted_line"><pre><span class="pt">char</span> g_szOVPath[MAX_PATH] = {</pre></td></tr>
    <tr><td class="deleted_warning" id="line_number"></td><td class="deleted_warning"></td><td class="deleted_warning" id="line_number"></td><td><div class="deleted_warning" id="warning_10603"><a href="/result/view_message/1/2/11?message_id=3408&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(51),(6) :Msg(2:3408) 'g_szOVPath' has external linkage but is being defined without any previous declaration.</b></a></div></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">52</td><td id="52" class="deleted_line"><pre>    <span class="i">0</span></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">53</td><td id="53" class="deleted_line"><pre>};</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">54</td><td id="54" class="deleted_line"><pre><span class="pt">bool</span> g_bTrendFile = <span class="pc">true</span>;</pre></td></tr>
    <tr><td class="deleted_warning" id="line_number"></td><td class="deleted_warning"></td><td class="deleted_warning" id="line_number"></td><td><div class="deleted_warning" id="warning_10604"><a href="/result/view_message/1/2/11?message_id=3408&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(54),(6) :Msg(2:3408) 'g_bTrendFile' has external linkage but is being defined without any previous declaration.</b></a></div></td></tr>
    <tr><td class="line_number">54</td><td id="54"><pre><span class="c">/* Option File????e??????????O???[?o???????? */</span></pre></td><td class="line_number">55</td><td id="55"><pre><span class="c">/* Option File????e??????????O???[?o???????? */</span></pre></td></tr>
    <tr><td class="line_number">55</td><td id="55"><pre><span class="pt">char</span> *g_optionFileCont = <span class="pc">NULL</span>;</pre></td><td class="line_number">56</td><td id="56"><pre><span class="pt">char</span> *g_optionFileCont = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9614"><a href="/result/view_message/1/2/7?message_id=3211&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(55),(7) :Msg(2:3211) The global identifier 'g_optionFileCont' is defined but not used.</b></a></div><div class="common_warning" id="warning_9615"><a href="/result/view_message/1/2/7?message_id=3408&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(55),(7) :Msg(2:3408) 'g_optionFileCont' has external linkage but is being defined without any previous declaration.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10605"><a href="/result/view_message/1/2/11?message_id=3211&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(56),(7) :Msg(2:3211) The global identifier 'g_optionFileCont' is defined but not used.</b></a></div><div class="common_warning" id="warning_10606"><a href="/result/view_message/1/2/11?message_id=3408&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(56),(7) :Msg(2:3408) 'g_optionFileCont' has external linkage but is being defined without any previous declaration.</b></a></div></td></tr>
    <tr><td class="line_number">56</td><td id="56"><pre><span class="c">/* Symbol File????e??????????O???[?o???????? */</span></pre></td><td class="line_number">57</td><td id="57"><pre><span class="c">/* Symbol File????e??????????O???[?o???????? */</span></pre></td></tr>
    <tr><td class="line_number">57</td><td id="57"><pre><span class="pt">char</span> *g_symbolFileCont = <span class="pc">NULL</span>;</pre></td><td class="line_number">58</td><td id="58"><pre><span class="pt">char</span> *g_symbolFileCont = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9616"><a href="/result/view_message/1/2/7?message_id=3211&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(57),(7) :Msg(2:3211) The global identifier 'g_symbolFileCont' is defined but not used.</b></a></div><div class="common_warning" id="warning_9617"><a href="/result/view_message/1/2/7?message_id=3408&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(57),(7) :Msg(2:3408) 'g_symbolFileCont' has external linkage but is being defined without any previous declaration.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10607"><a href="/result/view_message/1/2/11?message_id=3211&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(58),(7) :Msg(2:3211) The global identifier 'g_symbolFileCont' is defined but not used.</b></a></div><div class="common_warning" id="warning_10608"><a href="/result/view_message/1/2/11?message_id=3408&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(58),(7) :Msg(2:3408) 'g_symbolFileCont' has external linkage but is being defined without any previous declaration.</b></a></div></td></tr>
    <tr><td class="line_number">58</td><td id="58"><pre><span class="pt">bool</span> g_bOutTime = <span class="pc">false</span>;</pre></td><td class="line_number">59</td><td id="59"><pre><span class="pt">bool</span> g_bOutTime = <span class="pc">false</span>;</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9618"><a href="/result/view_message/1/2/7?message_id=3408&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(58),(6) :Msg(2:3408) 'g_bOutTime' has external linkage but is being defined without any previous declaration.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10609"><a href="/result/view_message/1/2/11?message_id=3408&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(59),(6) :Msg(2:3408) 'g_bOutTime' has external linkage but is being defined without any previous declaration.</b></a></div></td></tr>
    <tr><td class="line_number">59</td><td id="59"><pre>ST_AnalyzeMe *g_pAnzInfo;  <span class="c">/* AnalyzeMe??????? */</span></pre></td><td class="line_number">60</td><td id="60"><pre>ST_AnalyzeMe *g_pAnzInfo;  <span class="c">/* AnalyzeMe??????? */</span></pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9619"><a href="/result/view_message/1/2/7?message_id=3408&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(59),(15) :Msg(2:3408) 'g_pAnzInfo' has external linkage but is being defined without any previous declaration.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10610"><a href="/result/view_message/1/2/11?message_id=3408&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(60),(15) :Msg(2:3408) 'g_pAnzInfo' has external linkage but is being defined without any previous declaration.</b></a></div></td></tr>
    <tr><td class="line_number">60</td><td id="60"><pre><span class="c">/**</span></pre></td><td class="line_number">61</td><td id="61"><pre><span class="c">/**</span></pre></td></tr>
    <tr><td class="line_number">61</td><td id="61"><pre><span class="c">*  main</span></pre></td><td class="line_number">62</td><td id="62"><pre><span class="c">*  main</span></pre></td></tr>
    <tr><td class="line_number">62</td><td id="62"><pre><span class="c">*  AnalyzeMe????C?????</span></pre></td><td class="line_number">63</td><td id="63"><pre><span class="c">*  AnalyzeMe????C?????</span></pre></td></tr>
    <tr><td class="line_number">63</td><td id="63"><pre><span class="c">*  @param  argc ?R?}???h???C??????????</span></pre></td><td class="line_number">64</td><td id="64"><pre><span class="c">*  @param  argc ?R?}???h???C??????????</span></pre></td></tr>
    <tr><td class="line_number">64</td><td id="64"><pre><span class="c">*  @param  argv ?R?}???h???C?????????z??</span></pre></td><td class="line_number">65</td><td id="65"><pre><span class="c">*  @param  argv ?R?}???h???C?????????z??</span></pre></td></tr>
    <tr><td class="line_number">65</td><td id="65"><pre><span class="c">*  @return</span></pre></td><td class="line_number">66</td><td id="66"><pre><span class="c">*  @return</span></pre></td></tr>
    <tr><td class="line_number">66</td><td id="66"><pre><span class="c">           ANZ_SUCCESS:?????I??</span></pre></td><td class="line_number">67</td><td id="67"><pre><span class="c">           ANZ_SUCCESS:?????I??</span></pre></td></tr>
    <tr><td class="line_number">67</td><td id="67"><pre><span class="c">           ANZ_ERROR  :????I??</span></pre></td><td class="line_number">68</td><td id="68"><pre><span class="c">           ANZ_ERROR  :????I??</span></pre></td></tr>
    <tr><td class="line_number">68</td><td id="68"><pre><span class="c">*  @author zhang-gh</span></pre></td><td class="line_number">69</td><td id="69"><pre><span class="c">*  @author zhang-gh</span></pre></td></tr>
    <tr><td class="line_number">69</td><td id="69"><pre><span class="c">*/</span></pre></td><td class="line_number">70</td><td id="70"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">70</td><td id="70"><pre><span class="pt">int</span> main(<span class="pt">int</span> argc,<span class="pt">char</span> * argv[])</pre></td><td class="line_number">71</td><td id="71"><pre><span class="pt">int</span> main(<span class="pt">int</span> argc,<span class="pt">char</span> * argv[])</pre></td></tr>
    <tr><td class="line_number">71</td><td id="71"><pre>{</pre></td><td class="line_number">72</td><td id="72"><pre>{</pre></td></tr>
    <tr><td class="line_number">72</td><td id="72"><pre>    <span class="c">/* ????? */</span></pre></td><td class="line_number">73</td><td id="73"><pre>    <span class="c">/* ????? */</span></pre></td></tr>
    <tr><td class="line_number">73</td><td id="73"><pre>    <span class="pt">int</span>  the_iRet;                 <span class="c">/* Return?l */</span></pre></td><td class="line_number">74</td><td id="74"><pre>    <span class="pt">int</span>  the_iRet;                 <span class="c">/* Return?l */</span></pre></td></tr>
    <tr><td class="line_number">74</td><td id="74"><pre>    <span class="pt">int</span>  the_iMeasureType;         <span class="c">/* ?v??????F????v???A?????v?? */</span></pre></td><td class="line_number">75</td><td id="75"><pre>    <span class="pt">int</span>  the_iMeasureType;         <span class="c">/* ?v??????F????v???A?????v?? */</span></pre></td></tr>
    <tr><td class="line_number">75</td><td id="75"><pre>    <span class="pt">char</span> **the_pMeasureItem;       <span class="c">/* ?R?}???h???C???????????v????????X?g */</span></pre></td><td class="line_number">76</td><td id="76"><pre>    <span class="pt">char</span> **the_pMeasureItem;       <span class="c">/* ?R?}???h???C???????????v????????X?g */</span></pre></td></tr>
    <tr><td class="line_number">76</td><td id="76"><pre>    <span class="pt">char</span> the_szCurMetrics[MAX_METRICS] = {<span class="i">0</span>};<span class="c">/* ?J?????g?v??Metrics */</span></pre></td><td class="line_number">77</td><td id="77"><pre>    <span class="pt">char</span> the_szCurMetrics[MAX_METRICS] = {<span class="i">0</span>};<span class="c">/* ?J?????g?v??Metrics */</span></pre></td></tr>
    <tr><td class="line_number">77</td><td id="77"><pre>    ST_Option    *the_pCmdOption;    <span class="c">/* ?R?}???h???C??????????Option???? */</span></pre></td><td class="line_number">78</td><td id="78"><pre>    ST_Option    *the_pCmdOption;    <span class="c">/* ?R?}???h???C??????????Option???? */</span></pre></td></tr>
    <tr><td class="line_number">78</td><td id="78"><pre>    ST_AnalyzeMe *the_pAnzInfo;      <span class="c">/* AnalyzeMe??????? */</span></pre></td><td class="line_number">79</td><td id="79"><pre>    ST_AnalyzeMe *the_pAnzInfo;      <span class="c">/* AnalyzeMe??????? */</span></pre></td></tr>
    <tr><td class="line_number">79</td><td id="79"><pre>    ST_Option    *the_pOption;       <span class="c">/* AnalyzeMe???????????Option???? */</span></pre></td><td class="line_number">80</td><td id="80"><pre>    ST_Option    *the_pOption;       <span class="c">/* AnalyzeMe???????????Option???? */</span></pre></td></tr>
    <tr><td class="line_number">80</td><td id="80"><pre>    <span class="pt">char</span> *the_pTrace = <span class="pc">NULL</span>;</pre></td><td class="line_number">81</td><td id="81"><pre>    <span class="pt">char</span> *the_pTrace = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">81</td><td id="81"><pre>    <span class="r">struct</span> timeb the_st ;</pre></td><td class="line_number">82</td><td id="82"><pre>    <span class="r">struct</span> timeb the_st ;</pre></td></tr>
    <tr><td class="line_number">82</td><td id="82"><pre>    <span class="r">struct</span> timeb the_ed ;</pre></td><td class="line_number">83</td><td id="83"><pre>    <span class="r">struct</span> timeb the_ed ;</pre></td></tr>
    <tr><td class="line_number">83</td><td id="83"><pre></pre></td><td class="line_number">84</td><td id="84"><pre></pre></td></tr>
    <tr><td class="line_number">84</td><td id="84"><pre>    <span class="c">/* ????????? */</span></pre></td><td class="line_number">85</td><td id="85"><pre>    <span class="c">/* ????????? */</span></pre></td></tr>
    <tr><td class="line_number">85</td><td id="85"><pre>    the_st.time = <span class="i">0</span>;</pre></td><td class="line_number">86</td><td id="86"><pre>    the_st.time = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">86</td><td id="86"><pre>    the_st.millitm = <span class="i">0</span>;</pre></td><td class="line_number">87</td><td id="87"><pre>    the_st.millitm = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">87</td><td id="87"><pre>    the_ed.time = <span class="i">0</span>;</pre></td><td class="line_number">88</td><td id="88"><pre>    the_ed.time = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">88</td><td id="88"><pre>    the_ed.millitm = <span class="i">0</span>;</pre></td><td class="line_number">89</td><td id="89"><pre>    the_ed.millitm = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">89</td><td id="89"><pre>    the_pAnzInfo = <span class="pc">NULL</span>;</pre></td><td class="line_number">90</td><td id="90"><pre>    the_pAnzInfo = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">90</td><td id="90"><pre>    the_pCmdOption = <span class="pc">NULL</span>;</pre></td><td class="line_number">91</td><td id="91"><pre>    the_pCmdOption = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">91</td><td id="91"><pre>    the_iRet = ANZ_SUCCESS;</pre></td><td class="line_number">92</td><td id="92"><pre>    the_iRet = ANZ_SUCCESS;</pre></td></tr>
    <tr><td class="line_number">92</td><td id="92"><pre>    the_pMeasureItem = <span class="pc">NULL</span>;</pre></td><td class="line_number">93</td><td id="93"><pre>    the_pMeasureItem = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">93</td><td id="93"><pre></pre></td><td class="line_number">94</td><td id="94"><pre></pre></td></tr>
    <tr><td class="line_number">94</td><td id="94" class="added_line"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">95</td><td id="95" class="added_line"><pre>    InitMemMan();</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">96</td><td id="96" class="added_line"><pre><span class="pp">#endif</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">97</td><td id="97" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">98</td><td id="98"><pre>    <span class="c">/* ?V?O?i???n???h????o?^?@*/</span></pre></td><td class="line_number">95</td><td id="95"><pre>    <span class="c">/* ?V?O?i???n???h????o?^?@*/</span></pre></td></tr>
    <tr><td class="line_number">99</td><td id="99"><pre>    SetSignal() ;</pre></td><td class="line_number">96</td><td id="96"><pre>    SetSignal() ;</pre></td></tr>
    <tr><td class="line_number">100</td><td id="100"><pre></pre></td><td class="line_number">97</td><td id="97"><pre></pre></td></tr>
    <tr><td class="line_number">101</td><td id="101"><pre>    the_pTrace = getenv(<span class="s"><span class="dl">&quot;</span><span class="k">AnzTrace</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">98</td><td id="98"><pre>    the_pTrace = getenv(<span class="s"><span class="dl">&quot;</span><span class="k">AnzTrace</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">102</td><td id="102"><pre>    <span class="r">if</span>(the_pTrace != <span class="pc">NULL</span>) {</pre></td><td class="line_number">99</td><td id="99"><pre>    <span class="r">if</span>(the_pTrace != <span class="pc">NULL</span>) {</pre></td></tr>
    <tr><td class="line_number">103</td><td id="103"><pre>        <span class="r">if</span>(strcmp(the_pTrace,<span class="s"><span class="dl">&quot;</span><span class="k">ON</span><span class="dl">&quot;</span></span>) == <span class="i">0</span> ) {</pre></td><td class="line_number">100</td><td id="100"><pre>        <span class="r">if</span>(strcmp(the_pTrace,<span class="s"><span class="dl">&quot;</span><span class="k">ON</span><span class="dl">&quot;</span></span>) == <span class="i">0</span> ) {</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9620"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9621"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_9622"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9623"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9624"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9625"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9626"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9627"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_9628"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(35) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_9629"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(35) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_9630"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(36) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_9631"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(43) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10611"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10612"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_10613"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10614"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10615"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10616"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10617"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10618"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_10619"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(35) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_10620"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(35) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_10621"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(36) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_10622"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(43) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">104</td><td id="104"><pre>            g_bTrace = <span class="pc">true</span>;</pre></td><td class="line_number">101</td><td id="101"><pre>            g_bTrace = <span class="pc">true</span>;</pre></td></tr>
    <tr><td class="line_number">105</td><td id="105"><pre>        }</pre></td><td class="line_number">102</td><td id="102"><pre>        }</pre></td></tr>
    <tr><td class="line_number">106</td><td id="106"><pre>    }</pre></td><td class="line_number">103</td><td id="103"><pre>    }</pre></td></tr>
    <tr><td class="line_number">107</td><td id="107"><pre>    <span class="c">/* TraceFile??LogFile???J?? */</span></pre></td><td class="line_number">104</td><td id="104"><pre>    <span class="c">/* TraceFile??LogFile???J?? */</span></pre></td></tr>
    <tr><td class="line_number">108</td><td id="108" class="added_line"><pre>        <span class="c">/*</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">109</td><td id="109"><pre><span class="c">    g_fpTraceFile = fopen(TRACEFILE,&quot;w&quot;);</span></pre></td><td class="line_number">105</td><td id="105"><pre>    g_fpTraceFile = fopen(TRACEFILE,<span class="s"><span class="dl">&quot;</span><span class="k">w</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">110</td><td id="110"><pre><span class="c">    if(g_fpTraceFile == NULL){</span></pre></td><td class="line_number">106</td><td id="106"><pre>    <span class="r">if</span>(g_fpTraceFile == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">111</td><td id="111"><pre><span class="c">        printf(&quot;Create trace file failed!\n&quot;);</span></pre></td><td class="line_number">107</td><td id="107"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">Create trace file failed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">112</td><td id="112"><pre><span class="c">    }</span></pre></td><td class="line_number">108</td><td id="108"><pre>    }</pre></td></tr>
    <tr><td class="line_number">113</td><td id="113" class="added_line"><pre><span class="c">        */</span></pre></td><td class="line_number">109</td><td id="109" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number">114</td><td id="114"><pre>    g_fpLogFile = fopen(APPLOGFILE,<span class="s"><span class="dl">&quot;</span><span class="k">w</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">110</td><td id="110"><pre>    g_fpLogFile = fopen(APPLOGFILE,<span class="s"><span class="dl">&quot;</span><span class="k">w</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">115</td><td id="115"><pre>    <span class="r">if</span>(g_fpLogFile == <span class="pc">NULL</span>){</pre></td><td class="line_number">111</td><td id="111"><pre>    <span class="r">if</span>(g_fpLogFile == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">116</td><td id="116"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">Create log file failed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);   <span class="c">/* */</span></pre></td><td class="line_number">112</td><td id="112"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">Create log file failed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);   <span class="c">/* */</span></pre></td></tr>
    <tr><td class="line_number">117</td><td id="117"><pre>    }</pre></td><td class="line_number">113</td><td id="113"><pre>    }</pre></td></tr>
    <tr><td class="line_number">118</td><td id="118"><pre></pre></td><td class="line_number">114</td><td id="114"><pre></pre></td></tr>
    <tr><td class="line_number">119</td><td id="119"><pre>    <span class="c">/* AnalyzeMe???????????????m?? */</span></pre></td><td class="line_number">115</td><td id="115"><pre>    <span class="c">/* AnalyzeMe???????????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">120</td><td id="120"><pre>    AnzMalloc(the_pAnzInfo,ST_AnalyzeMe*,<span class="r">sizeof</span>(ST_AnalyzeMe));</pre></td><td class="line_number">116</td><td id="116"><pre>    AnzMalloc(the_pAnzInfo,ST_AnalyzeMe*,<span class="r">sizeof</span>(ST_AnalyzeMe));</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9632"><a href="/result/view_message/1/2/7?message_id=3430&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(120),(63) :Msg(2:3430) Macro argument expression requires parentheses.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10623"><a href="/result/view_message/1/2/11?message_id=3430&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(116),(63) :Msg(2:3430) Macro argument expression requires parentheses.</b></a></div></td></tr>
    <tr><td class="line_number">121</td><td id="121"><pre>    <span class="r">if</span>(the_pAnzInfo == <span class="pc">NULL</span>){</pre></td><td class="line_number">117</td><td id="117"><pre>    <span class="r">if</span>(the_pAnzInfo == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">122</td><td id="122"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td><td class="line_number">118</td><td id="118"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td></tr>
    <tr><td class="line_number">123</td><td id="123" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">119</td><td id="119" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9633"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(123),(18) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">124</td><td id="124"><pre>    }</pre></td><td class="line_number">120</td><td id="120"><pre>    }</pre></td></tr>
    <tr><td class="line_number">125</td><td id="125"><pre>    memset(the_pAnzInfo,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_AnalyzeMe));</pre></td><td class="line_number">121</td><td id="121"><pre>    memset(the_pAnzInfo,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_AnalyzeMe));</pre></td></tr>
    <tr><td class="line_number">126</td><td id="126"><pre>    g_pAnzInfo = the_pAnzInfo;</pre></td><td class="line_number">122</td><td id="122"><pre>    g_pAnzInfo = the_pAnzInfo;</pre></td></tr>
    <tr><td class="line_number">127</td><td id="127"><pre>    <span class="c">/* AnalyzeMe???????????Option????????????m?? */</span></pre></td><td class="line_number">123</td><td id="123"><pre>    <span class="c">/* AnalyzeMe???????????Option????????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">128</td><td id="128"><pre>    AnzMalloc(the_pAnzInfo-&gt;m_option,ST_Option*,<span class="r">sizeof</span>(ST_Option));</pre></td><td class="line_number">124</td><td id="124"><pre>    AnzMalloc(the_pAnzInfo-&gt;m_option,ST_Option*,<span class="r">sizeof</span>(ST_Option));</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9634"><a href="/result/view_message/1/2/7?message_id=3430&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(128),(67) :Msg(2:3430) Macro argument expression requires parentheses.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10624"><a href="/result/view_message/1/2/11?message_id=3430&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(124),(67) :Msg(2:3430) Macro argument expression requires parentheses.</b></a></div></td></tr>
    <tr><td class="line_number">129</td><td id="129"><pre>    <span class="r">if</span>(the_pAnzInfo-&gt;m_option == <span class="pc">NULL</span>){</pre></td><td class="line_number">125</td><td id="125"><pre>    <span class="r">if</span>(the_pAnzInfo-&gt;m_option == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">130</td><td id="130"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td><td class="line_number">126</td><td id="126"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td></tr>
    <tr><td class="line_number">131</td><td id="131" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">127</td><td id="127" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9635"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(131),(18) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">132</td><td id="132"><pre>    }</pre></td><td class="line_number">128</td><td id="128"><pre>    }</pre></td></tr>
    <tr><td class="line_number">133</td><td id="133"><pre>    memset(the_pAnzInfo-&gt;m_option,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_Option));</pre></td><td class="line_number">129</td><td id="129"><pre>    memset(the_pAnzInfo-&gt;m_option,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_Option));</pre></td></tr>
    <tr><td class="line_number">134</td><td id="134"><pre></pre></td><td class="line_number">130</td><td id="130"><pre></pre></td></tr>
    <tr><td class="line_number">135</td><td id="135"><pre>    <span class="c">/* ?v?????Item????????m?? */</span></pre></td><td class="line_number">131</td><td id="131"><pre>    <span class="c">/* ?v?????Item????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">136</td><td id="136"><pre></pre></td><td class="line_number">132</td><td id="132"><pre></pre></td></tr>
    <tr><td class="line_number">137</td><td id="137"><pre>    AnzMalloc(the_pMeasureItem,<span class="pt">char</span>**,argc * <span class="r">sizeof</span>(<span class="pt">char</span> *));</pre></td><td class="line_number">133</td><td id="133"><pre>    AnzMalloc(the_pMeasureItem,<span class="pt">char</span>**,argc * <span class="r">sizeof</span>(<span class="pt">char</span> *));</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9636"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(137),(5) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10625"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(133),(5) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div></td></tr>
    <tr><td class="line_number">138</td><td id="138"><pre>    <span class="r">if</span>(the_pMeasureItem == <span class="pc">NULL</span>) {</pre></td><td class="line_number">134</td><td id="134"><pre>    <span class="r">if</span>(the_pMeasureItem == <span class="pc">NULL</span>) {</pre></td></tr>
    <tr><td class="line_number">139</td><td id="139"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td><td class="line_number">135</td><td id="135"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td></tr>
    <tr><td class="line_number">140</td><td id="140" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">136</td><td id="136" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9637"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(140),(18) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">141</td><td id="141"><pre>    }</pre></td><td class="line_number">137</td><td id="137"><pre>    }</pre></td></tr>
    <tr><td class="line_number">142</td><td id="142"><pre>    memset(the_pMeasureItem,<span class="i">0</span>,argc * <span class="r">sizeof</span>(<span class="pt">char</span> *));</pre></td><td class="line_number">138</td><td id="138"><pre>    memset(the_pMeasureItem,<span class="i">0</span>,argc * <span class="r">sizeof</span>(<span class="pt">char</span> *));</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9638"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(142),(36) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10626"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(138),(36) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div></td></tr>
    <tr><td class="line_number">143</td><td id="143"><pre></pre></td><td class="line_number">139</td><td id="139"><pre></pre></td></tr>
    <tr><td class="line_number">144</td><td id="144"><pre>the_pOption = the_pAnzInfo-&gt;m_option;</pre></td><td class="line_number">140</td><td id="140"><pre>the_pOption = the_pAnzInfo-&gt;m_option;</pre></td></tr>
    <tr><td class="line_number">145</td><td id="145"><pre><span class="c">/* ?f?t?H???g?l??Option????the_pCmdOption??????? */</span></pre></td><td class="line_number">141</td><td id="141"><pre><span class="c">/* ?f?t?H???g?l??Option????the_pCmdOption??????? */</span></pre></td></tr>
    <tr><td class="line_number">146</td><td id="146"><pre>the_pOption-&gt;m_version = OFF;</pre></td><td class="line_number">142</td><td id="142"><pre>the_pOption-&gt;m_version = OFF;</pre></td></tr>
    <tr><td class="line_number">147</td><td id="147"><pre>the_pOption-&gt;m_help = OFF;</pre></td><td class="line_number">143</td><td id="143"><pre>the_pOption-&gt;m_help = OFF;</pre></td></tr>
    <tr><td class="line_number">148</td><td id="148"><pre>the_pOption-&gt;m_verbos = OFF;</pre></td><td class="line_number">144</td><td id="144"><pre>the_pOption-&gt;m_verbos = OFF;</pre></td></tr>
    <tr><td class="line_number">149</td><td id="149"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">145</td><td id="145"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">150</td><td id="150"><pre>strcpy(the_pOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">./</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">146</td><td id="146"><pre>strcpy(the_pOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">./</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">151</td><td id="151"><pre><span class="pp">#else</span></pre></td><td class="line_number">147</td><td id="147"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">152</td><td id="152"><pre>strcpy(the_pOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">.</span><span class="ch">\\</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">148</td><td id="148"><pre>strcpy(the_pOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">.</span><span class="ch">\\</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">153</td><td id="153"><pre><span class="pp">#endif</span></pre></td><td class="line_number">149</td><td id="149"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">154</td><td id="154"><pre>strcpy(the_pOption-&gt;m_filePattern,<span class="s"><span class="dl">&quot;</span><span class="k">**/*.[CcHh]</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">150</td><td id="150"><pre>strcpy(the_pOption-&gt;m_filePattern,<span class="s"><span class="dl">&quot;</span><span class="k">**/*.[CcHh]</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">155</td><td id="155"><pre>strcpy(the_pOption-&gt;m_symbolFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">151</td><td id="151"><pre>strcpy(the_pOption-&gt;m_symbolFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">156</td><td id="156"><pre>strcpy(the_pOption-&gt;m_optionFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">152</td><td id="152"><pre>strcpy(the_pOption-&gt;m_optionFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">157</td><td id="157"><pre>the_pOption-&gt;m_fileLOC = ON;</pre></td><td class="line_number">153</td><td id="153"><pre>the_pOption-&gt;m_fileLOC = ON;</pre></td></tr>
    <tr><td class="line_number">158</td><td id="158"><pre>the_pOption-&gt;m_redundancy = OFF;</pre></td><td class="line_number">154</td><td id="154"><pre>the_pOption-&gt;m_redundancy = OFF;</pre></td></tr>
    <tr><td class="line_number">159</td><td id="159"><pre>the_pOption-&gt;m_funcNum = OFF;</pre></td><td class="line_number">155</td><td id="155"><pre>the_pOption-&gt;m_funcNum = OFF;</pre></td></tr>
    <tr><td class="line_number">160</td><td id="160"><pre>the_pOption-&gt;m_eloc = OFF;</pre></td><td class="line_number">156</td><td id="156"><pre>the_pOption-&gt;m_eloc = OFF;</pre></td></tr>
    <tr><td class="line_number">161</td><td id="161"><pre>the_pOption-&gt;m_mccabe = OFF;</pre></td><td class="line_number">157</td><td id="157"><pre>the_pOption-&gt;m_mccabe = OFF;</pre></td></tr>
    <tr><td class="line_number">162</td><td id="162"><pre>the_pOption-&gt;m_similar = OFF;</pre></td><td class="line_number">158</td><td id="158"><pre>the_pOption-&gt;m_similar = OFF;</pre></td></tr>
    <tr><td class="line_number">163</td><td id="163"><pre>the_pOption-&gt;m_trend = OFF;</pre></td><td class="line_number">159</td><td id="159"><pre>the_pOption-&gt;m_trend = OFF;</pre></td></tr>
    <tr><td class="line_number">164</td><td id="164"><pre>the_pOption-&gt;m_funcTrend = OFF;</pre></td><td class="line_number">160</td><td id="160"><pre>the_pOption-&gt;m_funcTrend = OFF;</pre></td></tr>
    <tr><td class="line_number">165</td><td id="165"><pre>the_pOption-&gt;m_symThresh = <span class="i">70</span>;</pre></td><td class="line_number">161</td><td id="161"><pre>the_pOption-&gt;m_symThresh = <span class="i">70</span>;</pre></td></tr>
    <tr><td class="line_number">166</td><td id="166"><pre>the_pOption-&gt;m_minThresh = <span class="i">2</span>;</pre></td><td class="line_number">162</td><td id="162"><pre>the_pOption-&gt;m_minThresh = <span class="i">2</span>;</pre></td></tr>
    <tr><td class="line_number">167</td><td id="167"><pre></pre></td><td class="line_number">163</td><td id="163"><pre></pre></td></tr>
    <tr><td class="line_number">168</td><td id="168"><pre><span class="c">/* ?R?}???h???C??????????Option????????????m?? */</span></pre></td><td class="line_number">164</td><td id="164"><pre><span class="c">/* ?R?}???h???C??????????Option????????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">169</td><td id="169"><pre>    AnzMalloc(the_pCmdOption,ST_Option*,<span class="r">sizeof</span>(ST_Option));</pre></td><td class="line_number">165</td><td id="165"><pre>    AnzMalloc(the_pCmdOption,ST_Option*,<span class="r">sizeof</span>(ST_Option));</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9639"><a href="/result/view_message/1/2/7?message_id=3430&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(169),(59) :Msg(2:3430) Macro argument expression requires parentheses.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10627"><a href="/result/view_message/1/2/11?message_id=3430&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(165),(59) :Msg(2:3430) Macro argument expression requires parentheses.</b></a></div></td></tr>
    <tr><td class="line_number">170</td><td id="170"><pre>    <span class="r">if</span>(the_pCmdOption == <span class="pc">NULL</span>){</pre></td><td class="line_number">166</td><td id="166"><pre>    <span class="r">if</span>(the_pCmdOption == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">171</td><td id="171"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td><td class="line_number">167</td><td id="167"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td></tr>
    <tr><td class="line_number">172</td><td id="172" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">168</td><td id="168" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9640"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(172),(18) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">173</td><td id="173"><pre>    }</pre></td><td class="line_number">169</td><td id="169"><pre>    }</pre></td></tr>
    <tr><td class="line_number">174</td><td id="174"><pre>    memset(the_pCmdOption,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_Option));</pre></td><td class="line_number">170</td><td id="170"><pre>    memset(the_pCmdOption,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_Option));</pre></td></tr>
    <tr><td class="line_number">175</td><td id="175"><pre>    <span class="c">/* ?f?t?H???g?l??Option????the_pCmdOption??????? */</span></pre></td><td class="line_number">171</td><td id="171"><pre>    <span class="c">/* ?f?t?H???g?l??Option????the_pCmdOption??????? */</span></pre></td></tr>
    <tr><td class="line_number">176</td><td id="176"><pre>    the_pCmdOption-&gt;m_version = OFF;</pre></td><td class="line_number">172</td><td id="172"><pre>    the_pCmdOption-&gt;m_version = OFF;</pre></td></tr>
    <tr><td class="line_number">177</td><td id="177"><pre>    the_pCmdOption-&gt;m_help = OFF;</pre></td><td class="line_number">173</td><td id="173"><pre>    the_pCmdOption-&gt;m_help = OFF;</pre></td></tr>
    <tr><td class="line_number">178</td><td id="178"><pre>    the_pCmdOption-&gt;m_verbos = OFF;</pre></td><td class="line_number">174</td><td id="174"><pre>    the_pCmdOption-&gt;m_verbos = OFF;</pre></td></tr>
    <tr><td class="line_number">179</td><td id="179"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">175</td><td id="175"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">180</td><td id="180"><pre>    strcpy(the_pCmdOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">./</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">176</td><td id="176"><pre>    strcpy(the_pCmdOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">./</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">181</td><td id="181"><pre><span class="pp">#else</span></pre></td><td class="line_number">177</td><td id="177"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">182</td><td id="182"><pre>    strcpy(the_pCmdOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">.</span><span class="ch">\\</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">178</td><td id="178"><pre>    strcpy(the_pCmdOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">.</span><span class="ch">\\</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">183</td><td id="183"><pre><span class="pp">#endif</span></pre></td><td class="line_number">179</td><td id="179"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">184</td><td id="184"><pre>    strcpy(the_pCmdOption-&gt;m_filePattern,<span class="s"><span class="dl">&quot;</span><span class="k">**/*.[CcHh]</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">180</td><td id="180"><pre>    strcpy(the_pCmdOption-&gt;m_filePattern,<span class="s"><span class="dl">&quot;</span><span class="k">**/*.[CcHh]</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">185</td><td id="185"><pre>    strcpy(the_pCmdOption-&gt;m_symbolFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">181</td><td id="181"><pre>    strcpy(the_pCmdOption-&gt;m_symbolFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">186</td><td id="186"><pre>    strcpy(the_pCmdOption-&gt;m_optionFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">182</td><td id="182"><pre>    strcpy(the_pCmdOption-&gt;m_optionFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">187</td><td id="187"><pre>    the_pCmdOption-&gt;m_fileLOC = ON;</pre></td><td class="line_number">183</td><td id="183"><pre>    the_pCmdOption-&gt;m_fileLOC = ON;</pre></td></tr>
    <tr><td class="line_number">188</td><td id="188"><pre>    the_pCmdOption-&gt;m_redundancy = OFF;</pre></td><td class="line_number">184</td><td id="184"><pre>    the_pCmdOption-&gt;m_redundancy = OFF;</pre></td></tr>
    <tr><td class="line_number">189</td><td id="189"><pre>    the_pCmdOption-&gt;m_funcNum = OFF;</pre></td><td class="line_number">185</td><td id="185"><pre>    the_pCmdOption-&gt;m_funcNum = OFF;</pre></td></tr>
    <tr><td class="line_number">190</td><td id="190"><pre>    the_pCmdOption-&gt;m_eloc = OFF;</pre></td><td class="line_number">186</td><td id="186"><pre>    the_pCmdOption-&gt;m_eloc = OFF;</pre></td></tr>
    <tr><td class="line_number">191</td><td id="191"><pre>    the_pCmdOption-&gt;m_mccabe = OFF;</pre></td><td class="line_number">187</td><td id="187"><pre>    the_pCmdOption-&gt;m_mccabe = OFF;</pre></td></tr>
    <tr><td class="line_number">192</td><td id="192"><pre>    the_pCmdOption-&gt;m_similar = OFF;</pre></td><td class="line_number">188</td><td id="188"><pre>    the_pCmdOption-&gt;m_similar = OFF;</pre></td></tr>
    <tr><td class="line_number">193</td><td id="193"><pre>    the_pCmdOption-&gt;m_trend = OFF;</pre></td><td class="line_number">189</td><td id="189"><pre>    the_pCmdOption-&gt;m_trend = OFF;</pre></td></tr>
    <tr><td class="line_number">194</td><td id="194"><pre>    the_pCmdOption-&gt;m_funcTrend = OFF;</pre></td><td class="line_number">190</td><td id="190"><pre>    the_pCmdOption-&gt;m_funcTrend = OFF;</pre></td></tr>
    <tr><td class="line_number">195</td><td id="195"><pre>    the_pCmdOption-&gt;m_symThresh = <span class="i">70</span>;</pre></td><td class="line_number">191</td><td id="191"><pre>    the_pCmdOption-&gt;m_symThresh = <span class="i">70</span>;</pre></td></tr>
    <tr><td class="line_number">196</td><td id="196"><pre>    the_pCmdOption-&gt;m_minThresh = <span class="i">2</span>;</pre></td><td class="line_number">192</td><td id="192"><pre>    the_pCmdOption-&gt;m_minThresh = <span class="i">2</span>;</pre></td></tr>
    <tr><td class="line_number">197</td><td id="197"><pre></pre></td><td class="line_number">193</td><td id="193"><pre></pre></td></tr>
    <tr><td class="line_number">198</td><td id="198"><pre>    <span class="c">/* ?R?}???h???C??????????? */</span></pre></td><td class="line_number">194</td><td id="194"><pre>    <span class="c">/* ?R?}???h???C??????????? */</span></pre></td></tr>
    <tr><td class="line_number">199</td><td id="199"><pre>    the_iRet = AnalyzeCmdLine(argc,argv,the_pCmdOption,the_pMeasureItem);</pre></td><td class="line_number">195</td><td id="195"><pre>    the_iRet = AnalyzeCmdLine(argc,argv,the_pCmdOption,the_pMeasureItem);</pre></td></tr>
    <tr><td class="line_number">200</td><td id="200"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">196</td><td id="196"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">201</td><td id="201" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">197</td><td id="197" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9641"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(201),(18) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">202</td><td id="202"><pre>    }</pre></td><td class="line_number">198</td><td id="198"><pre>    }</pre></td></tr>
    <tr><td class="line_number">203</td><td id="203"><pre>    <span class="r">if</span>(g_bOutTime) {</pre></td><td class="line_number">199</td><td id="199"><pre>    <span class="r">if</span>(g_bOutTime) {</pre></td></tr>
    <tr><td class="line_number">204</td><td id="204"><pre>        ftime(&amp;the_st);</pre></td><td class="line_number">200</td><td id="200"><pre>        ftime(&amp;the_st);</pre></td></tr>
    <tr><td class="line_number">205</td><td id="205"><pre>    }</pre></td><td class="line_number">201</td><td id="201"><pre>    }</pre></td></tr>
    <tr><td class="line_number">206</td><td id="206"><pre></pre></td><td class="line_number">202</td><td id="202"><pre></pre></td></tr>
    <tr><td class="line_number">207</td><td id="207"><pre>    <span class="c">/* Option??????????? */</span></pre></td><td class="line_number">203</td><td id="203"><pre>    <span class="c">/* Option??????????? */</span></pre></td></tr>
    <tr><td class="line_number">208</td><td id="208"><pre>    the_iRet = SetOption(the_pAnzInfo,the_pCmdOption);</pre></td><td class="line_number">204</td><td id="204"><pre>    the_iRet = SetOption(the_pAnzInfo,the_pCmdOption);</pre></td></tr>
    <tr><td class="line_number">209</td><td id="209"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">205</td><td id="205"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">210</td><td id="210" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">206</td><td id="206" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9642"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(210),(18) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">211</td><td id="211"><pre>    }</pre></td><td class="line_number">207</td><td id="207"><pre>    }</pre></td></tr>
    <tr><td class="line_number">212</td><td id="212"><pre>    <span class="c">/* ?v?????????????? */</span></pre></td><td class="line_number">208</td><td id="208"><pre>    <span class="c">/* ?v?????????????? */</span></pre></td></tr>
    <tr><td class="line_number">213</td><td id="213"><pre>    the_iRet = GetMeasureType(the_pOption,&amp;the_iMeasureType);</pre></td><td class="line_number">209</td><td id="209"><pre>    the_iRet = GetMeasureType(the_pOption,&amp;the_iMeasureType);</pre></td></tr>
    <tr><td class="line_number">214</td><td id="214"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">210</td><td id="210"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">215</td><td id="215" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">211</td><td id="211" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9643"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(215),(18) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">216</td><td id="216"><pre>    }</pre></td><td class="line_number">212</td><td id="212"><pre>    }</pre></td></tr>
    <tr><td class="line_number">217</td><td id="217"><pre>    <span class="c">/* ?R?}???h???C??????????Option??????????????? */</span></pre></td><td class="line_number">213</td><td id="213"><pre>    <span class="c">/* ?R?}???h???C??????????Option??????????????? */</span></pre></td></tr>
    <tr><td class="line_number">218</td><td id="218"><pre>    <span class="r">if</span>(the_pCmdOption != <span class="pc">NULL</span>){</pre></td><td class="line_number">214</td><td id="214"><pre>    <span class="r">if</span>(the_pCmdOption != <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9644"><a href="/result/view_message/1/2/7?message_id=3355&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(218),(23) :Msg(3:3355) The result of this logical operation is always 'true'.</b></a></div><div class="common_warning" id="warning_9645"><a href="/result/view_message/1/2/7?message_id=3358&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(218),(23) :Msg(3:3358) The value of this 'if' control expression is always 'true'.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10628"><a href="/result/view_message/1/2/11?message_id=3355&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(214),(23) :Msg(3:3355) The result of this logical operation is always 'true'.</b></a></div><div class="common_warning" id="warning_10629"><a href="/result/view_message/1/2/11?message_id=3358&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(214),(23) :Msg(3:3358) The value of this 'if' control expression is always 'true'.</b></a></div></td></tr>
    <tr><td class="line_number">219</td><td id="219"><pre>        free(the_pCmdOption);</pre></td><td class="line_number">215</td><td id="215"><pre>        free(the_pCmdOption);</pre></td></tr>
    <tr><td class="line_number">220</td><td id="220"><pre>        the_pCmdOption = <span class="pc">NULL</span>;</pre></td><td class="line_number">216</td><td id="216"><pre>        the_pCmdOption = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">221</td><td id="221"><pre>    }</pre></td><td class="line_number">217</td><td id="217"><pre>    }</pre></td></tr>
    <tr><td class="line_number">222</td><td id="222"><pre>    <span class="c">/* ?v???????`?F?b?N???? */</span></pre></td><td class="line_number">218</td><td id="218"><pre>    <span class="c">/* ?v???????`?F?b?N???? */</span></pre></td></tr>
    <tr><td class="line_number">223</td><td id="223"><pre>    the_iRet = CheckMeasureItem(the_pMeasureItem,the_iMeasureType);</pre></td><td class="line_number">219</td><td id="219"><pre>    the_iRet = CheckMeasureItem(the_pMeasureItem,the_iMeasureType);</pre></td></tr>
    <tr><td class="line_number">224</td><td id="224"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">220</td><td id="220"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">225</td><td id="225" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">221</td><td id="221" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9646"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(225),(18) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">226</td><td id="226"><pre>    }</pre></td><td class="line_number">222</td><td id="222"><pre>    }</pre></td></tr>
    <tr><td class="line_number">227</td><td id="227" class="added_line"><pre>    <span class="c">/* ?G???[File???J?? */</span></pre></td><td class="line_number">223</td><td id="223" class="deleted_line"><pre>   </pre></td></tr>
    <tr><td class="line_number">228</td><td id="228" class="added_line"><pre>    the_iRet = OpenErrorFile(the_pOption);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">229</td><td id="229" class="added_line"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">230</td><td id="230" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9647"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(230),(18) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">231</td><td id="231" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">232</td><td id="232"><pre>    <span class="c">/* ????????t?@?C????? */</span></pre></td><td class="line_number">224</td><td id="224"><pre>    <span class="c">/* ????????t?@?C????? */</span></pre></td></tr>
    <tr><td class="line_number">233</td><td id="233" class="added_line"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_TREND_MEASURE) {</pre></td><td class="line_number">225</td><td id="225" class="deleted_line"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_TREND_MEASURE)    {</pre></td></tr>
    <tr><td class="line_number">234</td><td id="234"><pre>        <span class="pt">int</span> the_iType = -<span class="i">1</span>;</pre></td><td class="line_number">226</td><td id="226"><pre>        <span class="pt">int</span> the_iType = -<span class="i">1</span>;</pre></td></tr>
    <tr><td class="line_number">235</td><td id="235"><pre>        <span class="pt">int</span> the_pPos = -<span class="i">1</span>;</pre></td><td class="line_number">227</td><td id="227"><pre>        <span class="pt">int</span> the_pPos = -<span class="i">1</span>;</pre></td></tr>
    <tr><td class="line_number">236</td><td id="236"><pre>        isDirOrFile(*the_pMeasureItem,&amp;the_iType);</pre></td><td class="line_number">228</td><td id="228"><pre>        isDirOrFile(*the_pMeasureItem,&amp;the_iType);</pre></td></tr>
    <tr><td class="line_number">237</td><td id="237"><pre>        <span class="r">if</span>(the_iType == ANZ_FILE) {</pre></td><td class="line_number">229</td><td id="229"><pre>        <span class="r">if</span>(the_iType == ANZ_FILE) {</pre></td></tr>
    <tr><td class="line_number">238</td><td id="238"><pre>            g_bTrendFile = <span class="pc">true</span>;</pre></td><td class="line_number">230</td><td id="230"><pre>            g_bTrendFile = <span class="pc">true</span>;</pre></td></tr>
    <tr><td class="line_number">239</td><td id="239"><pre>            <span class="c">/* the_pMeasureItme??Path?????????? */</span></pre></td><td class="line_number">231</td><td id="231"><pre>            <span class="c">/* the_pMeasureItme??Path?????????? */</span></pre></td></tr>
    <tr><td class="line_number">240</td><td id="240"><pre>            GetPathPos(*the_pMeasureItem,&amp;the_pPos);</pre></td><td class="line_number">232</td><td id="232"><pre>            GetPathPos(*the_pMeasureItem,&amp;the_pPos);</pre></td></tr>
    <tr><td class="line_number">241</td><td id="241"><pre>            g_szNVPath[the_pPos] = <span class="ch">'\0'</span>;</pre></td><td class="line_number">233</td><td id="233"><pre>            g_szNVPath[the_pPos] = <span class="ch">'\0'</span>;</pre></td></tr>
    <tr><td class="line_number">242</td><td id="242"><pre>            <span class="r">if</span>(the_pPos &gt; <span class="i">0</span>) {</pre></td><td class="line_number">234</td><td id="234"><pre>            <span class="r">if</span>(the_pPos &gt; <span class="i">0</span>) {</pre></td></tr>
    <tr><td class="line_number">243</td><td id="243"><pre>                *the_pMeasureItem = *the_pMeasureItem + the_pPos + <span class="i">1</span>;</pre></td><td class="line_number">235</td><td id="235"><pre>                *the_pMeasureItem = *the_pMeasureItem + the_pPos + <span class="i">1</span>;</pre></td></tr>
    <tr><td class="line_number">244</td><td id="244"><pre>            }</pre></td><td class="line_number">236</td><td id="236"><pre>            }</pre></td></tr>
    <tr><td class="line_number">245</td><td id="245"><pre></pre></td><td class="line_number">237</td><td id="237"><pre></pre></td></tr>
    <tr><td class="line_number">246</td><td id="246"><pre>            GetPathPos(*(the_pMeasureItem + <span class="i">1</span>),&amp;the_pPos);</pre></td><td class="line_number">238</td><td id="238"><pre>            GetPathPos(*(the_pMeasureItem + <span class="i">1</span>),&amp;the_pPos);</pre></td></tr>
    <tr><td class="line_number">247</td><td id="247"><pre>            g_szOVPath[the_pPos] = <span class="ch">'\0'</span>;</pre></td><td class="line_number">239</td><td id="239"><pre>            g_szOVPath[the_pPos] = <span class="ch">'\0'</span>;</pre></td></tr>
    <tr><td class="line_number">248</td><td id="248"><pre>            <span class="r">if</span>(the_pPos &gt; <span class="i">0</span>) {</pre></td><td class="line_number">240</td><td id="240"><pre>            <span class="r">if</span>(the_pPos &gt; <span class="i">0</span>) {</pre></td></tr>
    <tr><td class="line_number">249</td><td id="249"><pre>                *(the_pMeasureItem + <span class="i">1</span>) =*(the_pMeasureItem + <span class="i">1</span>) + the_pPos + <span class="i">1</span>;</pre></td><td class="line_number">241</td><td id="241"><pre>                *(the_pMeasureItem + <span class="i">1</span>) =*(the_pMeasureItem + <span class="i">1</span>) + the_pPos + <span class="i">1</span>;</pre></td></tr>
    <tr><td class="line_number">250</td><td id="250"><pre>            }</pre></td><td class="line_number">242</td><td id="242"><pre>            }</pre></td></tr>
    <tr><td class="line_number">251</td><td id="251"><pre>            <span class="c">/* g_szNVPath?Ag_szOVPath??????p?X???X???? */</span></pre></td><td class="line_number">243</td><td id="243"><pre>            <span class="c">/* g_szNVPath?Ag_szOVPath??????p?X???X???? */</span></pre></td></tr>
    <tr><td class="line_number">252</td><td id="252"><pre>            the_iRet = ResetTrendPath(g_szNVPath);</pre></td><td class="line_number">244</td><td id="244"><pre>            the_iRet = ResetTrendPath(g_szNVPath);</pre></td></tr>
    <tr><td class="line_number">253</td><td id="253"><pre>            the_iRet = ResetTrendPath(g_szOVPath);</pre></td><td class="line_number">245</td><td id="245"><pre>            the_iRet = ResetTrendPath(g_szOVPath);</pre></td></tr>
    <tr><td class="line_number">254</td><td id="254"><pre>            <span class="r">if</span>(the_iRet != ANZ_SUCCESS) {</pre></td><td class="line_number">246</td><td id="246"><pre>            <span class="r">if</span>(the_iRet != ANZ_SUCCESS) {</pre></td></tr>
    <tr><td class="line_number">255</td><td id="255" class="added_line"><pre>                <span class="r">goto</span> EXIT;</pre></td><td class="line_number">247</td><td id="247" class="deleted_line"><pre>                <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9648"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(255),(26) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">256</td><td id="256"><pre>            }</pre></td><td class="line_number">248</td><td id="248"><pre>            }</pre></td></tr>
    <tr><td class="line_number">257</td><td id="257"><pre>        }</pre></td><td class="line_number">249</td><td id="249"><pre>        }</pre></td></tr>
    <tr><td class="line_number">258</td><td id="258"><pre>    }</pre></td><td class="line_number">250</td><td id="250"><pre>    }</pre></td></tr>
    <tr><td class="line_number">259</td><td id="259"><pre>    <span class="c">/* ?v?????File??List???????? */</span></pre></td><td class="line_number">251</td><td id="251"><pre>    <span class="c">/* ?v?????File??List???????? */</span></pre></td></tr>
    <tr><td class="line_number">260</td><td id="260"><pre>    the_iRet = MakeMeasureFilesList(the_pAnzInfo,(<span class="di">const</span> <span class="pt">char</span>**)the_pMeasureItem);</pre></td><td class="line_number">252</td><td id="252"><pre>    the_iRet = MakeMeasureFilesList(the_pAnzInfo,(<span class="di">const</span> <span class="pt">char</span>**)the_pMeasureItem);</pre></td></tr>
    <tr><td class="line_number">261</td><td id="261"><pre>    <span class="r">if</span>(the_iRet == ANZ_NO_MEASURE_FILES){</pre></td><td class="line_number">253</td><td id="253"><pre>    <span class="r">if</span>(the_iRet == ANZ_NO_MEASURE_FILES){</pre></td></tr>
    <tr><td class="line_number">262</td><td id="262"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_NO_FILES);</pre></td><td class="line_number">254</td><td id="254"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_NO_FILES);</pre></td></tr>
    <tr><td class="line_number">263</td><td id="263"><pre>    }</pre></td><td class="line_number">255</td><td id="255"><pre>    }</pre></td></tr>
    <tr><td class="line_number">264</td><td id="264"><pre>    <span class="r">if</span>(the_iRet == ANZ_ERR_MEMORY_FAILED){</pre></td><td class="line_number">256</td><td id="256"><pre>    <span class="r">if</span>(the_iRet == ANZ_ERR_MEMORY_FAILED){</pre></td></tr>
    <tr><td class="line_number">265</td><td id="265"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MOMORY_FAILED);</pre></td><td class="line_number">257</td><td id="257"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MOMORY_FAILED);</pre></td></tr>
    <tr><td class="line_number">266</td><td id="266"><pre>    }</pre></td><td class="line_number">258</td><td id="258"><pre>    }</pre></td></tr>
    <tr><td class="line_number">267</td><td id="267"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">259</td><td id="259"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">268</td><td id="268" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">260</td><td id="260" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9649"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(268),(18) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">269</td><td id="269"><pre>    }</pre></td><td class="line_number">261</td><td id="261"><pre>    }</pre></td></tr>
    <tr><td class="line_number">270</td><td id="270"><pre>    <span class="c">/* ?o?R???????????? */</span></pre></td><td class="line_number">262</td><td id="262"><pre>    <span class="c">/* ?o?R???????????? */</span></pre></td></tr>
    <tr><td class="line_number">271</td><td id="271"><pre>    <span class="c">/* FileLOC?v??Option???w?????? */</span></pre></td><td class="line_number">263</td><td id="263"><pre>    <span class="c">/* FileLOC?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">272</td><td id="272"><pre>    <span class="r">if</span>(the_pOption-&gt;m_fileLOC == ON){</pre></td><td class="line_number">264</td><td id="264"><pre>    <span class="r">if</span>(the_pOption-&gt;m_fileLOC == ON){</pre></td></tr>
    <tr><td class="line_number">273</td><td id="273"><pre>        strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileLOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">265</td><td id="265"><pre>        strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileLOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">274</td><td id="274"><pre>    }</pre></td><td class="line_number">266</td><td id="266"><pre>    }</pre></td></tr>
    <tr><td class="line_number">275</td><td id="275"><pre>    <span class="c">/* File???x?v??Option???w?????? */</span></pre></td><td class="line_number">267</td><td id="267"><pre>    <span class="c">/* File???x?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">276</td><td id="276"><pre>    <span class="r">if</span>(the_pOption-&gt;m_redundancy == ON){</pre></td><td class="line_number">268</td><td id="268"><pre>    <span class="r">if</span>(the_pOption-&gt;m_redundancy == ON){</pre></td></tr>
    <tr><td class="line_number">277</td><td id="277"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">269</td><td id="269"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9650"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9651"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_9652"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9653"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9654"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9655"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9656"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9657"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_9658"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_9659"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_9660"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_9661"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10630"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10631"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_10632"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10633"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10634"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10635"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10636"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10637"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_10638"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_10639"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_10640"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_10641"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td></tr>
    <tr><td class="line_number">278</td><td id="278"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">270</td><td id="270"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">279</td><td id="279"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">271</td><td id="271"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">280</td><td id="280"><pre>        }</pre></td><td class="line_number">272</td><td id="272"><pre>        }</pre></td></tr>
    <tr><td class="line_number">281</td><td id="281"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">273</td><td id="273"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9662"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(281),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10642"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(273),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">282</td><td id="282"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">274</td><td id="274"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">283</td><td id="283"><pre>        }</pre></td><td class="line_number">275</td><td id="275"><pre>        }</pre></td></tr>
    <tr><td class="line_number">284</td><td id="284"><pre>    }</pre></td><td class="line_number">276</td><td id="276"><pre>    }</pre></td></tr>
    <tr><td class="line_number">285</td><td id="285"><pre>    <span class="c">/* ??????v??Option???w?????? */</span></pre></td><td class="line_number">277</td><td id="277"><pre>    <span class="c">/* ??????v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">286</td><td id="286"><pre>    <span class="r">if</span>(the_pOption-&gt;m_funcNum){</pre></td><td class="line_number">278</td><td id="278"><pre>    <span class="r">if</span>(the_pOption-&gt;m_funcNum){</pre></td></tr>
    <tr><td class="line_number">287</td><td id="287"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">279</td><td id="279"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9663"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9664"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_9665"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9666"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9667"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9668"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9669"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9670"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_9671"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_9672"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_9673"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_9674"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10643"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10644"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_10645"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10646"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10647"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10648"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10649"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10650"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_10651"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_10652"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_10653"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_10654"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td></tr>
    <tr><td class="line_number">288</td><td id="288"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">280</td><td id="280"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">289</td><td id="289"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">281</td><td id="281"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">290</td><td id="290"><pre>        }</pre></td><td class="line_number">282</td><td id="282"><pre>        }</pre></td></tr>
    <tr><td class="line_number">291</td><td id="291"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">283</td><td id="283"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9675"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(291),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10655"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(283),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">292</td><td id="292"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">284</td><td id="284"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">293</td><td id="293"><pre>        }</pre></td><td class="line_number">285</td><td id="285"><pre>        }</pre></td></tr>
    <tr><td class="line_number">294</td><td id="294"><pre>    }</pre></td><td class="line_number">286</td><td id="286"><pre>    }</pre></td></tr>
    <tr><td class="line_number">295</td><td id="295"><pre>    <span class="c">/* ELOC?v??Option???w?????? */</span></pre></td><td class="line_number">287</td><td id="287"><pre>    <span class="c">/* ELOC?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">296</td><td id="296"><pre>    <span class="r">if</span>(the_pOption-&gt;m_eloc){</pre></td><td class="line_number">288</td><td id="288"><pre>    <span class="r">if</span>(the_pOption-&gt;m_eloc){</pre></td></tr>
    <tr><td class="line_number">297</td><td id="297"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">289</td><td id="289"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9676"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9677"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_9678"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9679"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9680"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9681"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9682"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9683"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_9684"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_9685"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_9686"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_9687"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10656"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10657"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_10658"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10659"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10660"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10661"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10662"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10663"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_10664"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_10665"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_10666"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_10667"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td></tr>
    <tr><td class="line_number">298</td><td id="298"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">290</td><td id="290"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">299</td><td id="299"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">???ELOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">291</td><td id="291"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">???ELOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">300</td><td id="300"><pre>        }</pre></td><td class="line_number">292</td><td id="292"><pre>        }</pre></td></tr>
    <tr><td class="line_number">301</td><td id="301"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">293</td><td id="293"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9688"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(301),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10668"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(293),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">302</td><td id="302"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">???ELOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">294</td><td id="294"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">???ELOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">303</td><td id="303"><pre>        }</pre></td><td class="line_number">295</td><td id="295"><pre>        }</pre></td></tr>
    <tr><td class="line_number">304</td><td id="304"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">296</td><td id="296"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9689"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9690"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_9691"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9692"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9693"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9694"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9695"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9696"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_9697"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_9698"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_9699"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_9700"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10669"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10670"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_10671"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10672"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10673"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10674"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10675"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10676"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_10677"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_10678"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_10679"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_10680"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td></tr>
    <tr><td class="line_number">305</td><td id="305"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">297</td><td id="297"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">306</td><td id="306"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileELOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">298</td><td id="298"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileELOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">307</td><td id="307"><pre>        }</pre></td><td class="line_number">299</td><td id="299"><pre>        }</pre></td></tr>
    <tr><td class="line_number">308</td><td id="308"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">300</td><td id="300"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9701"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(308),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10681"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(300),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">309</td><td id="309"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileELOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">301</td><td id="301"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileELOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">310</td><td id="310"><pre>        }</pre></td><td class="line_number">302</td><td id="302"><pre>        }</pre></td></tr>
    <tr><td class="line_number">311</td><td id="311"><pre>    }</pre></td><td class="line_number">303</td><td id="303"><pre>    }</pre></td></tr>
    <tr><td class="line_number">312</td><td id="312"><pre></pre></td><td class="line_number">304</td><td id="304"><pre></pre></td></tr>
    <tr><td class="line_number">313</td><td id="313"><pre>    <span class="c">/* ???G?x?v??Option???w?????? */</span></pre></td><td class="line_number">305</td><td id="305"><pre>    <span class="c">/* ???G?x?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">314</td><td id="314"><pre>    <span class="r">if</span>(the_pOption-&gt;m_redundancy){</pre></td><td class="line_number">306</td><td id="306"><pre>    <span class="r">if</span>(the_pOption-&gt;m_redundancy){</pre></td></tr>
    <tr><td class="line_number">315</td><td id="315"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">307</td><td id="307"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9702"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9703"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_9704"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9705"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9706"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9707"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9708"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9709"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_9710"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_9711"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_9712"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_9713"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10682"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10683"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_10684"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10685"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10686"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10687"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10688"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10689"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_10690"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_10691"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_10692"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_10693"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td></tr>
    <tr><td class="line_number">316</td><td id="316"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">308</td><td id="308"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">317</td><td id="317"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">McCabe????G?x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">309</td><td id="309"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">McCabe????G?x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">318</td><td id="318"><pre>        }</pre></td><td class="line_number">310</td><td id="310"><pre>        }</pre></td></tr>
    <tr><td class="line_number">319</td><td id="319"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">311</td><td id="311"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9714"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(319),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10694"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(311),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">320</td><td id="320"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">McCabe????G?x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">312</td><td id="312"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">McCabe????G?x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">321</td><td id="321"><pre>        }</pre></td><td class="line_number">313</td><td id="313"><pre>        }</pre></td></tr>
    <tr><td class="line_number">322</td><td id="322"><pre></pre></td><td class="line_number">314</td><td id="314"><pre></pre></td></tr>
    <tr><td class="line_number">323</td><td id="323"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">315</td><td id="315"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9715"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9716"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_9717"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9718"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9719"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9720"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9721"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9722"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_9723"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_9724"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_9725"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_9726"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10695"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10696"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_10697"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10698"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10699"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10700"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10701"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10702"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_10703"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_10704"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_10705"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_10706"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td></tr>
    <tr><td class="line_number">324</td><td id="324"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">316</td><td id="316"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">325</td><td id="325"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???G?x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">317</td><td id="317"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???G?x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">326</td><td id="326"><pre>        }</pre></td><td class="line_number">318</td><td id="318"><pre>        }</pre></td></tr>
    <tr><td class="line_number">327</td><td id="327"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">319</td><td id="319"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9727"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(327),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10707"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(319),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">328</td><td id="328"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???G?x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">320</td><td id="320"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???G?x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">329</td><td id="329"><pre>        }</pre></td><td class="line_number">321</td><td id="321"><pre>        }</pre></td></tr>
    <tr><td class="line_number">330</td><td id="330"><pre>    }</pre></td><td class="line_number">322</td><td id="322"><pre>    }</pre></td></tr>
    <tr><td class="line_number">331</td><td id="331"><pre></pre></td><td class="line_number">323</td><td id="323"><pre></pre></td></tr>
    <tr><td class="line_number">332</td><td id="332"><pre>    <span class="c">/* ?????(1)?v??Option???w?????? */</span></pre></td><td class="line_number">324</td><td id="324"><pre>    <span class="c">/* ?????(1)?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">333</td><td id="333"><pre>    <span class="r">if</span>(the_pOption-&gt;m_trend){</pre></td><td class="line_number">325</td><td id="325"><pre>    <span class="r">if</span>(the_pOption-&gt;m_trend){</pre></td></tr>
    <tr><td class="line_number">334</td><td id="334"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">326</td><td id="326"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9728"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9729"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_9730"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9731"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9732"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9733"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9734"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9735"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_9736"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_9737"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_9738"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_9739"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10708"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10709"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_10710"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10711"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10712"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10713"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10714"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10715"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_10716"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_10717"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_10718"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_10719"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td></tr>
    <tr><td class="line_number">335</td><td id="335"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">327</td><td id="327"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">336</td><td id="336"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(1)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">328</td><td id="328"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(1)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">337</td><td id="337"><pre>        }</pre></td><td class="line_number">329</td><td id="329"><pre>        }</pre></td></tr>
    <tr><td class="line_number">338</td><td id="338"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">330</td><td id="330"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9740"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(338),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10720"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(330),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">339</td><td id="339"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(1)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">331</td><td id="331"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(1)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">340</td><td id="340"><pre>        }</pre></td><td class="line_number">332</td><td id="332"><pre>        }</pre></td></tr>
    <tr><td class="line_number">341</td><td id="341"><pre>        strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(1)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">333</td><td id="333"><pre>        strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(1)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">342</td><td id="342"><pre>    }</pre></td><td class="line_number">334</td><td id="334"><pre>    }</pre></td></tr>
    <tr><td class="line_number">343</td><td id="343"><pre></pre></td><td class="line_number">335</td><td id="335"><pre></pre></td></tr>
    <tr><td class="line_number">344</td><td id="344"><pre>    <span class="c">/* ?????(2)?v??Option???w?????? */</span></pre></td><td class="line_number">336</td><td id="336"><pre>    <span class="c">/* ?????(2)?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">345</td><td id="345"><pre>    <span class="r">if</span>(the_pOption-&gt;m_funcTrend){</pre></td><td class="line_number">337</td><td id="337"><pre>    <span class="r">if</span>(the_pOption-&gt;m_funcTrend){</pre></td></tr>
    <tr><td class="line_number">346</td><td id="346"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">338</td><td id="338"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9741"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9742"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_9743"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9744"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9745"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9746"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9747"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9748"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_9749"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_9750"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_9751"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_9752"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10721"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10722"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_10723"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10724"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10725"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10726"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10727"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10728"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_10729"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_10730"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_10731"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_10732"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td></tr>
    <tr><td class="line_number">347</td><td id="347"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">339</td><td id="339"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">348</td><td id="348"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">????????</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">340</td><td id="340"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">????????</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">349</td><td id="349"><pre>        }</pre></td><td class="line_number">341</td><td id="341"><pre>        }</pre></td></tr>
    <tr><td class="line_number">350</td><td id="350"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">342</td><td id="342"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9753"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(350),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10733"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(342),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">351</td><td id="351"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">????????</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">343</td><td id="343"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">????????</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">352</td><td id="352"><pre>        }</pre></td><td class="line_number">344</td><td id="344"><pre>        }</pre></td></tr>
    <tr><td class="line_number">353</td><td id="353"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">345</td><td id="345"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9754"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9755"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_9756"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9757"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9758"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9759"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9760"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9761"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_9762"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_9763"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_9764"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_9765"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10734"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10735"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_10736"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10737"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10738"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10739"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10740"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10741"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_10742"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_10743"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_10744"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_10745"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td></tr>
    <tr><td class="line_number">354</td><td id="354"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">346</td><td id="346"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">355</td><td id="355"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????X??</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">347</td><td id="347"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????X??</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">356</td><td id="356"><pre>        }</pre></td><td class="line_number">348</td><td id="348"><pre>        }</pre></td></tr>
    <tr><td class="line_number">357</td><td id="357"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">349</td><td id="349"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9766"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(357),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10746"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(349),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">358</td><td id="358"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????X??</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">350</td><td id="350"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????X??</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">359</td><td id="359"><pre>        }</pre></td><td class="line_number">351</td><td id="351"><pre>        }</pre></td></tr>
    <tr><td class="line_number">360</td><td id="360"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">352</td><td id="352"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9767"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9768"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_9769"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9770"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9771"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9772"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9773"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9774"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_9775"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_9776"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_9777"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_9778"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10747"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10748"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_10749"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10750"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10751"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10752"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10753"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10754"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_10755"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_10756"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_10757"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_10758"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td></tr>
    <tr><td class="line_number">361</td><td id="361"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">353</td><td id="353"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">362</td><td id="362"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(2)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">354</td><td id="354"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(2)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">363</td><td id="363"><pre>        }</pre></td><td class="line_number">355</td><td id="355"><pre>        }</pre></td></tr>
    <tr><td class="line_number">364</td><td id="364"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">356</td><td id="356"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9779"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(364),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10759"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(356),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">365</td><td id="365"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(2)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">357</td><td id="357"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(2)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">366</td><td id="366"><pre>        }</pre></td><td class="line_number">358</td><td id="358"><pre>        }</pre></td></tr>
    <tr><td class="line_number">367</td><td id="367"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">359</td><td id="359"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9780"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9781"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_9782"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9783"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9784"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9785"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9786"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9787"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_9788"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_9789"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_9790"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_9791"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10760"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10761"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_10762"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10763"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10764"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10765"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10766"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10767"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_10768"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_10769"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_10770"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(39) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_10771"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(40) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td></tr>
    <tr><td class="line_number">368</td><td id="368"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">360</td><td id="360"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">369</td><td id="369"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(2)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">361</td><td id="361"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(2)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">370</td><td id="370"><pre>        }</pre></td><td class="line_number">362</td><td id="362"><pre>        }</pre></td></tr>
    <tr><td class="line_number">371</td><td id="371"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">363</td><td id="363"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9792"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(371),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10772"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(363),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">372</td><td id="372"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(2)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">364</td><td id="364"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(2)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">373</td><td id="373"><pre>        }</pre></td><td class="line_number">365</td><td id="365"><pre>        }</pre></td></tr>
    <tr><td class="line_number">374</td><td id="374"><pre></pre></td><td class="line_number">366</td><td id="366"><pre></pre></td></tr>
    <tr><td class="line_number">375</td><td id="375"><pre>    }</pre></td><td class="line_number">367</td><td id="367"><pre>    }</pre></td></tr>
    <tr><td class="line_number">376</td><td id="376"><pre>    <span class="c">/* ?v???J?n,?o?R???????o????? */</span></pre></td><td class="line_number">368</td><td id="368"><pre>    <span class="c">/* ?v???J?n,?o?R???????o????? */</span></pre></td></tr>
    <tr><td class="line_number">377</td><td id="377"><pre>    <span class="r">if</span>(the_pOption-&gt;m_verbos == ON ){</pre></td><td class="line_number">369</td><td id="369"><pre>    <span class="r">if</span>(the_pOption-&gt;m_verbos == ON ){</pre></td></tr>
    <tr><td class="line_number">378</td><td id="378"><pre>        <span class="c">/* ?o?R???????o????? */</span></pre></td><td class="line_number">370</td><td id="370"><pre>        <span class="c">/* ?o?R???????o????? */</span></pre></td></tr>
    <tr><td class="line_number">379</td><td id="379"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_START);</pre></td><td class="line_number">371</td><td id="371"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_START);</pre></td></tr>
    <tr><td class="line_number">380</td><td id="380"><pre>    }</pre></td><td class="line_number">372</td><td id="372"><pre>    }</pre></td></tr>
    <tr><td class="line_number">381</td><td id="381"><pre></pre></td><td class="line_number">373</td><td id="373"><pre></pre></td></tr>
    <tr><td class="line_number">382</td><td id="382"><pre>    <span class="c">/* ?v???O?A?K?v??v??????File???J?? */</span></pre></td><td class="line_number">374</td><td id="374"><pre>    <span class="c">/* ?v???O?A?K?v??v??????File???J?? */</span></pre></td></tr>
    <tr><td class="line_number">383</td><td id="383"><pre>    the_iRet = OpenResultFile(the_pOption);</pre></td><td class="line_number">375</td><td id="375"><pre>    the_iRet = OpenResultFile(the_pOption);</pre></td></tr>
    <tr><td class="line_number">384</td><td id="384"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">376</td><td id="376"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">385</td><td id="385" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">377</td><td id="377" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9793"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(385),(18) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">386</td><td id="386"><pre>    }</pre></td><td class="line_number">378</td><td id="378"><pre>    }</pre></td></tr>
    <tr><td class="line_number">387</td><td id="387"><pre></pre></td><td class="line_number">379</td><td id="379"><pre></pre></td></tr>
    <tr><td class="line_number">388</td><td id="388"><pre>    <span class="c">/* ?v???O?A?K?v??v?????????????O???[?o?????????????m?? */</span></pre></td><td class="line_number">380</td><td id="380"><pre>    <span class="c">/* ?v???O?A?K?v??v?????????????O???[?o?????????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">389</td><td id="389"><pre>    the_iRet = AllocResultMemory(the_pOption);</pre></td><td class="line_number">381</td><td id="381"><pre>    the_iRet = AllocResultMemory(the_pOption);</pre></td></tr>
    <tr><td class="line_number">390</td><td id="390"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">382</td><td id="382"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">391</td><td id="391"><pre>        FreeResultMemory(the_pOption);</pre></td><td class="line_number">383</td><td id="383"><pre>        FreeResultMemory(the_pOption);</pre></td></tr>
    <tr><td class="line_number">392</td><td id="392" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">384</td><td id="384" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9794"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(392),(18) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">393</td><td id="393"><pre>    }</pre></td><td class="line_number">385</td><td id="385"><pre>    }</pre></td></tr>
    <tr><td class="line_number">394</td><td id="394"><pre></pre></td><td class="line_number">386</td><td id="386"><pre></pre></td></tr>
    <tr><td class="line_number">395</td><td id="395"><pre>    <span class="c">/* ?v?????? */</span></pre></td><td class="line_number">387</td><td id="387"><pre>    <span class="c">/* ?v?????? */</span></pre></td></tr>
    <tr><td class="line_number">396</td><td id="396"><pre>    <span class="c">/* ????v?? */</span></pre></td><td class="line_number">388</td><td id="388"><pre>    <span class="c">/* ????v?? */</span></pre></td></tr>
    <tr><td class="line_number">397</td><td id="397"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_COMMON_MEASURE){</pre></td><td class="line_number">389</td><td id="389"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_COMMON_MEASURE){</pre></td></tr>
    <tr><td class="line_number">398</td><td id="398"><pre>        <span class="c">/* ????v??File??????}?N?????????? */</span></pre></td><td class="line_number">390</td><td id="390"><pre>        <span class="c">/* ????v??File??????}?N?????????? */</span></pre></td></tr>
    <tr><td class="line_number">399</td><td id="399"><pre>        the_iRet = GetProcMacro(the_pAnzInfo,ANZ_COMMON_MEASURE);</pre></td><td class="line_number">391</td><td id="391"><pre>        the_iRet = GetProcMacro(the_pAnzInfo,ANZ_COMMON_MEASURE);</pre></td></tr>
    <tr><td class="line_number">400</td><td id="400"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">392</td><td id="392"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">401</td><td id="401" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">393</td><td id="393" class="deleted_line"><pre>            <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9795"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(401),(22) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">402</td><td id="402"><pre>        }</pre></td><td class="line_number">394</td><td id="394"><pre>        }</pre></td></tr>
    <tr><td class="line_number">403</td><td id="403"><pre>        the_iRet = CommomMeasure(the_pAnzInfo);</pre></td><td class="line_number">395</td><td id="395"><pre>        the_iRet = CommomMeasure(the_pAnzInfo);</pre></td></tr>
    <tr><td class="line_number">404</td><td id="404"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">396</td><td id="396"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">405</td><td id="405"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_ERROR);</pre></td><td class="line_number">397</td><td id="397"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_ERROR);</pre></td></tr>
    <tr><td class="line_number">406</td><td id="406" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">398</td><td id="398" class="deleted_line"><pre>            <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9796"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(406),(22) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">407</td><td id="407"><pre>        }</pre></td><td class="line_number">399</td><td id="399"><pre>        }</pre></td></tr>
    <tr><td class="line_number">408</td><td id="408"><pre>    }</pre></td><td class="line_number">400</td><td id="400"><pre>    }</pre></td></tr>
    <tr><td class="line_number">409</td><td id="409"><pre>    <span class="c">/* ?????v?? */</span></pre></td><td class="line_number">401</td><td id="401"><pre>    <span class="c">/* ?????v?? */</span></pre></td></tr>
    <tr><td class="line_number">410</td><td id="410"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_TREND_MEASURE){</pre></td><td class="line_number">402</td><td id="402"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_TREND_MEASURE){</pre></td></tr>
    <tr><td class="line_number">411</td><td id="411"><pre>        <span class="c">/* ?????v??File??????}?N?????????? */</span></pre></td><td class="line_number">403</td><td id="403"><pre>        <span class="c">/* ?????v??File??????}?N?????????? */</span></pre></td></tr>
    <tr><td class="line_number">412</td><td id="412"><pre>        the_iRet = GetProcMacro(the_pAnzInfo,ANZ_TREND_MEASURE);</pre></td><td class="line_number">404</td><td id="404"><pre>        the_iRet = GetProcMacro(the_pAnzInfo,ANZ_TREND_MEASURE);</pre></td></tr>
    <tr><td class="line_number">413</td><td id="413"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">405</td><td id="405"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">414</td><td id="414" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">406</td><td id="406" class="deleted_line"><pre>            <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9797"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(414),(22) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">415</td><td id="415"><pre>        }</pre></td><td class="line_number">407</td><td id="407"><pre>        }</pre></td></tr>
    <tr><td class="line_number">416</td><td id="416"><pre>        the_iRet = TrendMeasure(the_pAnzInfo);</pre></td><td class="line_number">408</td><td id="408"><pre>        the_iRet = TrendMeasure(the_pAnzInfo);</pre></td></tr>
    <tr><td class="line_number">417</td><td id="417"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">409</td><td id="409"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">418</td><td id="418"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_ERROR);</pre></td><td class="line_number">410</td><td id="410"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_ERROR);</pre></td></tr>
    <tr><td class="line_number">419</td><td id="419" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">411</td><td id="411" class="deleted_line"><pre>            <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9798"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(419),(22) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">420</td><td id="420"><pre>        }</pre></td><td class="line_number">412</td><td id="412"><pre>        }</pre></td></tr>
    <tr><td class="line_number">421</td><td id="421"><pre>    }</pre></td><td class="line_number">413</td><td id="413"><pre>    }</pre></td></tr>
    <tr><td class="line_number">422</td><td id="422"><pre></pre></td><td class="line_number">414</td><td id="414"><pre></pre></td></tr>
    <tr><td class="line_number">423</td><td id="423"><pre>    <span class="c">/* ?o?R???????o????? */</span></pre></td><td class="line_number">415</td><td id="415"><pre>    <span class="c">/* ?o?R???????o????? */</span></pre></td></tr>
    <tr><td class="line_number">424</td><td id="424"><pre>    <span class="r">if</span>(the_pOption-&gt;m_verbos == ON){</pre></td><td class="line_number">416</td><td id="416"><pre>    <span class="r">if</span>(the_pOption-&gt;m_verbos == ON){</pre></td></tr>
    <tr><td class="line_number">425</td><td id="425"><pre>        <span class="r">if</span>(the_pAnzInfo-&gt;m_err == <span class="pc">NULL</span>){</pre></td><td class="line_number">417</td><td id="417"><pre>        <span class="r">if</span>(the_pAnzInfo-&gt;m_err == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">426</td><td id="426"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_NORMAL);</pre></td><td class="line_number">418</td><td id="418"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_NORMAL);</pre></td></tr>
    <tr><td class="line_number">427</td><td id="427"><pre>        }</pre></td><td class="line_number">419</td><td id="419"><pre>        }</pre></td></tr>
    <tr><td class="line_number">428</td><td id="428"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">420</td><td id="420"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number">429</td><td id="429"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MEASURE_FILE_ERROR,the_szCurMetrics,MSG_METRIC_NORMAL);</pre></td><td class="line_number">421</td><td id="421"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MEASURE_FILE_ERROR,the_szCurMetrics,MSG_METRIC_NORMAL);</pre></td></tr>
    <tr><td class="line_number">430</td><td id="430"><pre>        }</pre></td><td class="line_number">422</td><td id="422"><pre>        }</pre></td></tr>
    <tr><td class="line_number">431</td><td id="431"><pre>    }</pre></td><td class="line_number">423</td><td id="423"><pre>    }</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">424</td><td id="424" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">425</td><td id="425" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">426</td><td id="426" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">427</td><td id="427" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">428</td><td id="428" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number">432</td><td id="432"><pre></pre></td><td class="line_number">429</td><td id="429"><pre></pre></td></tr>
    <tr><td class="line_number">433</td><td id="433" class="added_line"><pre><span class="la">EXIT:</span>;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">434</td><td id="434" class="added_line"><pre>    <span class="c">/* Error File???o????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">435</td><td id="435" class="added_line"><pre>    the_iRet = OutErrorFile(the_pAnzInfo-&gt;m_err);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9799"><a href="/result/view_message/1/2/7?message_id=505&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(435),(29) :Msg(7:0505) [U] Dereferencing pointer value that is apparently NULL.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">436</td><td id="436" class="added_line"><pre>    <span class="r">if</span>(the_iRet == ANZ_ERR_MEMORY_FAILED){</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">437</td><td id="437" class="added_line"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MOMORY_FAILED);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">438</td><td id="438" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">439</td><td id="439" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">440</td><td id="440" class="added_line"><pre>    <span class="c">/* ???????????????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">441</td><td id="441" class="added_line"><pre>    <span class="c">/* ?R?}???h???C??????????Option??????????????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">442</td><td id="442" class="added_line"><pre>    <span class="r">if</span>(the_pCmdOption != <span class="pc">NULL</span>){</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">443</td><td id="443" class="added_line"><pre>        free(the_pCmdOption);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">444</td><td id="444" class="added_line"><pre>        the_pCmdOption = <span class="pc">NULL</span>;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">445</td><td id="445" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">446</td><td id="446" class="added_line"><pre>    <span class="c">/* ?v?????List?????????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">447</td><td id="447" class="added_line"><pre>    <span class="r">if</span>(the_pMeasureItem != <span class="pc">NULL</span>) {</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">448</td><td id="448" class="added_line"><pre>        free(the_pMeasureItem);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">449</td><td id="449" class="added_line"><pre>        the_pMeasureItem = <span class="pc">NULL</span>;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">450</td><td id="450" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">451</td><td id="451" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">452</td><td id="452" class="added_line"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">453</td><td id="453" class="added_line"><pre>    FreeAllResourc(the_pAnzInfo);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">454</td><td id="454" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">455</td><td id="455" class="added_line"><pre>    <span class="r">if</span>(g_bOutTime) {</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">456</td><td id="456" class="added_line"><pre>        ftime(&amp;the_ed);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">457</td><td id="457" class="added_line"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="ch">\n</span><span class="k">Total times:%ld ms</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,(the_ed.time - the_st.time) * <span class="i">1000</span> + (the_ed.millitm - the_st.millitm));</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">458</td><td id="458" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">459</td><td id="459" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">460</td><td id="460" class="added_line"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">461</td><td id="461" class="added_line"><pre>  CheckAllMem();</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">462</td><td id="462" class="added_line"><pre>  DestoryMemMan();</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">463</td><td id="463" class="added_line"><pre><span class="pp">#endif</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">464</td><td id="464"><pre>    <span class="r">return</span> the_iRet;</pre></td><td class="line_number">430</td><td id="430"><pre>    <span class="r">return</span> the_iRet;</pre></td></tr>
    <tr><td class="line_number">465</td><td id="465"><pre>}</pre></td><td class="line_number">431</td><td id="431"><pre>}</pre></td></tr>
    <tr><td class="line_number">466</td><td id="466"><pre><span class="c">/**</span></pre></td><td class="line_number">432</td><td id="432"><pre><span class="c">/**</span></pre></td></tr>
    <tr><td class="line_number">467</td><td id="467"><pre><span class="c">*  AbortAnalyzeMe</span></pre></td><td class="line_number">433</td><td id="433"><pre><span class="c">*  AbortAnalyzeMe</span></pre></td></tr>
    <tr><td class="line_number">468</td><td id="468"><pre><span class="c">*  AnalyzeMe Abort</span></pre></td><td class="line_number">434</td><td id="434"><pre><span class="c">*  AnalyzeMe Abort</span></pre></td></tr>
    <tr><td class="line_number">469</td><td id="469"><pre><span class="c">*  @param</span></pre></td><td class="line_number">435</td><td id="435"><pre><span class="c">*  @param</span></pre></td></tr>
    <tr><td class="line_number">470</td><td id="470"><pre><span class="c">*  @return</span></pre></td><td class="line_number">436</td><td id="436"><pre><span class="c">*  @return</span></pre></td></tr>
    <tr><td class="line_number">471</td><td id="471"><pre><span class="c">*          ???</span></pre></td><td class="line_number">437</td><td id="437"><pre><span class="c">*          ???</span></pre></td></tr>
    <tr><td class="line_number">472</td><td id="472"><pre><span class="c">*  @author zhang-gh</span></pre></td><td class="line_number">438</td><td id="438"><pre><span class="c">*  @author zhang-gh</span></pre></td></tr>
    <tr><td class="line_number">473</td><td id="473"><pre><span class="c">*/</span></pre></td><td class="line_number">439</td><td id="439"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">474</td><td id="474"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">440</td><td id="440"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">475</td><td id="475" class="added_line"><pre><span class="di">void</span> AbortAnalyzeMe( <span class="pt">int</span> sig, <span class="pt">int</span> code, <span class="di">void</span> *scp , <span class="pt">char</span> *addr )</pre></td><td class="line_number">441</td><td id="441" class="deleted_line"><pre><span class="di">void</span> AbortAnalyzeMe(<span class="pt">int</span> sig, <span class="pt">int</span> code, <span class="di">void</span> *scp , <span class="pt">char</span> *addr)</pre></td></tr>
    <tr><td class="line_number">476</td><td id="476"><pre><span class="pp">#else</span></pre></td><td class="line_number">442</td><td id="442"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">477</td><td id="477"><pre>BOOL WINAPI AbortAnalyzeMe(DWORD dwCtrlType)</pre></td><td class="line_number">443</td><td id="443"><pre>BOOL WINAPI AbortAnalyzeMe(DWORD dwCtrlType)</pre></td></tr>
    <tr><td class="line_number">478</td><td id="478"><pre><span class="pp">#endif</span></pre></td><td class="line_number">444</td><td id="444"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">479</td><td id="479"><pre>{</pre></td><td class="line_number">445</td><td id="445"><pre>{</pre></td></tr>
    <tr><td class="line_number">480</td><td id="480"><pre>    <span class="pt">char</span> the_errMsg[<span class="i">128</span>]; <span class="c">/* ?G???[???b?Z?[?W */</span></pre></td><td class="line_number">446</td><td id="446"><pre>    <span class="pt">char</span> the_errMsg[<span class="i">128</span>]; <span class="c">/* ?G???[???b?Z?[?W */</span></pre></td></tr>
    <tr><td class="line_number">481</td><td id="481"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">447</td><td id="447"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">482</td><td id="482"><pre>    <span class="c">/*  Signal */</span></pre></td><td class="line_number">448</td><td id="448"><pre>    <span class="c">/*  Signal */</span></pre></td></tr>
    <tr><td class="line_number">483</td><td id="483"><pre>    <span class="r">switch</span>(sig){</pre></td><td class="line_number">449</td><td id="449"><pre>    <span class="r">switch</span>(sig){</pre></td></tr>
    <tr><td class="line_number">484</td><td id="484"><pre>    <span class="r">case</span> SIGINT :</pre></td><td class="line_number">450</td><td id="450"><pre>    <span class="r">case</span> SIGINT :</pre></td></tr>
    <tr><td class="line_number">485</td><td id="485"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGINT(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">451</td><td id="451"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGINT(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">486</td><td id="486"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">452</td><td id="452"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">487</td><td id="487"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">453</td><td id="453"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">488</td><td id="488"><pre>    <span class="r">case</span> SIGQUIT :</pre></td><td class="line_number">454</td><td id="454"><pre>    <span class="r">case</span> SIGQUIT :</pre></td></tr>
    <tr><td class="line_number">489</td><td id="489"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGQUIT(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">455</td><td id="455"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGQUIT(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">490</td><td id="490"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">456</td><td id="456"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">491</td><td id="491"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">457</td><td id="457"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">492</td><td id="492"><pre>    <span class="r">case</span> SIGKILL :</pre></td><td class="line_number">458</td><td id="458"><pre>    <span class="r">case</span> SIGKILL :</pre></td></tr>
    <tr><td class="line_number">493</td><td id="493"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGKILL(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">459</td><td id="459"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGKILL(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">494</td><td id="494"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">460</td><td id="460"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">495</td><td id="495"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">461</td><td id="461"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">496</td><td id="496"><pre>    <span class="r">case</span> SIGTERM :</pre></td><td class="line_number">462</td><td id="462"><pre>    <span class="r">case</span> SIGTERM :</pre></td></tr>
    <tr><td class="line_number">497</td><td id="497"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGTERM(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">463</td><td id="463"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGTERM(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">498</td><td id="498"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">464</td><td id="464"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">499</td><td id="499"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">465</td><td id="465"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">500</td><td id="500"><pre>    <span class="r">case</span> SIGFPE :</pre></td><td class="line_number">466</td><td id="466"><pre>    <span class="r">case</span> SIGFPE :</pre></td></tr>
    <tr><td class="line_number">501</td><td id="501"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGFPE(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">467</td><td id="467"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGFPE(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">502</td><td id="502"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">468</td><td id="468"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">503</td><td id="503"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">469</td><td id="469"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">504</td><td id="504"><pre>    <span class="r">case</span> SIGILL :</pre></td><td class="line_number">470</td><td id="470"><pre>    <span class="r">case</span> SIGILL :</pre></td></tr>
    <tr><td class="line_number">505</td><td id="505"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGILL(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">471</td><td id="471"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGILL(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">506</td><td id="506"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">472</td><td id="472"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">507</td><td id="507"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">473</td><td id="473"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">508</td><td id="508"><pre>    <span class="r">case</span> SIGBUS :</pre></td><td class="line_number">474</td><td id="474"><pre>    <span class="r">case</span> SIGBUS :</pre></td></tr>
    <tr><td class="line_number">509</td><td id="509"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGBUS(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">475</td><td id="475"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGBUS(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">510</td><td id="510"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">476</td><td id="476"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">511</td><td id="511"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">477</td><td id="477"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">512</td><td id="512"><pre>    <span class="r">case</span> SIGSEGV :</pre></td><td class="line_number">478</td><td id="478"><pre>    <span class="r">case</span> SIGSEGV :</pre></td></tr>
    <tr><td class="line_number">513</td><td id="513"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGSEGV(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">479</td><td id="479"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGSEGV(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">514</td><td id="514"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">480</td><td id="480"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">515</td><td id="515"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">481</td><td id="481"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">516</td><td id="516"><pre>    <span class="r">case</span> SIGSYS :</pre></td><td class="line_number">482</td><td id="482"><pre>    <span class="r">case</span> SIGSYS :</pre></td></tr>
    <tr><td class="line_number">517</td><td id="517"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGSYS(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">483</td><td id="483"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGSYS(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">518</td><td id="518"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">484</td><td id="484"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">519</td><td id="519"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">485</td><td id="485"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">520</td><td id="520"><pre>    <span class="r">default</span> :</pre></td><td class="line_number">486</td><td id="486"><pre>    <span class="r">default</span> :</pre></td></tr>
    <tr><td class="line_number">521</td><td id="521"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=%d</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">487</td><td id="487"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=%d</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">522</td><td id="522"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">488</td><td id="488"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">523</td><td id="523"><pre>    }</pre></td><td class="line_number">489</td><td id="489"><pre>    }</pre></td></tr>
    <tr><td class="line_number">524</td><td id="524"><pre></pre></td><td class="line_number">490</td><td id="490"><pre></pre></td></tr>
    <tr><td class="line_number">525</td><td id="525"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td><td class="line_number">491</td><td id="491"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td></tr>
    <tr><td class="line_number">526</td><td id="526"><pre>    FreeAllResourc(g_pAnzInfo);</pre></td><td class="line_number">492</td><td id="492"><pre>    FreeAllResourc(g_pAnzInfo);</pre></td></tr>
    <tr><td class="line_number">527</td><td id="527"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td><td class="line_number">493</td><td id="493"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td></tr>
    <tr><td class="line_number">528</td><td id="528"><pre>    CheckAllMem();</pre></td><td class="line_number">494</td><td id="494"><pre>    CheckAllMem();</pre></td></tr>
    <tr><td class="line_number">529</td><td id="529"><pre>    DestoryMemMan();</pre></td><td class="line_number">495</td><td id="495"><pre>    DestoryMemMan();</pre></td></tr>
    <tr><td class="line_number">530</td><td id="530"><pre><span class="pp">#endif</span></pre></td><td class="line_number">496</td><td id="496"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">531</td><td id="531"><pre>    <span class="c">/* Signal Check */</span></pre></td><td class="line_number">497</td><td id="497"><pre>    <span class="c">/* Signal Check */</span></pre></td></tr>
    <tr><td class="line_number">532</td><td id="532"><pre>    <span class="r">switch</span>(sig){</pre></td><td class="line_number">498</td><td id="498"><pre>    <span class="r">switch</span>(sig){</pre></td></tr>
    <tr><td class="line_number">533</td><td id="533"><pre>    <span class="r">case</span> SIGINT :</pre></td><td class="line_number">499</td><td id="499"><pre>    <span class="r">case</span> SIGINT :</pre></td></tr>
    <tr><td class="line_number">534</td><td id="534"><pre>    <span class="r">case</span> SIGQUIT :</pre></td><td class="line_number">500</td><td id="500"><pre>    <span class="r">case</span> SIGQUIT :</pre></td></tr>
    <tr><td class="line_number">535</td><td id="535"><pre>    <span class="r">case</span> SIGKILL :</pre></td><td class="line_number">501</td><td id="501"><pre>    <span class="r">case</span> SIGKILL :</pre></td></tr>
    <tr><td class="line_number">536</td><td id="536"><pre>    <span class="r">case</span> SIGTERM :</pre></td><td class="line_number">502</td><td id="502"><pre>    <span class="r">case</span> SIGTERM :</pre></td></tr>
    <tr><td class="line_number">537</td><td id="537"><pre>        exit(<span class="i">0</span>) ;</pre></td><td class="line_number">503</td><td id="503"><pre>        exit(<span class="i">0</span>) ;</pre></td></tr>
    <tr><td class="line_number">538</td><td id="538"><pre>    <span class="r">case</span> SIGFPE :</pre></td><td class="line_number">504</td><td id="504"><pre>    <span class="r">case</span> SIGFPE :</pre></td></tr>
    <tr><td class="line_number">539</td><td id="539"><pre>    <span class="r">case</span> SIGILL :</pre></td><td class="line_number">505</td><td id="505"><pre>    <span class="r">case</span> SIGILL :</pre></td></tr>
    <tr><td class="line_number">540</td><td id="540"><pre>    <span class="r">case</span> SIGBUS :</pre></td><td class="line_number">506</td><td id="506"><pre>    <span class="r">case</span> SIGBUS :</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">507</td><td id="507" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">508</td><td id="508" class="deleted_line"><pre>    <span class="r">case</span> SIGSEGV :</pre></td></tr>
    <tr><td class="line_number">541</td><td id="541"><pre><span class="c">/*    case SIGIOT :*/</span></pre></td><td class="line_number">509</td><td id="509"><pre><span class="c">/*    case SIGIOT :*/</span></pre></td></tr>
    <tr><td class="line_number">542</td><td id="542" class="added_line"><pre>    <span class="r">case</span> SIGSEGV :</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">543</td><td id="543"><pre>    <span class="r">case</span> SIGSYS :</pre></td><td class="line_number">510</td><td id="510"><pre>    <span class="r">case</span> SIGSYS :</pre></td></tr>
    <tr><td class="line_number">544</td><td id="544"><pre>        abort() ;</pre></td><td class="line_number">511</td><td id="511"><pre>        abort() ;</pre></td></tr>
    <tr><td class="line_number">545</td><td id="545"><pre>    }</pre></td><td class="line_number">512</td><td id="512"><pre>    }</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9800"><a href="/result/view_message/1/2/7?message_id=2002&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(545),(5) :Msg(2:2002) No 'default' case found in this 'switch' statement.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10773"><a href="/result/view_message/1/2/11?message_id=2002&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(512),(5) :Msg(2:2002) No 'default' case found in this 'switch' statement.</b></a></div></td></tr>
    <tr><td class="line_number">546</td><td id="546"><pre>    exit(<span class="i">0</span>) ;</pre></td><td class="line_number">513</td><td id="513"><pre>    exit(<span class="i">0</span>) ;</pre></td></tr>
    <tr><td class="line_number">547</td><td id="547"><pre><span class="pp">#else</span></pre></td><td class="line_number">514</td><td id="514"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">548</td><td id="548"><pre>    <span class="r">switch</span>(dwCtrlType){</pre></td><td class="line_number">515</td><td id="515"><pre>    <span class="r">switch</span>(dwCtrlType){</pre></td></tr>
    <tr><td class="line_number">549</td><td id="549"><pre>    <span class="r">case</span> CTRL_C_EVENT:</pre></td><td class="line_number">516</td><td id="516"><pre>    <span class="r">case</span> CTRL_C_EVENT:</pre></td></tr>
    <tr><td class="line_number">550</td><td id="550"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Ctrl + C pressed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">517</td><td id="517"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Ctrl + C pressed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">551</td><td id="551"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">518</td><td id="518"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">552</td><td id="552"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">519</td><td id="519"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">553</td><td id="553"><pre>    <span class="r">case</span> CTRL_BREAK_EVENT:</pre></td><td class="line_number">520</td><td id="520"><pre>    <span class="r">case</span> CTRL_BREAK_EVENT:</pre></td></tr>
    <tr><td class="line_number">554</td><td id="554"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Ctrl + Break pressed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">521</td><td id="521"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Ctrl + Break pressed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">555</td><td id="555"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">522</td><td id="522"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">556</td><td id="556"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">523</td><td id="523"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">557</td><td id="557"><pre>    <span class="r">case</span> CTRL_CLOSE_EVENT:</pre></td><td class="line_number">524</td><td id="524"><pre>    <span class="r">case</span> CTRL_CLOSE_EVENT:</pre></td></tr>
    <tr><td class="line_number">558</td><td id="558"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Console Closed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">525</td><td id="525"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Console Closed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">559</td><td id="559"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">526</td><td id="526"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">560</td><td id="560"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">527</td><td id="527"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">561</td><td id="561"><pre>    <span class="r">case</span> CTRL_LOGOFF_EVENT:</pre></td><td class="line_number">528</td><td id="528"><pre>    <span class="r">case</span> CTRL_LOGOFF_EVENT:</pre></td></tr>
    <tr><td class="line_number">562</td><td id="562"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Windows is logoff!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">529</td><td id="529"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Windows is logoff!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">563</td><td id="563"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">530</td><td id="530"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">564</td><td id="564"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">531</td><td id="531"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">565</td><td id="565"><pre>    <span class="r">case</span> CTRL_SHUTDOWN_EVENT:</pre></td><td class="line_number">532</td><td id="532"><pre>    <span class="r">case</span> CTRL_SHUTDOWN_EVENT:</pre></td></tr>
    <tr><td class="line_number">566</td><td id="566"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Windows is shutdown!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">533</td><td id="533"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Windows is shutdown!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">567</td><td id="567"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">534</td><td id="534"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">568</td><td id="568"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">535</td><td id="535"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">569</td><td id="569"><pre>    <span class="r">default</span>:</pre></td><td class="line_number">536</td><td id="536"><pre>    <span class="r">default</span>:</pre></td></tr>
    <tr><td class="line_number">570</td><td id="570"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Unknowe event!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">537</td><td id="537"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Unknowe event!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">571</td><td id="571"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">538</td><td id="538"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">572</td><td id="572" class="added_line"><pre>        <span class="r">break</span>;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">573</td><td id="573"><pre>    }</pre></td><td class="line_number">539</td><td id="539"><pre>    }</pre></td></tr>
    <tr><td class="line_number">574</td><td id="574"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td><td class="line_number">540</td><td id="540"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td></tr>
    <tr><td class="line_number">575</td><td id="575"><pre>    FreeAllResourc(g_pAnzInfo);</pre></td><td class="line_number">541</td><td id="541"><pre>    FreeAllResourc(g_pAnzInfo);</pre></td></tr>
    <tr><td class="line_number">576</td><td id="576"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td><td class="line_number">542</td><td id="542"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td></tr>
    <tr><td class="line_number">577</td><td id="577"><pre>    CheckAllMem();</pre></td><td class="line_number">543</td><td id="543"><pre>    CheckAllMem();</pre></td></tr>
    <tr><td class="line_number">578</td><td id="578"><pre>    DestoryMemMan();</pre></td><td class="line_number">544</td><td id="544"><pre>    DestoryMemMan();</pre></td></tr>
    <tr><td class="line_number">579</td><td id="579"><pre><span class="pp">#endif</span></pre></td><td class="line_number">545</td><td id="545"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">580</td><td id="580"><pre>    ExitProcess(<span class="i">0</span>);</pre></td><td class="line_number">546</td><td id="546"><pre>    ExitProcess(<span class="i">0</span>);</pre></td></tr>
    <tr><td class="line_number">581</td><td id="581"><pre>    <span class="r">return</span> <span class="i">0</span>;</pre></td><td class="line_number">547</td><td id="547"><pre>    <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">582</td><td id="582"><pre><span class="pp">#endif</span></pre></td><td class="line_number">548</td><td id="548"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">583</td><td id="583"><pre>}</pre></td><td class="line_number">549</td><td id="549"><pre>}</pre></td></tr>
    <tr><td class="line_number">584</td><td id="584"><pre><span class="c">/**</span></pre></td><td class="line_number">550</td><td id="550"><pre><span class="c">/**</span></pre></td></tr>
    <tr><td class="line_number">585</td><td id="585"><pre><span class="c">*  SetSignal</span></pre></td><td class="line_number">551</td><td id="551"><pre><span class="c">*  SetSignal</span></pre></td></tr>
    <tr><td class="line_number">586</td><td id="586"><pre><span class="c">*  ?V?O?????n???h???o?^</span></pre></td><td class="line_number">552</td><td id="552"><pre><span class="c">*  ?V?O?????n???h???o?^</span></pre></td></tr>
    <tr><td class="line_number">587</td><td id="587"><pre><span class="c">*  @param</span></pre></td><td class="line_number">553</td><td id="553"><pre><span class="c">*  @param</span></pre></td></tr>
    <tr><td class="line_number">588</td><td id="588"><pre><span class="c">*         ???</span></pre></td><td class="line_number">554</td><td id="554"><pre><span class="c">*         ???</span></pre></td></tr>
    <tr><td class="line_number">589</td><td id="589"><pre><span class="c">*  @return</span></pre></td><td class="line_number">555</td><td id="555"><pre><span class="c">*  @return</span></pre></td></tr>
    <tr><td class="line_number">590</td><td id="590"><pre><span class="c">*         ???</span></pre></td><td class="line_number">556</td><td id="556"><pre><span class="c">*         ???</span></pre></td></tr>
    <tr><td class="line_number">591</td><td id="591"><pre><span class="c">*  @author zhang-gh</span></pre></td><td class="line_number">557</td><td id="557"><pre><span class="c">*  @author zhang-gh</span></pre></td></tr>
    <tr><td class="line_number">592</td><td id="592"><pre><span class="c">*/</span></pre></td><td class="line_number">558</td><td id="558"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">593</td><td id="593"><pre><span class="di">void</span> SetSignal()</pre></td><td class="line_number">559</td><td id="559"><pre><span class="di">void</span> SetSignal()</pre></td></tr>
    <tr><td class="line_number">594</td><td id="594"><pre>{</pre></td><td class="line_number">560</td><td id="560"><pre>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9801"><a href="/result/view_message/1/2/7?message_id=3007&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(594),(1) :Msg(2:3007) "void" has been omitted when defining a function with no parameters.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10774"><a href="/result/view_message/1/2/11?message_id=3007&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(560),(1) :Msg(2:3007) "void" has been omitted when defining a function with no parameters.</b></a></div></td></tr>
    <tr><td class="line_number">595</td><td id="595"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">561</td><td id="561"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">596</td><td id="596"><pre>    <span class="c">/* Signal Set */</span></pre></td><td class="line_number">562</td><td id="562"><pre>    <span class="c">/* Signal Set */</span></pre></td></tr>
    <tr><td class="line_number">597</td><td id="597"><pre>    signal( SIGFPE  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">563</td><td id="563"><pre>    signal( SIGFPE  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9802"><a href="/result/view_message/1/2/7?message_id=432&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(597),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10775"><a href="/result/view_message/1/2/11?message_id=432&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(563),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td></tr>
    <tr><td class="line_number">598</td><td id="598"><pre>    signal( SIGILL  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">564</td><td id="564"><pre>    signal( SIGILL  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9803"><a href="/result/view_message/1/2/7?message_id=432&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(598),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10776"><a href="/result/view_message/1/2/11?message_id=432&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(564),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td></tr>
    <tr><td class="line_number">599</td><td id="599"><pre>    signal( SIGBUS  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">565</td><td id="565"><pre>    signal( SIGBUS  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9804"><a href="/result/view_message/1/2/7?message_id=432&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(599),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10777"><a href="/result/view_message/1/2/11?message_id=432&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(565),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td></tr>
    <tr><td class="line_number">600</td><td id="600" class="added_line"><pre><span class="c">/*    signal( SIGIOT  , (void *)AbortAnalyzeMe); */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">601</td><td id="601"><pre>    signal( SIGSEGV , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">566</td><td id="566"><pre>    signal( SIGSEGV , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9805"><a href="/result/view_message/1/2/7?message_id=432&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(601),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10778"><a href="/result/view_message/1/2/11?message_id=432&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(566),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td></tr>
    <tr><td class="line_number">602</td><td id="602"><pre>    signal( SIGSYS , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">567</td><td id="567"><pre>    signal( SIGSYS , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9806"><a href="/result/view_message/1/2/7?message_id=432&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(602),(22) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10779"><a href="/result/view_message/1/2/11?message_id=432&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(567),(22) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td></tr>
    <tr><td class="line_number">603</td><td id="603"><pre></pre></td><td class="line_number">568</td><td id="568"><pre></pre></td></tr>
    <tr><td class="line_number">604</td><td id="604"><pre>    signal( SIGINT  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">569</td><td id="569"><pre>    signal( SIGINT  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9807"><a href="/result/view_message/1/2/7?message_id=432&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(604),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10780"><a href="/result/view_message/1/2/11?message_id=432&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(569),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td></tr>
    <tr><td class="line_number">605</td><td id="605"><pre>    signal( SIGQUIT , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">570</td><td id="570"><pre>    signal( SIGQUIT , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9808"><a href="/result/view_message/1/2/7?message_id=432&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(605),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10781"><a href="/result/view_message/1/2/11?message_id=432&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(570),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td></tr>
    <tr><td class="line_number">606</td><td id="606"><pre>    signal( SIGKILL , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">571</td><td id="571"><pre>    signal( SIGKILL , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9809"><a href="/result/view_message/1/2/7?message_id=432&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(606),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10782"><a href="/result/view_message/1/2/11?message_id=432&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(571),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td></tr>
    <tr><td class="line_number">607</td><td id="607" class="added_line"><pre>    signal( SIGTERM , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">572</td><td id="572" class="deleted_line"><pre>    signal( SIGTERM , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9810"><a href="/result/view_message/1/2/7?message_id=432&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(607),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td><td class="deleted_warning" id="line_number"></td><td><div class="deleted_warning" id="warning_10783"><a href="/result/view_message/1/2/11?message_id=432&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(572),(23) :Msg(8:0432) [C] Argument is not a compatible pointer type.</b></a></div></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">573</td><td id="573" class="deleted_line"><pre><span class="c">/*    signal( SIGIOT  , (void *)AbortAnalyzeMe); */</span></pre></td></tr>
    <tr><td class="line_number">608</td><td id="608"><pre><span class="pp">#else</span></pre></td><td class="line_number">574</td><td id="574"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">609</td><td id="609"><pre>    SetConsoleCtrlHandler(AbortAnalyzeMe, <span class="i">1</span>);</pre></td><td class="line_number">575</td><td id="575"><pre>    SetConsoleCtrlHandler(AbortAnalyzeMe, <span class="i">1</span>);</pre></td></tr>
    <tr><td class="line_number">610</td><td id="610"><pre><span class="pp">#endif</span></pre></td><td class="line_number">576</td><td id="576"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">611</td><td id="611"><pre>    <span class="r">return</span>;</pre></td><td class="line_number">577</td><td id="577"><pre>    <span class="r">return</span>;</pre></td></tr>
    <tr><td class="line_number">612</td><td id="612"><pre>}</pre></td><td class="line_number">578</td><td id="578"><pre>}</pre></td></tr>
    <tr><td class="line_number">613</td><td id="613"><pre></pre></td><td class="line_number">579</td><td id="579"><pre></pre></td></tr>
    <tr><td class="line_number">614</td><td id="614"><pre><span class="c">/**</span></pre></td><td class="line_number">580</td><td id="580"><pre><span class="c">/**</span></pre></td></tr>
    <tr><td class="line_number">615</td><td id="615"><pre><span class="c">*  ResetTrendPath</span></pre></td><td class="line_number">581</td><td id="581"><pre><span class="c">*  ResetTrendPath</span></pre></td></tr>
    <tr><td class="line_number">616</td><td id="616"><pre><span class="c">*  ????p?X????????</span></pre></td><td class="line_number">582</td><td id="582"><pre><span class="c">*  ????p?X????????</span></pre></td></tr>
    <tr><td class="line_number">617</td><td id="617"><pre><span class="c">*  @param</span></pre></td><td class="line_number">583</td><td id="583"><pre><span class="c">*  @param</span></pre></td></tr>
    <tr><td class="line_number">618</td><td id="618"><pre><span class="c">*         io_pPath  input Path</span></pre></td><td class="line_number">584</td><td id="584"><pre><span class="c">*         io_pPath  input Path</span></pre></td></tr>
    <tr><td class="line_number">619</td><td id="619"><pre><span class="c">*  @return</span></pre></td><td class="line_number">585</td><td id="585"><pre><span class="c">*  @return</span></pre></td></tr>
    <tr><td class="line_number">620</td><td id="620"><pre><span class="c">*         ???</span></pre></td><td class="line_number">586</td><td id="586"><pre><span class="c">*         ???</span></pre></td></tr>
    <tr><td class="line_number">621</td><td id="621"><pre><span class="c">*  @author luo-jirong</span></pre></td><td class="line_number">587</td><td id="587"><pre><span class="c">*  @author luo-jirong</span></pre></td></tr>
    <tr><td class="line_number">622</td><td id="622"><pre><span class="c">*/</span></pre></td><td class="line_number">588</td><td id="588"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">623</td><td id="623"><pre><span class="pt">int</span> ResetTrendPath(<span class="pt">char</span> *io_pPath)</pre></td><td class="line_number">589</td><td id="589"><pre><span class="pt">int</span> ResetTrendPath(<span class="pt">char</span> *io_pPath)</pre></td></tr>
    <tr><td class="line_number">624</td><td id="624"><pre>{</pre></td><td class="line_number">590</td><td id="590"><pre>{</pre></td></tr>
    <tr><td class="line_number">625</td><td id="625"><pre>        <span class="pt">char</span> the_szFullPath[MAX_PATH];</pre></td><td class="line_number">591</td><td id="591"><pre>        <span class="pt">char</span> the_szFullPath[MAX_PATH];</pre></td></tr>
    <tr><td class="line_number">626</td><td id="626"><pre>        <span class="pt">char</span> the_szCurPath[MAX_PATH];</pre></td><td class="line_number">592</td><td id="592"><pre>        <span class="pt">char</span> the_szCurPath[MAX_PATH];</pre></td></tr>
    <tr><td class="line_number">627</td><td id="627" class="added_line"><pre>        <span class="pt">int</span> the_iRet = ANZ_SUCCESS;</pre></td><td class="line_number">593</td><td id="593" class="deleted_line"><pre>        <span class="pt">int</span> the_iRet = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">628</td><td id="628"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">594</td><td id="594"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">629</td><td id="629"><pre>        <span class="c">/* ?J?????gDir??????Dir??????? */</span></pre></td><td class="line_number">595</td><td id="595"><pre>        <span class="c">/* ?J?????gDir??????Dir??????? */</span></pre></td></tr>
    <tr><td class="line_number">630</td><td id="630"><pre>        <span class="r">if</span>(io_pPath[<span class="i">0</span>] != <span class="ch">'/'</span>) {</pre></td><td class="line_number">596</td><td id="596"><pre>        <span class="r">if</span>(io_pPath[<span class="i">0</span>] != <span class="ch">'/'</span>) {</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9811"><a href="/result/view_message/1/2/7?message_id=506&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(630),(20) :Msg(2:0506) Dereferencing pointer value that is possibly NULL.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10784"><a href="/result/view_message/1/2/11?message_id=506&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(596),(20) :Msg(2:0506) Dereferencing pointer value that is possibly NULL.</b></a></div></td></tr>
    <tr><td class="line_number">631</td><td id="631"><pre>            <span class="r">if</span>(getcwd(the_szCurPath,MAX_PATH) == <span class="pc">NULL</span>) {</pre></td><td class="line_number">597</td><td id="597"><pre>            <span class="r">if</span>(getcwd(the_szCurPath,MAX_PATH) == <span class="pc">NULL</span>) {</pre></td></tr>
    <tr><td class="line_number">632</td><td id="632"><pre>                the_iRet = ANZ_ERROR;</pre></td><td class="line_number">598</td><td id="598"><pre>                the_iRet = ANZ_ERROR;</pre></td></tr>
    <tr><td class="line_number">633</td><td id="633"><pre>                <span class="r">goto</span> EXIT;</pre></td><td class="line_number">599</td><td id="599"><pre>                <span class="r">goto</span> EXIT;</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9812"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(633),(26) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10785"><a href="/result/view_message/1/2/11?message_id=2001&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(599),(26) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td></tr>
    <tr><td class="line_number">634</td><td id="634"><pre>            }</pre></td><td class="line_number">600</td><td id="600"><pre>            }</pre></td></tr>
    <tr><td class="line_number">635</td><td id="635"><pre>            <span class="r">if</span>(strcmp(io_pPath,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>) {</pre></td><td class="line_number">601</td><td id="601"><pre>            <span class="r">if</span>(strcmp(io_pPath,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>) {</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9813"><a href="/result/view_message/1/2/7?message_id=506&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(2:0506) Dereferencing pointer value that is possibly NULL.</b></a></div><div class="common_warning" id="warning_9814"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9815"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_9816"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9817"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9818"><a href="/result/view_message/1/2/7?message_id=3204&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_9819"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9820"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9821"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_9822"><a href="/result/view_message/1/2/7?message_id=3760&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_9823"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(35) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_9824"><a href="/result/view_message/1/2/7?message_id=3335&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(35) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_9825"><a href="/result/view_message/1/2/7?message_id=1251&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(36) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10786"><a href="/result/view_message/1/2/11?message_id=506&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(2:0506) Dereferencing pointer value that is possibly NULL.</b></a></div><div class="common_warning" id="warning_10787"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10788"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div><div class="common_warning" id="warning_10789"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10790"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(2:3204) The variable '__s1' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10791"><a href="/result/view_message/1/2/11?message_id=3204&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(2:3204) The variable '__s2' is only set once and so it could be declared with the 'const' qualifier.</b></a></div><div class="common_warning" id="warning_10792"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10793"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10794"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div><div class="common_warning" id="warning_10795"><a href="/result/view_message/1/2/11?message_id=3760&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(3:3760) Implicit conversion: int to unsigned int.</b></a></div><div class="common_warning" id="warning_10796"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(35) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_constant_p();'.</b></a></div><div class="common_warning" id="warning_10797"><a href="/result/view_message/1/2/11?message_id=3335&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(35) :Msg(3:3335) No function declaration. Implicit declaration inserted: 'extern int __builtin_strcmp();'.</b></a></div><div class="common_warning" id="warning_10798"><a href="/result/view_message/1/2/11?message_id=1251&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(36) :Msg(2:1251) Suffixed integer constant causes implicit conversion of other (integral) operand.</b></a></div></td></tr>
    <tr><td class="line_number">636</td><td id="636"><pre>                sprintf(the_szFullPath,<span class="s"><span class="dl">&quot;</span><span class="k">%s/%s</span><span class="dl">&quot;</span></span>,the_szCurPath,io_pPath);</pre></td><td class="line_number">602</td><td id="602"><pre>                sprintf(the_szFullPath,<span class="s"><span class="dl">&quot;</span><span class="k">%s/%s</span><span class="dl">&quot;</span></span>,the_szCurPath,io_pPath);</pre></td></tr>
    <tr><td class="line_number">637</td><td id="637"><pre>            }</pre></td><td class="line_number">603</td><td id="603"><pre>            }</pre></td></tr>
    <tr><td class="line_number">638</td><td id="638"><pre>        }</pre></td><td class="line_number">604</td><td id="604"><pre>        }</pre></td></tr>
    <tr><td class="line_number">639</td><td id="639" class="added_line"><pre>        <span class="r">else</span> {</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">640</td><td id="640" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9826"><a href="/result/view_message/1/2/7?message_id=2001&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(640),(22) :Msg(2:2001) A 'goto' statement has been used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">641</td><td id="641" class="added_line"><pre>        }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">642</td><td id="642"><pre><span class="pp">#else</span></pre></td><td class="line_number">605</td><td id="605"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">643</td><td id="643"><pre>        <span class="c">/* ?J?????gDir??????Dir??????? */</span></pre></td><td class="line_number">606</td><td id="606"><pre>        <span class="c">/* ?J?????gDir??????Dir??????? */</span></pre></td></tr>
    <tr><td class="line_number">644</td><td id="644"><pre>        <span class="r">if</span>((io_pPath[<span class="i">1</span>] == <span class="ch">':'</span> &amp;&amp; io_pPath[<span class="i">2</span>] == <span class="ch">'\\'</span>) ||</pre></td><td class="line_number">607</td><td id="607"><pre>        <span class="r">if</span>((io_pPath[<span class="i">1</span>] == <span class="ch">':'</span> &amp;&amp; io_pPath[<span class="i">2</span>] == <span class="ch">'\\'</span>) ||</pre></td></tr>
    <tr><td class="line_number">645</td><td id="645"><pre>            (io_pPath[<span class="i">0</span>] == <span class="ch">'\\'</span>)) {</pre></td><td class="line_number">608</td><td id="608"><pre>            (io_pPath[<span class="i">0</span>] == <span class="ch">'\\'</span>)) {</pre></td></tr>
    <tr><td class="line_number">646</td><td id="646"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">609</td><td id="609"><pre>            <span class="r">goto</span> EXIT;</pre></td></tr>
    <tr><td class="line_number">647</td><td id="647"><pre>        }</pre></td><td class="line_number">610</td><td id="610"><pre>        }</pre></td></tr>
    <tr><td class="line_number">648</td><td id="648"><pre>        <span class="r">else</span> {</pre></td><td class="line_number">611</td><td id="611"><pre>        <span class="r">else</span> {</pre></td></tr>
    <tr><td class="line_number">649</td><td id="649"><pre>            <span class="r">if</span>(getcwd(the_szCurPath,MAX_PATH) == <span class="pc">NULL</span>) {</pre></td><td class="line_number">612</td><td id="612"><pre>            <span class="r">if</span>(getcwd(the_szCurPath,MAX_PATH) == <span class="pc">NULL</span>) {</pre></td></tr>
    <tr><td class="line_number">650</td><td id="650"><pre>                the_iRet = ANZ_ERROR;</pre></td><td class="line_number">613</td><td id="613"><pre>                the_iRet = ANZ_ERROR;</pre></td></tr>
    <tr><td class="line_number">651</td><td id="651"><pre>                <span class="r">goto</span> EXIT;</pre></td><td class="line_number">614</td><td id="614"><pre>                <span class="r">goto</span> EXIT;</pre></td></tr>
    <tr><td class="line_number">652</td><td id="652"><pre>            }</pre></td><td class="line_number">615</td><td id="615"><pre>            }</pre></td></tr>
    <tr><td class="line_number">653</td><td id="653"><pre>            <span class="r">if</span>(strcmp(io_pPath,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>) {</pre></td><td class="line_number">616</td><td id="616"><pre>            <span class="r">if</span>(strcmp(io_pPath,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>) {</pre></td></tr>
    <tr><td class="line_number">654</td><td id="654"><pre>                sprintf(the_szFullPath,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\\</span><span class="k">%s</span><span class="dl">&quot;</span></span>,the_szCurPath,io_pPath);</pre></td><td class="line_number">617</td><td id="617"><pre>                sprintf(the_szFullPath,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\\</span><span class="k">%s</span><span class="dl">&quot;</span></span>,the_szCurPath,io_pPath);</pre></td></tr>
    <tr><td class="line_number">655</td><td id="655"><pre>            }</pre></td><td class="line_number">618</td><td id="618"><pre>            }</pre></td></tr>
    <tr><td class="line_number">656</td><td id="656"><pre>        }</pre></td><td class="line_number">619</td><td id="619"><pre>        }</pre></td></tr>
    <tr><td class="line_number">657</td><td id="657"><pre><span class="pp">#endif</span></pre></td><td class="line_number">620</td><td id="620"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">658</td><td id="658"><pre>        strcpy(io_pPath,the_szFullPath);</pre></td><td class="line_number">621</td><td id="621"><pre>        strcpy(io_pPath,the_szFullPath);</pre></td></tr>
    <tr><td class="deleted_warning" id="line_number"></td><td class="deleted_warning"></td><td class="deleted_warning" id="line_number"></td><td><div class="deleted_warning" id="warning_10799"><a href="/result/view_message/1/2/11?message_id=3349&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(621),(25) :Msg(3:3349) This function argument points to data that is apparently unset.</b></a></div></td></tr>
    <tr><td class="line_number">659</td><td id="659" class="added_line"><pre><span class="la">EXIT:</span></pre></td><td class="line_number">622</td><td id="622" class="deleted_line"><pre><span class="la">EXIT:</span></pre></td></tr>
    <tr><td class="line_number">660</td><td id="660" class="added_line"><pre>        <span class="r">return</span> the_iRet;</pre></td><td class="line_number">623</td><td id="623" class="deleted_line"><pre>        <span class="r">return</span> the_iRet;</pre></td></tr>
    <tr><td class="line_number">661</td><td id="661" class="added_line"><pre>}</pre></td><td class="line_number">624</td><td id="624" class="deleted_line"><pre>}</pre></td></tr>
    <tr><td class="line_number">662</td><td id="662"><pre></pre></td><td class="line_number">625</td><td id="625"><pre></pre></td></tr>

  hirisk_contents: |
    <tr><td class="line_number">1</td><td id="1"><pre><span class="c">/*</span></pre></td><td class="line_number">1</td><td id="1"><pre><span class="c">/*</span></pre></td></tr>
    <tr><td class="line_number">2</td><td id="2"><pre><span class="c"> File:</span></pre></td><td class="line_number">2</td><td id="2"><pre><span class="c"> File:</span></pre></td></tr>
    <tr><td class="line_number">3</td><td id="3"><pre><span class="c">      analyzeme.c</span></pre></td><td class="line_number">3</td><td id="3"><pre><span class="c">      analyzeme.c</span></pre></td></tr>
    <tr><td class="line_number">4</td><td id="4"><pre><span class="c"> Copyright:</span></pre></td><td class="line_number">4</td><td id="4"><pre><span class="c"> Copyright:</span></pre></td></tr>
    <tr><td class="line_number">5</td><td id="5"><pre><span class="c">      Copyright (C) 2004 TOSHIBA CORPORATION. All Rights Reserved.</span></pre></td><td class="line_number">5</td><td id="5"><pre><span class="c">      Copyright (C) 2004 TOSHIBA CORPORATION. All Rights Reserved.</span></pre></td></tr>
    <tr><td class="line_number">6</td><td id="6"><pre><span class="c"> Product:</span></pre></td><td class="line_number">6</td><td id="6"><pre><span class="c"> Product:</span></pre></td></tr>
    <tr><td class="line_number">7</td><td id="7"><pre><span class="c">      AnalyzeMe</span></pre></td><td class="line_number">7</td><td id="7"><pre><span class="c">      AnalyzeMe</span></pre></td></tr>
    <tr><td class="line_number">8</td><td id="8"><pre><span class="c"> Abstract:</span></pre></td><td class="line_number">8</td><td id="8"><pre><span class="c"> Abstract:</span></pre></td></tr>
    <tr><td class="line_number">9</td><td id="9"><pre><span class="c">      AnalyzeMe????C??????????`????</span></pre></td><td class="line_number">9</td><td id="9"><pre><span class="c">      AnalyzeMe????C??????????`????</span></pre></td></tr>
    <tr><td class="line_number">10</td><td id="10"><pre><span class="c"> Author:</span></pre></td><td class="line_number">10</td><td id="10"><pre><span class="c"> Author:</span></pre></td></tr>
    <tr><td class="line_number">11</td><td id="11"><pre><span class="c">      zhang-gh</span></pre></td><td class="line_number">11</td><td id="11"><pre><span class="c">      zhang-gh</span></pre></td></tr>
    <tr><td class="line_number">12</td><td id="12"><pre><span class="c"> Date:</span></pre></td><td class="line_number">12</td><td id="12"><pre><span class="c"> Date:</span></pre></td></tr>
    <tr><td class="line_number">13</td><td id="13"><pre><span class="c">      2004/08/20</span></pre></td><td class="line_number">13</td><td id="13"><pre><span class="c">      2004/08/20</span></pre></td></tr>
    <tr><td class="line_number">14</td><td id="14"><pre><span class="c"> REVISION HISTORY:</span></pre></td><td class="line_number">14</td><td id="14"><pre><span class="c"> REVISION HISTORY:</span></pre></td></tr>
    <tr><td class="line_number">15</td><td id="15"><pre><span class="c"></span></pre></td><td class="line_number">15</td><td id="15"><pre><span class="c"></span></pre></td></tr>
    <tr><td class="line_number">16</td><td id="16"><pre><span class="c">*/</span></pre></td><td class="line_number">16</td><td id="16"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">17</td><td id="17"><pre></pre></td><td class="line_number">17</td><td id="17"><pre></pre></td></tr>
    <tr><td class="line_number">18</td><td id="18"><pre><span class="c">/*</span></pre></td><td class="line_number">18</td><td id="18"><pre><span class="c">/*</span></pre></td></tr>
    <tr><td class="line_number">19</td><td id="19"><pre><span class="c">    $AnalyzeMe 1.0.0.1$</span></pre></td><td class="line_number">19</td><td id="19"><pre><span class="c">    $AnalyzeMe 1.0.0.1$</span></pre></td></tr>
    <tr><td class="line_number">20</td><td id="20"><pre><span class="c">*/</span></pre></td><td class="line_number">20</td><td id="20"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">21</td><td id="21"><pre><span class="pp">#include</span> <span class="ic">&quot;analyzeme.h&quot;</span></pre></td><td class="line_number">21</td><td id="21"><pre><span class="pp">#include</span> <span class="ic">&quot;analyzeme.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">22</td><td id="22" class="added_line"><pre><span class="pp">#include</span> <span class="ic">&quot;common.h&quot;</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">23</td><td id="23" class="added_line"><pre><span class="pp">#include</span> <span class="ic">&quot;memory_manage.h&quot;</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">24</td><td id="24"><pre><span class="pp">#include</span> <span class="ic">&quot;parse_cmdline.h&quot;</span></pre></td><td class="line_number">22</td><td id="22"><pre><span class="pp">#include</span> <span class="ic">&quot;parse_cmdline.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">25</td><td id="25"><pre><span class="pp">#include</span> <span class="ic">&quot;common_measure.h&quot;</span></pre></td><td class="line_number">23</td><td id="23"><pre><span class="pp">#include</span> <span class="ic">&quot;common_measure.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">26</td><td id="26"><pre><span class="pp">#include</span> <span class="ic">&quot;trend_measure.h&quot;</span></pre></td><td class="line_number">24</td><td id="24"><pre><span class="pp">#include</span> <span class="ic">&quot;trend_measure.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">27</td><td id="27"><pre><span class="pp">#include</span> <span class="ic">&quot;make_file_list.h&quot;</span></pre></td><td class="line_number">25</td><td id="25"><pre><span class="pp">#include</span> <span class="ic">&quot;make_file_list.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">28</td><td id="28"><pre><span class="pp">#include</span> <span class="ic">&quot;output.h&quot;</span></pre></td><td class="line_number">26</td><td id="26"><pre><span class="pp">#include</span> <span class="ic">&quot;output.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">29</td><td id="29"><pre><span class="pp">#include</span> <span class="ic">&quot;get_process_macro.h&quot;</span></pre></td><td class="line_number">27</td><td id="27"><pre><span class="pp">#include</span> <span class="ic">&quot;get_process_macro.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">30</td><td id="30" class="added_line"><pre><span class="pp">#include</span> <span class="ic">&lt;signal.h&gt;</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">31</td><td id="31"><pre></pre></td><td class="line_number">28</td><td id="28"><pre></pre></td></tr>
    <tr><td class="line_number">32</td><td id="32"><pre><span class="c">/****************************************************/</span></pre></td><td class="line_number">29</td><td id="29"><pre><span class="c">/****************************************************/</span></pre></td></tr>
    <tr><td class="line_number">33</td><td id="33"><pre><span class="c">/*              ????                            */</span></pre></td><td class="line_number">30</td><td id="30"><pre><span class="c">/*              ????                            */</span></pre></td></tr>
    <tr><td class="line_number">34</td><td id="34"><pre><span class="c">/****************************************************/</span></pre></td><td class="line_number">31</td><td id="31"><pre><span class="c">/****************************************************/</span></pre></td></tr>
    <tr><td class="line_number">35</td><td id="35"><pre><span class="di">const</span> <span class="pt">char</span>* TRACEFILE = <span class="s"><span class="dl">&quot;</span><span class="k">analyzeme_trace.txt</span><span class="dl">&quot;</span></span>;</pre></td><td class="line_number">32</td><td id="32"><pre><span class="di">const</span> <span class="pt">char</span>* TRACEFILE = <span class="s"><span class="dl">&quot;</span><span class="k">analyzeme_trace.txt</span><span class="dl">&quot;</span></span>;</pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9854"><a href="/result/view_message/1/2/7?message_id=3211&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(35),(13) :Msg(2:3211) The global identifier 'TRACEFILE' is defined but not used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">36</td><td id="36"><pre><span class="di">const</span> <span class="pt">char</span>* APPLOGFILE = <span class="s"><span class="dl">&quot;</span><span class="k">analyzeme_log.txt</span><span class="dl">&quot;</span></span>;</pre></td><td class="line_number">33</td><td id="33"><pre><span class="di">const</span> <span class="pt">char</span>* APPLOGFILE = <span class="s"><span class="dl">&quot;</span><span class="k">analyzeme_log.txt</span><span class="dl">&quot;</span></span>;</pre></td></tr>
    <tr><td class="line_number">37</td><td id="37"><pre></pre></td><td class="line_number">34</td><td id="34"><pre></pre></td></tr>
    <tr><td class="line_number">38</td><td id="38"><pre><span class="c">/****************************************************/</span></pre></td><td class="line_number">35</td><td id="35"><pre><span class="c">/****************************************************/</span></pre></td></tr>
    <tr><td class="line_number">39</td><td id="39"><pre><span class="c">/*              ?O???[?o???????                  */</span></pre></td><td class="line_number">36</td><td id="36"><pre><span class="c">/*              ?O???[?o???????                  */</span></pre></td></tr>
    <tr><td class="line_number">40</td><td id="40"><pre><span class="c">/****************************************************/</span></pre></td><td class="line_number">37</td><td id="37"><pre><span class="c">/****************************************************/</span></pre></td></tr>
    <tr><td class="line_number">41</td><td id="41"><pre><span class="c">/* ????????File??n???h????????????O???[?o???????? */</span></pre></td><td class="line_number">38</td><td id="38"><pre><span class="c">/* ????????File??n???h????????????O???[?o???????? */</span></pre></td></tr>
    <tr><td class="line_number">42</td><td id="42"><pre></pre></td><td class="line_number">39</td><td id="39"><pre></pre></td></tr>
    <tr><td class="line_number">43</td><td id="43"><pre><span class="c">/* Log File */</span></pre></td><td class="line_number">40</td><td id="40"><pre><span class="c">/* Log File */</span></pre></td></tr>
    <tr><td class="line_number">44</td><td id="44"><pre>FILE *g_fpLogFile = <span class="pc">NULL</span>;       <span class="c">/* Log File pointer */</span></pre></td><td class="line_number">41</td><td id="41"><pre>FILE *g_fpLogFile = <span class="pc">NULL</span>;       <span class="c">/* Log File pointer */</span></pre></td></tr>
    <tr><td class="line_number">45</td><td id="45"><pre><span class="c">/*  Trace File */</span></pre></td><td class="line_number">42</td><td id="42"><pre><span class="c">/*  Trace File */</span></pre></td></tr>
    <tr><td class="line_number">46</td><td id="46"><pre>FILE *g_fpTraceFile = <span class="pc">NULL</span>;     <span class="c">/* Trace File pointer */</span></pre></td><td class="line_number">43</td><td id="43"><pre>FILE *g_fpTraceFile = <span class="pc">NULL</span>;     <span class="c">/* Trace File pointer */</span></pre></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9855"><a href="/result/view_message/1/2/7?message_id=3211&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(46),(7) :Msg(2:3211) The global identifier 'g_fpTraceFile' is defined but not used.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">47</td><td id="47"><pre><span class="c">/* ?G???[File */</span></pre></td><td class="line_number">44</td><td id="44"><pre><span class="c">/* ?G???[File */</span></pre></td></tr>
    <tr><td class="line_number">48</td><td id="48"><pre>FILE *g_fpErrorFile = <span class="pc">NULL</span>;</pre></td><td class="line_number">45</td><td id="45"><pre>FILE *g_fpErrorFile = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">49</td><td id="49"><pre></pre></td><td class="line_number">46</td><td id="46"><pre></pre></td></tr>
    <tr><td class="line_number">50</td><td id="50" class="added_line"><pre><span class="pt">bool</span> g_bTrace           = <span class="pc">false</span>;    <span class="c">/* Trace flag */</span></pre></td><td class="line_number">47</td><td id="47" class="deleted_line"><pre><span class="pt">bool</span> g_bTrace;    <span class="c">/* Trace flag */</span></pre></td></tr>
    <tr><td class="line_number">51</td><td id="51" class="added_line"><pre><span class="pt">char</span> g_szNVPath[MAX_PATH] = {<span class="i">0</span>};</pre></td><td class="line_number">48</td><td id="48" class="deleted_line"><pre><span class="pt">char</span> g_szNVPath[MAX_PATH] = {</pre></td></tr>
    <tr><td class="line_number">52</td><td id="52" class="added_line"><pre><span class="pt">char</span> g_szOVPath[MAX_PATH] = {<span class="i">0</span>};</pre></td><td class="line_number">49</td><td id="49" class="deleted_line"><pre>    <span class="i">0</span></pre></td></tr>
    <tr><td class="line_number">53</td><td id="53" class="added_line"><pre><span class="pt">bool</span> g_bTrendFile = <span class="pc">false</span>;</pre></td><td class="line_number">50</td><td id="50" class="deleted_line"><pre>};</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">51</td><td id="51" class="deleted_line"><pre><span class="pt">char</span> g_szOVPath[MAX_PATH] = {</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">52</td><td id="52" class="deleted_line"><pre>    <span class="i">0</span></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">53</td><td id="53" class="deleted_line"><pre>};</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">54</td><td id="54" class="deleted_line"><pre><span class="pt">bool</span> g_bTrendFile = <span class="pc">true</span>;</pre></td></tr>
    <tr><td class="line_number">54</td><td id="54"><pre><span class="c">/* Option File????e??????????O???[?o???????? */</span></pre></td><td class="line_number">55</td><td id="55"><pre><span class="c">/* Option File????e??????????O???[?o???????? */</span></pre></td></tr>
    <tr><td class="line_number">55</td><td id="55"><pre><span class="pt">char</span> *g_optionFileCont = <span class="pc">NULL</span>;</pre></td><td class="line_number">56</td><td id="56"><pre><span class="pt">char</span> *g_optionFileCont = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9856"><a href="/result/view_message/1/2/7?message_id=3211&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(55),(7) :Msg(2:3211) The global identifier 'g_optionFileCont' is defined but not used.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10827"><a href="/result/view_message/1/2/11?message_id=3211&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(56),(7) :Msg(2:3211) The global identifier 'g_optionFileCont' is defined but not used.</b></a></div></td></tr>
    <tr><td class="line_number">56</td><td id="56"><pre><span class="c">/* Symbol File????e??????????O???[?o???????? */</span></pre></td><td class="line_number">57</td><td id="57"><pre><span class="c">/* Symbol File????e??????????O???[?o???????? */</span></pre></td></tr>
    <tr><td class="line_number">57</td><td id="57"><pre><span class="pt">char</span> *g_symbolFileCont = <span class="pc">NULL</span>;</pre></td><td class="line_number">58</td><td id="58"><pre><span class="pt">char</span> *g_symbolFileCont = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9857"><a href="/result/view_message/1/2/7?message_id=3211&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(57),(7) :Msg(2:3211) The global identifier 'g_symbolFileCont' is defined but not used.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10828"><a href="/result/view_message/1/2/11?message_id=3211&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(58),(7) :Msg(2:3211) The global identifier 'g_symbolFileCont' is defined but not used.</b></a></div></td></tr>
    <tr><td class="line_number">58</td><td id="58"><pre><span class="pt">bool</span> g_bOutTime = <span class="pc">false</span>;</pre></td><td class="line_number">59</td><td id="59"><pre><span class="pt">bool</span> g_bOutTime = <span class="pc">false</span>;</pre></td></tr>
    <tr><td class="line_number">59</td><td id="59"><pre>ST_AnalyzeMe *g_pAnzInfo;  <span class="c">/* AnalyzeMe??????? */</span></pre></td><td class="line_number">60</td><td id="60"><pre>ST_AnalyzeMe *g_pAnzInfo;  <span class="c">/* AnalyzeMe??????? */</span></pre></td></tr>
    <tr><td class="line_number">60</td><td id="60"><pre><span class="c">/**</span></pre></td><td class="line_number">61</td><td id="61"><pre><span class="c">/**</span></pre></td></tr>
    <tr><td class="line_number">61</td><td id="61"><pre><span class="c">*  main</span></pre></td><td class="line_number">62</td><td id="62"><pre><span class="c">*  main</span></pre></td></tr>
    <tr><td class="line_number">62</td><td id="62"><pre><span class="c">*  AnalyzeMe????C?????</span></pre></td><td class="line_number">63</td><td id="63"><pre><span class="c">*  AnalyzeMe????C?????</span></pre></td></tr>
    <tr><td class="line_number">63</td><td id="63"><pre><span class="c">*  @param  argc ?R?}???h???C??????????</span></pre></td><td class="line_number">64</td><td id="64"><pre><span class="c">*  @param  argc ?R?}???h???C??????????</span></pre></td></tr>
    <tr><td class="line_number">64</td><td id="64"><pre><span class="c">*  @param  argv ?R?}???h???C?????????z??</span></pre></td><td class="line_number">65</td><td id="65"><pre><span class="c">*  @param  argv ?R?}???h???C?????????z??</span></pre></td></tr>
    <tr><td class="line_number">65</td><td id="65"><pre><span class="c">*  @return</span></pre></td><td class="line_number">66</td><td id="66"><pre><span class="c">*  @return</span></pre></td></tr>
    <tr><td class="line_number">66</td><td id="66"><pre><span class="c">           ANZ_SUCCESS:?????I??</span></pre></td><td class="line_number">67</td><td id="67"><pre><span class="c">           ANZ_SUCCESS:?????I??</span></pre></td></tr>
    <tr><td class="line_number">67</td><td id="67"><pre><span class="c">           ANZ_ERROR  :????I??</span></pre></td><td class="line_number">68</td><td id="68"><pre><span class="c">           ANZ_ERROR  :????I??</span></pre></td></tr>
    <tr><td class="line_number">68</td><td id="68"><pre><span class="c">*  @author zhang-gh</span></pre></td><td class="line_number">69</td><td id="69"><pre><span class="c">*  @author zhang-gh</span></pre></td></tr>
    <tr><td class="line_number">69</td><td id="69"><pre><span class="c">*/</span></pre></td><td class="line_number">70</td><td id="70"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">70</td><td id="70"><pre><span class="pt">int</span> main(<span class="pt">int</span> argc,<span class="pt">char</span> * argv[])</pre></td><td class="line_number">71</td><td id="71"><pre><span class="pt">int</span> main(<span class="pt">int</span> argc,<span class="pt">char</span> * argv[])</pre></td></tr>
    <tr><td class="line_number">71</td><td id="71"><pre>{</pre></td><td class="line_number">72</td><td id="72"><pre>{</pre></td></tr>
    <tr><td class="line_number">72</td><td id="72"><pre>    <span class="c">/* ????? */</span></pre></td><td class="line_number">73</td><td id="73"><pre>    <span class="c">/* ????? */</span></pre></td></tr>
    <tr><td class="line_number">73</td><td id="73"><pre>    <span class="pt">int</span>  the_iRet;                 <span class="c">/* Return?l */</span></pre></td><td class="line_number">74</td><td id="74"><pre>    <span class="pt">int</span>  the_iRet;                 <span class="c">/* Return?l */</span></pre></td></tr>
    <tr><td class="line_number">74</td><td id="74"><pre>    <span class="pt">int</span>  the_iMeasureType;         <span class="c">/* ?v??????F????v???A?????v?? */</span></pre></td><td class="line_number">75</td><td id="75"><pre>    <span class="pt">int</span>  the_iMeasureType;         <span class="c">/* ?v??????F????v???A?????v?? */</span></pre></td></tr>
    <tr><td class="line_number">75</td><td id="75"><pre>    <span class="pt">char</span> **the_pMeasureItem;       <span class="c">/* ?R?}???h???C???????????v????????X?g */</span></pre></td><td class="line_number">76</td><td id="76"><pre>    <span class="pt">char</span> **the_pMeasureItem;       <span class="c">/* ?R?}???h???C???????????v????????X?g */</span></pre></td></tr>
    <tr><td class="line_number">76</td><td id="76"><pre>    <span class="pt">char</span> the_szCurMetrics[MAX_METRICS] = {<span class="i">0</span>};<span class="c">/* ?J?????g?v??Metrics */</span></pre></td><td class="line_number">77</td><td id="77"><pre>    <span class="pt">char</span> the_szCurMetrics[MAX_METRICS] = {<span class="i">0</span>};<span class="c">/* ?J?????g?v??Metrics */</span></pre></td></tr>
    <tr><td class="line_number">77</td><td id="77"><pre>    ST_Option    *the_pCmdOption;    <span class="c">/* ?R?}???h???C??????????Option???? */</span></pre></td><td class="line_number">78</td><td id="78"><pre>    ST_Option    *the_pCmdOption;    <span class="c">/* ?R?}???h???C??????????Option???? */</span></pre></td></tr>
    <tr><td class="line_number">78</td><td id="78"><pre>    ST_AnalyzeMe *the_pAnzInfo;      <span class="c">/* AnalyzeMe??????? */</span></pre></td><td class="line_number">79</td><td id="79"><pre>    ST_AnalyzeMe *the_pAnzInfo;      <span class="c">/* AnalyzeMe??????? */</span></pre></td></tr>
    <tr><td class="line_number">79</td><td id="79"><pre>    ST_Option    *the_pOption;       <span class="c">/* AnalyzeMe???????????Option???? */</span></pre></td><td class="line_number">80</td><td id="80"><pre>    ST_Option    *the_pOption;       <span class="c">/* AnalyzeMe???????????Option???? */</span></pre></td></tr>
    <tr><td class="line_number">80</td><td id="80"><pre>    <span class="pt">char</span> *the_pTrace = <span class="pc">NULL</span>;</pre></td><td class="line_number">81</td><td id="81"><pre>    <span class="pt">char</span> *the_pTrace = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">81</td><td id="81"><pre>    <span class="r">struct</span> timeb the_st ;</pre></td><td class="line_number">82</td><td id="82"><pre>    <span class="r">struct</span> timeb the_st ;</pre></td></tr>
    <tr><td class="line_number">82</td><td id="82"><pre>    <span class="r">struct</span> timeb the_ed ;</pre></td><td class="line_number">83</td><td id="83"><pre>    <span class="r">struct</span> timeb the_ed ;</pre></td></tr>
    <tr><td class="line_number">83</td><td id="83"><pre></pre></td><td class="line_number">84</td><td id="84"><pre></pre></td></tr>
    <tr><td class="line_number">84</td><td id="84"><pre>    <span class="c">/* ????????? */</span></pre></td><td class="line_number">85</td><td id="85"><pre>    <span class="c">/* ????????? */</span></pre></td></tr>
    <tr><td class="line_number">85</td><td id="85"><pre>    the_st.time = <span class="i">0</span>;</pre></td><td class="line_number">86</td><td id="86"><pre>    the_st.time = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">86</td><td id="86"><pre>    the_st.millitm = <span class="i">0</span>;</pre></td><td class="line_number">87</td><td id="87"><pre>    the_st.millitm = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">87</td><td id="87"><pre>    the_ed.time = <span class="i">0</span>;</pre></td><td class="line_number">88</td><td id="88"><pre>    the_ed.time = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">88</td><td id="88"><pre>    the_ed.millitm = <span class="i">0</span>;</pre></td><td class="line_number">89</td><td id="89"><pre>    the_ed.millitm = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">89</td><td id="89"><pre>    the_pAnzInfo = <span class="pc">NULL</span>;</pre></td><td class="line_number">90</td><td id="90"><pre>    the_pAnzInfo = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">90</td><td id="90"><pre>    the_pCmdOption = <span class="pc">NULL</span>;</pre></td><td class="line_number">91</td><td id="91"><pre>    the_pCmdOption = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">91</td><td id="91"><pre>    the_iRet = ANZ_SUCCESS;</pre></td><td class="line_number">92</td><td id="92"><pre>    the_iRet = ANZ_SUCCESS;</pre></td></tr>
    <tr><td class="line_number">92</td><td id="92"><pre>    the_pMeasureItem = <span class="pc">NULL</span>;</pre></td><td class="line_number">93</td><td id="93"><pre>    the_pMeasureItem = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">93</td><td id="93"><pre></pre></td><td class="line_number">94</td><td id="94"><pre></pre></td></tr>
    <tr><td class="line_number">94</td><td id="94" class="added_line"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">95</td><td id="95" class="added_line"><pre>    InitMemMan();</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">96</td><td id="96" class="added_line"><pre><span class="pp">#endif</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">97</td><td id="97" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">98</td><td id="98"><pre>    <span class="c">/* ?V?O?i???n???h????o?^?@*/</span></pre></td><td class="line_number">95</td><td id="95"><pre>    <span class="c">/* ?V?O?i???n???h????o?^?@*/</span></pre></td></tr>
    <tr><td class="line_number">99</td><td id="99"><pre>    SetSignal() ;</pre></td><td class="line_number">96</td><td id="96"><pre>    SetSignal() ;</pre></td></tr>
    <tr><td class="line_number">100</td><td id="100"><pre></pre></td><td class="line_number">97</td><td id="97"><pre></pre></td></tr>
    <tr><td class="line_number">101</td><td id="101"><pre>    the_pTrace = getenv(<span class="s"><span class="dl">&quot;</span><span class="k">AnzTrace</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">98</td><td id="98"><pre>    the_pTrace = getenv(<span class="s"><span class="dl">&quot;</span><span class="k">AnzTrace</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">102</td><td id="102"><pre>    <span class="r">if</span>(the_pTrace != <span class="pc">NULL</span>) {</pre></td><td class="line_number">99</td><td id="99"><pre>    <span class="r">if</span>(the_pTrace != <span class="pc">NULL</span>) {</pre></td></tr>
    <tr><td class="line_number">103</td><td id="103"><pre>        <span class="r">if</span>(strcmp(the_pTrace,<span class="s"><span class="dl">&quot;</span><span class="k">ON</span><span class="dl">&quot;</span></span>) == <span class="i">0</span> ) {</pre></td><td class="line_number">100</td><td id="100"><pre>        <span class="r">if</span>(strcmp(the_pTrace,<span class="s"><span class="dl">&quot;</span><span class="k">ON</span><span class="dl">&quot;</span></span>) == <span class="i">0</span> ) {</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9858"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9859"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9860"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9861"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9862"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(43) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10829"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10830"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10831"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10832"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10833"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(43) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">104</td><td id="104"><pre>            g_bTrace = <span class="pc">true</span>;</pre></td><td class="line_number">101</td><td id="101"><pre>            g_bTrace = <span class="pc">true</span>;</pre></td></tr>
    <tr><td class="line_number">105</td><td id="105"><pre>        }</pre></td><td class="line_number">102</td><td id="102"><pre>        }</pre></td></tr>
    <tr><td class="line_number">106</td><td id="106"><pre>    }</pre></td><td class="line_number">103</td><td id="103"><pre>    }</pre></td></tr>
    <tr><td class="line_number">107</td><td id="107"><pre>    <span class="c">/* TraceFile??LogFile???J?? */</span></pre></td><td class="line_number">104</td><td id="104"><pre>    <span class="c">/* TraceFile??LogFile???J?? */</span></pre></td></tr>
    <tr><td class="line_number">108</td><td id="108" class="added_line"><pre>        <span class="c">/*</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">109</td><td id="109"><pre><span class="c">    g_fpTraceFile = fopen(TRACEFILE,&quot;w&quot;);</span></pre></td><td class="line_number">105</td><td id="105"><pre>    g_fpTraceFile = fopen(TRACEFILE,<span class="s"><span class="dl">&quot;</span><span class="k">w</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">110</td><td id="110"><pre><span class="c">    if(g_fpTraceFile == NULL){</span></pre></td><td class="line_number">106</td><td id="106"><pre>    <span class="r">if</span>(g_fpTraceFile == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">111</td><td id="111"><pre><span class="c">        printf(&quot;Create trace file failed!\n&quot;);</span></pre></td><td class="line_number">107</td><td id="107"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">Create trace file failed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">112</td><td id="112"><pre><span class="c">    }</span></pre></td><td class="line_number">108</td><td id="108"><pre>    }</pre></td></tr>
    <tr><td class="line_number">113</td><td id="113" class="added_line"><pre><span class="c">        */</span></pre></td><td class="line_number">109</td><td id="109" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number">114</td><td id="114"><pre>    g_fpLogFile = fopen(APPLOGFILE,<span class="s"><span class="dl">&quot;</span><span class="k">w</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">110</td><td id="110"><pre>    g_fpLogFile = fopen(APPLOGFILE,<span class="s"><span class="dl">&quot;</span><span class="k">w</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">115</td><td id="115"><pre>    <span class="r">if</span>(g_fpLogFile == <span class="pc">NULL</span>){</pre></td><td class="line_number">111</td><td id="111"><pre>    <span class="r">if</span>(g_fpLogFile == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">116</td><td id="116"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">Create log file failed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);   <span class="c">/* */</span></pre></td><td class="line_number">112</td><td id="112"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">Create log file failed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);   <span class="c">/* */</span></pre></td></tr>
    <tr><td class="line_number">117</td><td id="117"><pre>    }</pre></td><td class="line_number">113</td><td id="113"><pre>    }</pre></td></tr>
    <tr><td class="line_number">118</td><td id="118"><pre></pre></td><td class="line_number">114</td><td id="114"><pre></pre></td></tr>
    <tr><td class="line_number">119</td><td id="119"><pre>    <span class="c">/* AnalyzeMe???????????????m?? */</span></pre></td><td class="line_number">115</td><td id="115"><pre>    <span class="c">/* AnalyzeMe???????????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">120</td><td id="120"><pre>    AnzMalloc(the_pAnzInfo,ST_AnalyzeMe*,<span class="r">sizeof</span>(ST_AnalyzeMe));</pre></td><td class="line_number">116</td><td id="116"><pre>    AnzMalloc(the_pAnzInfo,ST_AnalyzeMe*,<span class="r">sizeof</span>(ST_AnalyzeMe));</pre></td></tr>
    <tr><td class="line_number">121</td><td id="121"><pre>    <span class="r">if</span>(the_pAnzInfo == <span class="pc">NULL</span>){</pre></td><td class="line_number">117</td><td id="117"><pre>    <span class="r">if</span>(the_pAnzInfo == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">122</td><td id="122"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td><td class="line_number">118</td><td id="118"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td></tr>
    <tr><td class="line_number">123</td><td id="123" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">119</td><td id="119" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">124</td><td id="124"><pre>    }</pre></td><td class="line_number">120</td><td id="120"><pre>    }</pre></td></tr>
    <tr><td class="line_number">125</td><td id="125"><pre>    memset(the_pAnzInfo,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_AnalyzeMe));</pre></td><td class="line_number">121</td><td id="121"><pre>    memset(the_pAnzInfo,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_AnalyzeMe));</pre></td></tr>
    <tr><td class="line_number">126</td><td id="126"><pre>    g_pAnzInfo = the_pAnzInfo;</pre></td><td class="line_number">122</td><td id="122"><pre>    g_pAnzInfo = the_pAnzInfo;</pre></td></tr>
    <tr><td class="line_number">127</td><td id="127"><pre>    <span class="c">/* AnalyzeMe???????????Option????????????m?? */</span></pre></td><td class="line_number">123</td><td id="123"><pre>    <span class="c">/* AnalyzeMe???????????Option????????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">128</td><td id="128"><pre>    AnzMalloc(the_pAnzInfo-&gt;m_option,ST_Option*,<span class="r">sizeof</span>(ST_Option));</pre></td><td class="line_number">124</td><td id="124"><pre>    AnzMalloc(the_pAnzInfo-&gt;m_option,ST_Option*,<span class="r">sizeof</span>(ST_Option));</pre></td></tr>
    <tr><td class="line_number">129</td><td id="129"><pre>    <span class="r">if</span>(the_pAnzInfo-&gt;m_option == <span class="pc">NULL</span>){</pre></td><td class="line_number">125</td><td id="125"><pre>    <span class="r">if</span>(the_pAnzInfo-&gt;m_option == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">130</td><td id="130"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td><td class="line_number">126</td><td id="126"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td></tr>
    <tr><td class="line_number">131</td><td id="131" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">127</td><td id="127" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">132</td><td id="132"><pre>    }</pre></td><td class="line_number">128</td><td id="128"><pre>    }</pre></td></tr>
    <tr><td class="line_number">133</td><td id="133"><pre>    memset(the_pAnzInfo-&gt;m_option,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_Option));</pre></td><td class="line_number">129</td><td id="129"><pre>    memset(the_pAnzInfo-&gt;m_option,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_Option));</pre></td></tr>
    <tr><td class="line_number">134</td><td id="134"><pre></pre></td><td class="line_number">130</td><td id="130"><pre></pre></td></tr>
    <tr><td class="line_number">135</td><td id="135"><pre>    <span class="c">/* ?v?????Item????????m?? */</span></pre></td><td class="line_number">131</td><td id="131"><pre>    <span class="c">/* ?v?????Item????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">136</td><td id="136"><pre></pre></td><td class="line_number">132</td><td id="132"><pre></pre></td></tr>
    <tr><td class="line_number">137</td><td id="137"><pre>    AnzMalloc(the_pMeasureItem,<span class="pt">char</span>**,argc * <span class="r">sizeof</span>(<span class="pt">char</span> *));</pre></td><td class="line_number">133</td><td id="133"><pre>    AnzMalloc(the_pMeasureItem,<span class="pt">char</span>**,argc * <span class="r">sizeof</span>(<span class="pt">char</span> *));</pre></td></tr>
    <tr><td class="line_number">138</td><td id="138"><pre>    <span class="r">if</span>(the_pMeasureItem == <span class="pc">NULL</span>) {</pre></td><td class="line_number">134</td><td id="134"><pre>    <span class="r">if</span>(the_pMeasureItem == <span class="pc">NULL</span>) {</pre></td></tr>
    <tr><td class="line_number">139</td><td id="139"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td><td class="line_number">135</td><td id="135"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td></tr>
    <tr><td class="line_number">140</td><td id="140" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">136</td><td id="136" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">141</td><td id="141"><pre>    }</pre></td><td class="line_number">137</td><td id="137"><pre>    }</pre></td></tr>
    <tr><td class="line_number">142</td><td id="142"><pre>    memset(the_pMeasureItem,<span class="i">0</span>,argc * <span class="r">sizeof</span>(<span class="pt">char</span> *));</pre></td><td class="line_number">138</td><td id="138"><pre>    memset(the_pMeasureItem,<span class="i">0</span>,argc * <span class="r">sizeof</span>(<span class="pt">char</span> *));</pre></td></tr>
    <tr><td class="line_number">143</td><td id="143"><pre></pre></td><td class="line_number">139</td><td id="139"><pre></pre></td></tr>
    <tr><td class="line_number">144</td><td id="144"><pre>the_pOption = the_pAnzInfo-&gt;m_option;</pre></td><td class="line_number">140</td><td id="140"><pre>the_pOption = the_pAnzInfo-&gt;m_option;</pre></td></tr>
    <tr><td class="line_number">145</td><td id="145"><pre><span class="c">/* ?f?t?H???g?l??Option????the_pCmdOption??????? */</span></pre></td><td class="line_number">141</td><td id="141"><pre><span class="c">/* ?f?t?H???g?l??Option????the_pCmdOption??????? */</span></pre></td></tr>
    <tr><td class="line_number">146</td><td id="146"><pre>the_pOption-&gt;m_version = OFF;</pre></td><td class="line_number">142</td><td id="142"><pre>the_pOption-&gt;m_version = OFF;</pre></td></tr>
    <tr><td class="line_number">147</td><td id="147"><pre>the_pOption-&gt;m_help = OFF;</pre></td><td class="line_number">143</td><td id="143"><pre>the_pOption-&gt;m_help = OFF;</pre></td></tr>
    <tr><td class="line_number">148</td><td id="148"><pre>the_pOption-&gt;m_verbos = OFF;</pre></td><td class="line_number">144</td><td id="144"><pre>the_pOption-&gt;m_verbos = OFF;</pre></td></tr>
    <tr><td class="line_number">149</td><td id="149"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">145</td><td id="145"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">150</td><td id="150"><pre>strcpy(the_pOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">./</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">146</td><td id="146"><pre>strcpy(the_pOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">./</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">151</td><td id="151"><pre><span class="pp">#else</span></pre></td><td class="line_number">147</td><td id="147"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">152</td><td id="152"><pre>strcpy(the_pOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">.</span><span class="ch">\\</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">148</td><td id="148"><pre>strcpy(the_pOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">.</span><span class="ch">\\</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">153</td><td id="153"><pre><span class="pp">#endif</span></pre></td><td class="line_number">149</td><td id="149"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">154</td><td id="154"><pre>strcpy(the_pOption-&gt;m_filePattern,<span class="s"><span class="dl">&quot;</span><span class="k">**/*.[CcHh]</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">150</td><td id="150"><pre>strcpy(the_pOption-&gt;m_filePattern,<span class="s"><span class="dl">&quot;</span><span class="k">**/*.[CcHh]</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">155</td><td id="155"><pre>strcpy(the_pOption-&gt;m_symbolFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">151</td><td id="151"><pre>strcpy(the_pOption-&gt;m_symbolFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">156</td><td id="156"><pre>strcpy(the_pOption-&gt;m_optionFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">152</td><td id="152"><pre>strcpy(the_pOption-&gt;m_optionFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">157</td><td id="157"><pre>the_pOption-&gt;m_fileLOC = ON;</pre></td><td class="line_number">153</td><td id="153"><pre>the_pOption-&gt;m_fileLOC = ON;</pre></td></tr>
    <tr><td class="line_number">158</td><td id="158"><pre>the_pOption-&gt;m_redundancy = OFF;</pre></td><td class="line_number">154</td><td id="154"><pre>the_pOption-&gt;m_redundancy = OFF;</pre></td></tr>
    <tr><td class="line_number">159</td><td id="159"><pre>the_pOption-&gt;m_funcNum = OFF;</pre></td><td class="line_number">155</td><td id="155"><pre>the_pOption-&gt;m_funcNum = OFF;</pre></td></tr>
    <tr><td class="line_number">160</td><td id="160"><pre>the_pOption-&gt;m_eloc = OFF;</pre></td><td class="line_number">156</td><td id="156"><pre>the_pOption-&gt;m_eloc = OFF;</pre></td></tr>
    <tr><td class="line_number">161</td><td id="161"><pre>the_pOption-&gt;m_mccabe = OFF;</pre></td><td class="line_number">157</td><td id="157"><pre>the_pOption-&gt;m_mccabe = OFF;</pre></td></tr>
    <tr><td class="line_number">162</td><td id="162"><pre>the_pOption-&gt;m_similar = OFF;</pre></td><td class="line_number">158</td><td id="158"><pre>the_pOption-&gt;m_similar = OFF;</pre></td></tr>
    <tr><td class="line_number">163</td><td id="163"><pre>the_pOption-&gt;m_trend = OFF;</pre></td><td class="line_number">159</td><td id="159"><pre>the_pOption-&gt;m_trend = OFF;</pre></td></tr>
    <tr><td class="line_number">164</td><td id="164"><pre>the_pOption-&gt;m_funcTrend = OFF;</pre></td><td class="line_number">160</td><td id="160"><pre>the_pOption-&gt;m_funcTrend = OFF;</pre></td></tr>
    <tr><td class="line_number">165</td><td id="165"><pre>the_pOption-&gt;m_symThresh = <span class="i">70</span>;</pre></td><td class="line_number">161</td><td id="161"><pre>the_pOption-&gt;m_symThresh = <span class="i">70</span>;</pre></td></tr>
    <tr><td class="line_number">166</td><td id="166"><pre>the_pOption-&gt;m_minThresh = <span class="i">2</span>;</pre></td><td class="line_number">162</td><td id="162"><pre>the_pOption-&gt;m_minThresh = <span class="i">2</span>;</pre></td></tr>
    <tr><td class="line_number">167</td><td id="167"><pre></pre></td><td class="line_number">163</td><td id="163"><pre></pre></td></tr>
    <tr><td class="line_number">168</td><td id="168"><pre><span class="c">/* ?R?}???h???C??????????Option????????????m?? */</span></pre></td><td class="line_number">164</td><td id="164"><pre><span class="c">/* ?R?}???h???C??????????Option????????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">169</td><td id="169"><pre>    AnzMalloc(the_pCmdOption,ST_Option*,<span class="r">sizeof</span>(ST_Option));</pre></td><td class="line_number">165</td><td id="165"><pre>    AnzMalloc(the_pCmdOption,ST_Option*,<span class="r">sizeof</span>(ST_Option));</pre></td></tr>
    <tr><td class="line_number">170</td><td id="170"><pre>    <span class="r">if</span>(the_pCmdOption == <span class="pc">NULL</span>){</pre></td><td class="line_number">166</td><td id="166"><pre>    <span class="r">if</span>(the_pCmdOption == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">171</td><td id="171"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td><td class="line_number">167</td><td id="167"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td></tr>
    <tr><td class="line_number">172</td><td id="172" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">168</td><td id="168" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">173</td><td id="173"><pre>    }</pre></td><td class="line_number">169</td><td id="169"><pre>    }</pre></td></tr>
    <tr><td class="line_number">174</td><td id="174"><pre>    memset(the_pCmdOption,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_Option));</pre></td><td class="line_number">170</td><td id="170"><pre>    memset(the_pCmdOption,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_Option));</pre></td></tr>
    <tr><td class="line_number">175</td><td id="175"><pre>    <span class="c">/* ?f?t?H???g?l??Option????the_pCmdOption??????? */</span></pre></td><td class="line_number">171</td><td id="171"><pre>    <span class="c">/* ?f?t?H???g?l??Option????the_pCmdOption??????? */</span></pre></td></tr>
    <tr><td class="line_number">176</td><td id="176"><pre>    the_pCmdOption-&gt;m_version = OFF;</pre></td><td class="line_number">172</td><td id="172"><pre>    the_pCmdOption-&gt;m_version = OFF;</pre></td></tr>
    <tr><td class="line_number">177</td><td id="177"><pre>    the_pCmdOption-&gt;m_help = OFF;</pre></td><td class="line_number">173</td><td id="173"><pre>    the_pCmdOption-&gt;m_help = OFF;</pre></td></tr>
    <tr><td class="line_number">178</td><td id="178"><pre>    the_pCmdOption-&gt;m_verbos = OFF;</pre></td><td class="line_number">174</td><td id="174"><pre>    the_pCmdOption-&gt;m_verbos = OFF;</pre></td></tr>
    <tr><td class="line_number">179</td><td id="179"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">175</td><td id="175"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">180</td><td id="180"><pre>    strcpy(the_pCmdOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">./</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">176</td><td id="176"><pre>    strcpy(the_pCmdOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">./</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">181</td><td id="181"><pre><span class="pp">#else</span></pre></td><td class="line_number">177</td><td id="177"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">182</td><td id="182"><pre>    strcpy(the_pCmdOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">.</span><span class="ch">\\</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">178</td><td id="178"><pre>    strcpy(the_pCmdOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">.</span><span class="ch">\\</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">183</td><td id="183"><pre><span class="pp">#endif</span></pre></td><td class="line_number">179</td><td id="179"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">184</td><td id="184"><pre>    strcpy(the_pCmdOption-&gt;m_filePattern,<span class="s"><span class="dl">&quot;</span><span class="k">**/*.[CcHh]</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">180</td><td id="180"><pre>    strcpy(the_pCmdOption-&gt;m_filePattern,<span class="s"><span class="dl">&quot;</span><span class="k">**/*.[CcHh]</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">185</td><td id="185"><pre>    strcpy(the_pCmdOption-&gt;m_symbolFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">181</td><td id="181"><pre>    strcpy(the_pCmdOption-&gt;m_symbolFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">186</td><td id="186"><pre>    strcpy(the_pCmdOption-&gt;m_optionFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">182</td><td id="182"><pre>    strcpy(the_pCmdOption-&gt;m_optionFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">187</td><td id="187"><pre>    the_pCmdOption-&gt;m_fileLOC = ON;</pre></td><td class="line_number">183</td><td id="183"><pre>    the_pCmdOption-&gt;m_fileLOC = ON;</pre></td></tr>
    <tr><td class="line_number">188</td><td id="188"><pre>    the_pCmdOption-&gt;m_redundancy = OFF;</pre></td><td class="line_number">184</td><td id="184"><pre>    the_pCmdOption-&gt;m_redundancy = OFF;</pre></td></tr>
    <tr><td class="line_number">189</td><td id="189"><pre>    the_pCmdOption-&gt;m_funcNum = OFF;</pre></td><td class="line_number">185</td><td id="185"><pre>    the_pCmdOption-&gt;m_funcNum = OFF;</pre></td></tr>
    <tr><td class="line_number">190</td><td id="190"><pre>    the_pCmdOption-&gt;m_eloc = OFF;</pre></td><td class="line_number">186</td><td id="186"><pre>    the_pCmdOption-&gt;m_eloc = OFF;</pre></td></tr>
    <tr><td class="line_number">191</td><td id="191"><pre>    the_pCmdOption-&gt;m_mccabe = OFF;</pre></td><td class="line_number">187</td><td id="187"><pre>    the_pCmdOption-&gt;m_mccabe = OFF;</pre></td></tr>
    <tr><td class="line_number">192</td><td id="192"><pre>    the_pCmdOption-&gt;m_similar = OFF;</pre></td><td class="line_number">188</td><td id="188"><pre>    the_pCmdOption-&gt;m_similar = OFF;</pre></td></tr>
    <tr><td class="line_number">193</td><td id="193"><pre>    the_pCmdOption-&gt;m_trend = OFF;</pre></td><td class="line_number">189</td><td id="189"><pre>    the_pCmdOption-&gt;m_trend = OFF;</pre></td></tr>
    <tr><td class="line_number">194</td><td id="194"><pre>    the_pCmdOption-&gt;m_funcTrend = OFF;</pre></td><td class="line_number">190</td><td id="190"><pre>    the_pCmdOption-&gt;m_funcTrend = OFF;</pre></td></tr>
    <tr><td class="line_number">195</td><td id="195"><pre>    the_pCmdOption-&gt;m_symThresh = <span class="i">70</span>;</pre></td><td class="line_number">191</td><td id="191"><pre>    the_pCmdOption-&gt;m_symThresh = <span class="i">70</span>;</pre></td></tr>
    <tr><td class="line_number">196</td><td id="196"><pre>    the_pCmdOption-&gt;m_minThresh = <span class="i">2</span>;</pre></td><td class="line_number">192</td><td id="192"><pre>    the_pCmdOption-&gt;m_minThresh = <span class="i">2</span>;</pre></td></tr>
    <tr><td class="line_number">197</td><td id="197"><pre></pre></td><td class="line_number">193</td><td id="193"><pre></pre></td></tr>
    <tr><td class="line_number">198</td><td id="198"><pre>    <span class="c">/* ?R?}???h???C??????????? */</span></pre></td><td class="line_number">194</td><td id="194"><pre>    <span class="c">/* ?R?}???h???C??????????? */</span></pre></td></tr>
    <tr><td class="line_number">199</td><td id="199"><pre>    the_iRet = AnalyzeCmdLine(argc,argv,the_pCmdOption,the_pMeasureItem);</pre></td><td class="line_number">195</td><td id="195"><pre>    the_iRet = AnalyzeCmdLine(argc,argv,the_pCmdOption,the_pMeasureItem);</pre></td></tr>
    <tr><td class="line_number">200</td><td id="200"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">196</td><td id="196"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">201</td><td id="201" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">197</td><td id="197" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">202</td><td id="202"><pre>    }</pre></td><td class="line_number">198</td><td id="198"><pre>    }</pre></td></tr>
    <tr><td class="line_number">203</td><td id="203"><pre>    <span class="r">if</span>(g_bOutTime) {</pre></td><td class="line_number">199</td><td id="199"><pre>    <span class="r">if</span>(g_bOutTime) {</pre></td></tr>
    <tr><td class="line_number">204</td><td id="204"><pre>        ftime(&amp;the_st);</pre></td><td class="line_number">200</td><td id="200"><pre>        ftime(&amp;the_st);</pre></td></tr>
    <tr><td class="line_number">205</td><td id="205"><pre>    }</pre></td><td class="line_number">201</td><td id="201"><pre>    }</pre></td></tr>
    <tr><td class="line_number">206</td><td id="206"><pre></pre></td><td class="line_number">202</td><td id="202"><pre></pre></td></tr>
    <tr><td class="line_number">207</td><td id="207"><pre>    <span class="c">/* Option??????????? */</span></pre></td><td class="line_number">203</td><td id="203"><pre>    <span class="c">/* Option??????????? */</span></pre></td></tr>
    <tr><td class="line_number">208</td><td id="208"><pre>    the_iRet = SetOption(the_pAnzInfo,the_pCmdOption);</pre></td><td class="line_number">204</td><td id="204"><pre>    the_iRet = SetOption(the_pAnzInfo,the_pCmdOption);</pre></td></tr>
    <tr><td class="line_number">209</td><td id="209"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">205</td><td id="205"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">210</td><td id="210" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">206</td><td id="206" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">211</td><td id="211"><pre>    }</pre></td><td class="line_number">207</td><td id="207"><pre>    }</pre></td></tr>
    <tr><td class="line_number">212</td><td id="212"><pre>    <span class="c">/* ?v?????????????? */</span></pre></td><td class="line_number">208</td><td id="208"><pre>    <span class="c">/* ?v?????????????? */</span></pre></td></tr>
    <tr><td class="line_number">213</td><td id="213"><pre>    the_iRet = GetMeasureType(the_pOption,&amp;the_iMeasureType);</pre></td><td class="line_number">209</td><td id="209"><pre>    the_iRet = GetMeasureType(the_pOption,&amp;the_iMeasureType);</pre></td></tr>
    <tr><td class="line_number">214</td><td id="214"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">210</td><td id="210"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">215</td><td id="215" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">211</td><td id="211" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">216</td><td id="216"><pre>    }</pre></td><td class="line_number">212</td><td id="212"><pre>    }</pre></td></tr>
    <tr><td class="line_number">217</td><td id="217"><pre>    <span class="c">/* ?R?}???h???C??????????Option??????????????? */</span></pre></td><td class="line_number">213</td><td id="213"><pre>    <span class="c">/* ?R?}???h???C??????????Option??????????????? */</span></pre></td></tr>
    <tr><td class="line_number">218</td><td id="218"><pre>    <span class="r">if</span>(the_pCmdOption != <span class="pc">NULL</span>){</pre></td><td class="line_number">214</td><td id="214"><pre>    <span class="r">if</span>(the_pCmdOption != <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">219</td><td id="219"><pre>        free(the_pCmdOption);</pre></td><td class="line_number">215</td><td id="215"><pre>        free(the_pCmdOption);</pre></td></tr>
    <tr><td class="line_number">220</td><td id="220"><pre>        the_pCmdOption = <span class="pc">NULL</span>;</pre></td><td class="line_number">216</td><td id="216"><pre>        the_pCmdOption = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">221</td><td id="221"><pre>    }</pre></td><td class="line_number">217</td><td id="217"><pre>    }</pre></td></tr>
    <tr><td class="line_number">222</td><td id="222"><pre>    <span class="c">/* ?v???????`?F?b?N???? */</span></pre></td><td class="line_number">218</td><td id="218"><pre>    <span class="c">/* ?v???????`?F?b?N???? */</span></pre></td></tr>
    <tr><td class="line_number">223</td><td id="223"><pre>    the_iRet = CheckMeasureItem(the_pMeasureItem,the_iMeasureType);</pre></td><td class="line_number">219</td><td id="219"><pre>    the_iRet = CheckMeasureItem(the_pMeasureItem,the_iMeasureType);</pre></td></tr>
    <tr><td class="line_number">224</td><td id="224"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">220</td><td id="220"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">225</td><td id="225" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">221</td><td id="221" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">226</td><td id="226"><pre>    }</pre></td><td class="line_number">222</td><td id="222"><pre>    }</pre></td></tr>
    <tr><td class="line_number">227</td><td id="227" class="added_line"><pre>    <span class="c">/* ?G???[File???J?? */</span></pre></td><td class="line_number">223</td><td id="223" class="deleted_line"><pre>   </pre></td></tr>
    <tr><td class="line_number">228</td><td id="228" class="added_line"><pre>    the_iRet = OpenErrorFile(the_pOption);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">229</td><td id="229" class="added_line"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">230</td><td id="230" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">231</td><td id="231" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">232</td><td id="232"><pre>    <span class="c">/* ????????t?@?C????? */</span></pre></td><td class="line_number">224</td><td id="224"><pre>    <span class="c">/* ????????t?@?C????? */</span></pre></td></tr>
    <tr><td class="line_number">233</td><td id="233" class="added_line"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_TREND_MEASURE) {</pre></td><td class="line_number">225</td><td id="225" class="deleted_line"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_TREND_MEASURE)    {</pre></td></tr>
    <tr><td class="line_number">234</td><td id="234"><pre>        <span class="pt">int</span> the_iType = -<span class="i">1</span>;</pre></td><td class="line_number">226</td><td id="226"><pre>        <span class="pt">int</span> the_iType = -<span class="i">1</span>;</pre></td></tr>
    <tr><td class="line_number">235</td><td id="235"><pre>        <span class="pt">int</span> the_pPos = -<span class="i">1</span>;</pre></td><td class="line_number">227</td><td id="227"><pre>        <span class="pt">int</span> the_pPos = -<span class="i">1</span>;</pre></td></tr>
    <tr><td class="line_number">236</td><td id="236"><pre>        isDirOrFile(*the_pMeasureItem,&amp;the_iType);</pre></td><td class="line_number">228</td><td id="228"><pre>        isDirOrFile(*the_pMeasureItem,&amp;the_iType);</pre></td></tr>
    <tr><td class="line_number">237</td><td id="237"><pre>        <span class="r">if</span>(the_iType == ANZ_FILE) {</pre></td><td class="line_number">229</td><td id="229"><pre>        <span class="r">if</span>(the_iType == ANZ_FILE) {</pre></td></tr>
    <tr><td class="line_number">238</td><td id="238"><pre>            g_bTrendFile = <span class="pc">true</span>;</pre></td><td class="line_number">230</td><td id="230"><pre>            g_bTrendFile = <span class="pc">true</span>;</pre></td></tr>
    <tr><td class="line_number">239</td><td id="239"><pre>            <span class="c">/* the_pMeasureItme??Path?????????? */</span></pre></td><td class="line_number">231</td><td id="231"><pre>            <span class="c">/* the_pMeasureItme??Path?????????? */</span></pre></td></tr>
    <tr><td class="line_number">240</td><td id="240"><pre>            GetPathPos(*the_pMeasureItem,&amp;the_pPos);</pre></td><td class="line_number">232</td><td id="232"><pre>            GetPathPos(*the_pMeasureItem,&amp;the_pPos);</pre></td></tr>
    <tr><td class="line_number">241</td><td id="241"><pre>            g_szNVPath[the_pPos] = <span class="ch">'\0'</span>;</pre></td><td class="line_number">233</td><td id="233"><pre>            g_szNVPath[the_pPos] = <span class="ch">'\0'</span>;</pre></td></tr>
    <tr><td class="line_number">242</td><td id="242"><pre>            <span class="r">if</span>(the_pPos &gt; <span class="i">0</span>) {</pre></td><td class="line_number">234</td><td id="234"><pre>            <span class="r">if</span>(the_pPos &gt; <span class="i">0</span>) {</pre></td></tr>
    <tr><td class="line_number">243</td><td id="243"><pre>                *the_pMeasureItem = *the_pMeasureItem + the_pPos + <span class="i">1</span>;</pre></td><td class="line_number">235</td><td id="235"><pre>                *the_pMeasureItem = *the_pMeasureItem + the_pPos + <span class="i">1</span>;</pre></td></tr>
    <tr><td class="line_number">244</td><td id="244"><pre>            }</pre></td><td class="line_number">236</td><td id="236"><pre>            }</pre></td></tr>
    <tr><td class="line_number">245</td><td id="245"><pre></pre></td><td class="line_number">237</td><td id="237"><pre></pre></td></tr>
    <tr><td class="line_number">246</td><td id="246"><pre>            GetPathPos(*(the_pMeasureItem + <span class="i">1</span>),&amp;the_pPos);</pre></td><td class="line_number">238</td><td id="238"><pre>            GetPathPos(*(the_pMeasureItem + <span class="i">1</span>),&amp;the_pPos);</pre></td></tr>
    <tr><td class="line_number">247</td><td id="247"><pre>            g_szOVPath[the_pPos] = <span class="ch">'\0'</span>;</pre></td><td class="line_number">239</td><td id="239"><pre>            g_szOVPath[the_pPos] = <span class="ch">'\0'</span>;</pre></td></tr>
    <tr><td class="line_number">248</td><td id="248"><pre>            <span class="r">if</span>(the_pPos &gt; <span class="i">0</span>) {</pre></td><td class="line_number">240</td><td id="240"><pre>            <span class="r">if</span>(the_pPos &gt; <span class="i">0</span>) {</pre></td></tr>
    <tr><td class="line_number">249</td><td id="249"><pre>                *(the_pMeasureItem + <span class="i">1</span>) =*(the_pMeasureItem + <span class="i">1</span>) + the_pPos + <span class="i">1</span>;</pre></td><td class="line_number">241</td><td id="241"><pre>                *(the_pMeasureItem + <span class="i">1</span>) =*(the_pMeasureItem + <span class="i">1</span>) + the_pPos + <span class="i">1</span>;</pre></td></tr>
    <tr><td class="line_number">250</td><td id="250"><pre>            }</pre></td><td class="line_number">242</td><td id="242"><pre>            }</pre></td></tr>
    <tr><td class="line_number">251</td><td id="251"><pre>            <span class="c">/* g_szNVPath?Ag_szOVPath??????p?X???X???? */</span></pre></td><td class="line_number">243</td><td id="243"><pre>            <span class="c">/* g_szNVPath?Ag_szOVPath??????p?X???X???? */</span></pre></td></tr>
    <tr><td class="line_number">252</td><td id="252"><pre>            the_iRet = ResetTrendPath(g_szNVPath);</pre></td><td class="line_number">244</td><td id="244"><pre>            the_iRet = ResetTrendPath(g_szNVPath);</pre></td></tr>
    <tr><td class="line_number">253</td><td id="253"><pre>            the_iRet = ResetTrendPath(g_szOVPath);</pre></td><td class="line_number">245</td><td id="245"><pre>            the_iRet = ResetTrendPath(g_szOVPath);</pre></td></tr>
    <tr><td class="line_number">254</td><td id="254"><pre>            <span class="r">if</span>(the_iRet != ANZ_SUCCESS) {</pre></td><td class="line_number">246</td><td id="246"><pre>            <span class="r">if</span>(the_iRet != ANZ_SUCCESS) {</pre></td></tr>
    <tr><td class="line_number">255</td><td id="255" class="added_line"><pre>                <span class="r">goto</span> EXIT;</pre></td><td class="line_number">247</td><td id="247" class="deleted_line"><pre>                <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">256</td><td id="256"><pre>            }</pre></td><td class="line_number">248</td><td id="248"><pre>            }</pre></td></tr>
    <tr><td class="line_number">257</td><td id="257"><pre>        }</pre></td><td class="line_number">249</td><td id="249"><pre>        }</pre></td></tr>
    <tr><td class="line_number">258</td><td id="258"><pre>    }</pre></td><td class="line_number">250</td><td id="250"><pre>    }</pre></td></tr>
    <tr><td class="line_number">259</td><td id="259"><pre>    <span class="c">/* ?v?????File??List???????? */</span></pre></td><td class="line_number">251</td><td id="251"><pre>    <span class="c">/* ?v?????File??List???????? */</span></pre></td></tr>
    <tr><td class="line_number">260</td><td id="260"><pre>    the_iRet = MakeMeasureFilesList(the_pAnzInfo,(<span class="di">const</span> <span class="pt">char</span>**)the_pMeasureItem);</pre></td><td class="line_number">252</td><td id="252"><pre>    the_iRet = MakeMeasureFilesList(the_pAnzInfo,(<span class="di">const</span> <span class="pt">char</span>**)the_pMeasureItem);</pre></td></tr>
    <tr><td class="line_number">261</td><td id="261"><pre>    <span class="r">if</span>(the_iRet == ANZ_NO_MEASURE_FILES){</pre></td><td class="line_number">253</td><td id="253"><pre>    <span class="r">if</span>(the_iRet == ANZ_NO_MEASURE_FILES){</pre></td></tr>
    <tr><td class="line_number">262</td><td id="262"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_NO_FILES);</pre></td><td class="line_number">254</td><td id="254"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_NO_FILES);</pre></td></tr>
    <tr><td class="line_number">263</td><td id="263"><pre>    }</pre></td><td class="line_number">255</td><td id="255"><pre>    }</pre></td></tr>
    <tr><td class="line_number">264</td><td id="264"><pre>    <span class="r">if</span>(the_iRet == ANZ_ERR_MEMORY_FAILED){</pre></td><td class="line_number">256</td><td id="256"><pre>    <span class="r">if</span>(the_iRet == ANZ_ERR_MEMORY_FAILED){</pre></td></tr>
    <tr><td class="line_number">265</td><td id="265"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MOMORY_FAILED);</pre></td><td class="line_number">257</td><td id="257"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MOMORY_FAILED);</pre></td></tr>
    <tr><td class="line_number">266</td><td id="266"><pre>    }</pre></td><td class="line_number">258</td><td id="258"><pre>    }</pre></td></tr>
    <tr><td class="line_number">267</td><td id="267"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">259</td><td id="259"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">268</td><td id="268" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">260</td><td id="260" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">269</td><td id="269"><pre>    }</pre></td><td class="line_number">261</td><td id="261"><pre>    }</pre></td></tr>
    <tr><td class="line_number">270</td><td id="270"><pre>    <span class="c">/* ?o?R???????????? */</span></pre></td><td class="line_number">262</td><td id="262"><pre>    <span class="c">/* ?o?R???????????? */</span></pre></td></tr>
    <tr><td class="line_number">271</td><td id="271"><pre>    <span class="c">/* FileLOC?v??Option???w?????? */</span></pre></td><td class="line_number">263</td><td id="263"><pre>    <span class="c">/* FileLOC?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">272</td><td id="272"><pre>    <span class="r">if</span>(the_pOption-&gt;m_fileLOC == ON){</pre></td><td class="line_number">264</td><td id="264"><pre>    <span class="r">if</span>(the_pOption-&gt;m_fileLOC == ON){</pre></td></tr>
    <tr><td class="line_number">273</td><td id="273"><pre>        strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileLOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">265</td><td id="265"><pre>        strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileLOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">274</td><td id="274"><pre>    }</pre></td><td class="line_number">266</td><td id="266"><pre>    }</pre></td></tr>
    <tr><td class="line_number">275</td><td id="275"><pre>    <span class="c">/* File???x?v??Option???w?????? */</span></pre></td><td class="line_number">267</td><td id="267"><pre>    <span class="c">/* File???x?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">276</td><td id="276"><pre>    <span class="r">if</span>(the_pOption-&gt;m_redundancy == ON){</pre></td><td class="line_number">268</td><td id="268"><pre>    <span class="r">if</span>(the_pOption-&gt;m_redundancy == ON){</pre></td></tr>
    <tr><td class="line_number">277</td><td id="277"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">269</td><td id="269"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9863"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9864"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9865"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9866"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9867"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10834"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10835"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10836"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10837"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10838"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td></tr>
    <tr><td class="line_number">278</td><td id="278"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">270</td><td id="270"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">279</td><td id="279"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">271</td><td id="271"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">280</td><td id="280"><pre>        }</pre></td><td class="line_number">272</td><td id="272"><pre>        }</pre></td></tr>
    <tr><td class="line_number">281</td><td id="281"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">273</td><td id="273"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9868"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(281),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10839"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(273),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">282</td><td id="282"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">274</td><td id="274"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">283</td><td id="283"><pre>        }</pre></td><td class="line_number">275</td><td id="275"><pre>        }</pre></td></tr>
    <tr><td class="line_number">284</td><td id="284"><pre>    }</pre></td><td class="line_number">276</td><td id="276"><pre>    }</pre></td></tr>
    <tr><td class="line_number">285</td><td id="285"><pre>    <span class="c">/* ??????v??Option???w?????? */</span></pre></td><td class="line_number">277</td><td id="277"><pre>    <span class="c">/* ??????v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">286</td><td id="286"><pre>    <span class="r">if</span>(the_pOption-&gt;m_funcNum){</pre></td><td class="line_number">278</td><td id="278"><pre>    <span class="r">if</span>(the_pOption-&gt;m_funcNum){</pre></td></tr>
    <tr><td class="line_number">287</td><td id="287"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">279</td><td id="279"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9869"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9870"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9871"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9872"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9873"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10840"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10841"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10842"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10843"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10844"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td></tr>
    <tr><td class="line_number">288</td><td id="288"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">280</td><td id="280"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">289</td><td id="289"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">281</td><td id="281"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">290</td><td id="290"><pre>        }</pre></td><td class="line_number">282</td><td id="282"><pre>        }</pre></td></tr>
    <tr><td class="line_number">291</td><td id="291"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">283</td><td id="283"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9874"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(291),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10845"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(283),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">292</td><td id="292"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">284</td><td id="284"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">293</td><td id="293"><pre>        }</pre></td><td class="line_number">285</td><td id="285"><pre>        }</pre></td></tr>
    <tr><td class="line_number">294</td><td id="294"><pre>    }</pre></td><td class="line_number">286</td><td id="286"><pre>    }</pre></td></tr>
    <tr><td class="line_number">295</td><td id="295"><pre>    <span class="c">/* ELOC?v??Option???w?????? */</span></pre></td><td class="line_number">287</td><td id="287"><pre>    <span class="c">/* ELOC?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">296</td><td id="296"><pre>    <span class="r">if</span>(the_pOption-&gt;m_eloc){</pre></td><td class="line_number">288</td><td id="288"><pre>    <span class="r">if</span>(the_pOption-&gt;m_eloc){</pre></td></tr>
    <tr><td class="line_number">297</td><td id="297"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">289</td><td id="289"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9875"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9876"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9877"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9878"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9879"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10846"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10847"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10848"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10849"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10850"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td></tr>
    <tr><td class="line_number">298</td><td id="298"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">290</td><td id="290"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">299</td><td id="299"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">???ELOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">291</td><td id="291"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">???ELOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">300</td><td id="300"><pre>        }</pre></td><td class="line_number">292</td><td id="292"><pre>        }</pre></td></tr>
    <tr><td class="line_number">301</td><td id="301"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">293</td><td id="293"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9880"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(301),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10851"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(293),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">302</td><td id="302"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">???ELOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">294</td><td id="294"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">???ELOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">303</td><td id="303"><pre>        }</pre></td><td class="line_number">295</td><td id="295"><pre>        }</pre></td></tr>
    <tr><td class="line_number">304</td><td id="304"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">296</td><td id="296"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9881"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9882"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9883"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9884"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9885"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10852"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10853"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10854"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10855"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10856"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td></tr>
    <tr><td class="line_number">305</td><td id="305"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">297</td><td id="297"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">306</td><td id="306"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileELOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">298</td><td id="298"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileELOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">307</td><td id="307"><pre>        }</pre></td><td class="line_number">299</td><td id="299"><pre>        }</pre></td></tr>
    <tr><td class="line_number">308</td><td id="308"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">300</td><td id="300"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9886"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(308),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10857"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(300),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">309</td><td id="309"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileELOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">301</td><td id="301"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileELOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">310</td><td id="310"><pre>        }</pre></td><td class="line_number">302</td><td id="302"><pre>        }</pre></td></tr>
    <tr><td class="line_number">311</td><td id="311"><pre>    }</pre></td><td class="line_number">303</td><td id="303"><pre>    }</pre></td></tr>
    <tr><td class="line_number">312</td><td id="312"><pre></pre></td><td class="line_number">304</td><td id="304"><pre></pre></td></tr>
    <tr><td class="line_number">313</td><td id="313"><pre>    <span class="c">/* ???G?x?v??Option???w?????? */</span></pre></td><td class="line_number">305</td><td id="305"><pre>    <span class="c">/* ???G?x?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">314</td><td id="314"><pre>    <span class="r">if</span>(the_pOption-&gt;m_redundancy){</pre></td><td class="line_number">306</td><td id="306"><pre>    <span class="r">if</span>(the_pOption-&gt;m_redundancy){</pre></td></tr>
    <tr><td class="line_number">315</td><td id="315"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">307</td><td id="307"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9887"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9888"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9889"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9890"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9891"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10858"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10859"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10860"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10861"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10862"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td></tr>
    <tr><td class="line_number">316</td><td id="316"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">308</td><td id="308"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">317</td><td id="317"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">McCabe????G?x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">309</td><td id="309"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">McCabe????G?x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">318</td><td id="318"><pre>        }</pre></td><td class="line_number">310</td><td id="310"><pre>        }</pre></td></tr>
    <tr><td class="line_number">319</td><td id="319"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">311</td><td id="311"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9892"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(319),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10863"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(311),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">320</td><td id="320"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">McCabe????G?x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">312</td><td id="312"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">McCabe????G?x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">321</td><td id="321"><pre>        }</pre></td><td class="line_number">313</td><td id="313"><pre>        }</pre></td></tr>
    <tr><td class="line_number">322</td><td id="322"><pre></pre></td><td class="line_number">314</td><td id="314"><pre></pre></td></tr>
    <tr><td class="line_number">323</td><td id="323"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">315</td><td id="315"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9893"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9894"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9895"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9896"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9897"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10864"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10865"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10866"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10867"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10868"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td></tr>
    <tr><td class="line_number">324</td><td id="324"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">316</td><td id="316"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">325</td><td id="325"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???G?x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">317</td><td id="317"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???G?x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">326</td><td id="326"><pre>        }</pre></td><td class="line_number">318</td><td id="318"><pre>        }</pre></td></tr>
    <tr><td class="line_number">327</td><td id="327"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">319</td><td id="319"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9898"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(327),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10869"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(319),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">328</td><td id="328"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???G?x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">320</td><td id="320"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???G?x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">329</td><td id="329"><pre>        }</pre></td><td class="line_number">321</td><td id="321"><pre>        }</pre></td></tr>
    <tr><td class="line_number">330</td><td id="330"><pre>    }</pre></td><td class="line_number">322</td><td id="322"><pre>    }</pre></td></tr>
    <tr><td class="line_number">331</td><td id="331"><pre></pre></td><td class="line_number">323</td><td id="323"><pre></pre></td></tr>
    <tr><td class="line_number">332</td><td id="332"><pre>    <span class="c">/* ?????(1)?v??Option???w?????? */</span></pre></td><td class="line_number">324</td><td id="324"><pre>    <span class="c">/* ?????(1)?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">333</td><td id="333"><pre>    <span class="r">if</span>(the_pOption-&gt;m_trend){</pre></td><td class="line_number">325</td><td id="325"><pre>    <span class="r">if</span>(the_pOption-&gt;m_trend){</pre></td></tr>
    <tr><td class="line_number">334</td><td id="334"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">326</td><td id="326"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9899"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9900"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9901"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9902"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9903"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10870"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10871"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10872"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10873"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10874"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td></tr>
    <tr><td class="line_number">335</td><td id="335"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">327</td><td id="327"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">336</td><td id="336"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(1)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">328</td><td id="328"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(1)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">337</td><td id="337"><pre>        }</pre></td><td class="line_number">329</td><td id="329"><pre>        }</pre></td></tr>
    <tr><td class="line_number">338</td><td id="338"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">330</td><td id="330"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9904"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(338),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10875"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(330),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">339</td><td id="339"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(1)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">331</td><td id="331"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(1)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">340</td><td id="340"><pre>        }</pre></td><td class="line_number">332</td><td id="332"><pre>        }</pre></td></tr>
    <tr><td class="line_number">341</td><td id="341"><pre>        strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(1)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">333</td><td id="333"><pre>        strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(1)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">342</td><td id="342"><pre>    }</pre></td><td class="line_number">334</td><td id="334"><pre>    }</pre></td></tr>
    <tr><td class="line_number">343</td><td id="343"><pre></pre></td><td class="line_number">335</td><td id="335"><pre></pre></td></tr>
    <tr><td class="line_number">344</td><td id="344"><pre>    <span class="c">/* ?????(2)?v??Option???w?????? */</span></pre></td><td class="line_number">336</td><td id="336"><pre>    <span class="c">/* ?????(2)?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">345</td><td id="345"><pre>    <span class="r">if</span>(the_pOption-&gt;m_funcTrend){</pre></td><td class="line_number">337</td><td id="337"><pre>    <span class="r">if</span>(the_pOption-&gt;m_funcTrend){</pre></td></tr>
    <tr><td class="line_number">346</td><td id="346"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">338</td><td id="338"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9905"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9906"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9907"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9908"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9909"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10876"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10877"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10878"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10879"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10880"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td></tr>
    <tr><td class="line_number">347</td><td id="347"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">339</td><td id="339"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">348</td><td id="348"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">????????</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">340</td><td id="340"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">????????</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">349</td><td id="349"><pre>        }</pre></td><td class="line_number">341</td><td id="341"><pre>        }</pre></td></tr>
    <tr><td class="line_number">350</td><td id="350"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">342</td><td id="342"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9910"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(350),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10881"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(342),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">351</td><td id="351"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">????????</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">343</td><td id="343"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">????????</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">352</td><td id="352"><pre>        }</pre></td><td class="line_number">344</td><td id="344"><pre>        }</pre></td></tr>
    <tr><td class="line_number">353</td><td id="353"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">345</td><td id="345"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9911"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9912"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9913"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9914"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9915"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10882"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10883"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10884"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10885"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10886"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td></tr>
    <tr><td class="line_number">354</td><td id="354"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">346</td><td id="346"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">355</td><td id="355"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????X??</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">347</td><td id="347"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????X??</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">356</td><td id="356"><pre>        }</pre></td><td class="line_number">348</td><td id="348"><pre>        }</pre></td></tr>
    <tr><td class="line_number">357</td><td id="357"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">349</td><td id="349"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9916"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(357),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10887"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(349),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">358</td><td id="358"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????X??</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">350</td><td id="350"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????X??</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">359</td><td id="359"><pre>        }</pre></td><td class="line_number">351</td><td id="351"><pre>        }</pre></td></tr>
    <tr><td class="line_number">360</td><td id="360"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">352</td><td id="352"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9917"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9918"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9919"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9920"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9921"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10888"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10889"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10890"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10891"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10892"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td></tr>
    <tr><td class="line_number">361</td><td id="361"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">353</td><td id="353"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">362</td><td id="362"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(2)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">354</td><td id="354"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(2)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">363</td><td id="363"><pre>        }</pre></td><td class="line_number">355</td><td id="355"><pre>        }</pre></td></tr>
    <tr><td class="line_number">364</td><td id="364"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">356</td><td id="356"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9922"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(364),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10893"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(356),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">365</td><td id="365"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(2)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">357</td><td id="357"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(2)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">366</td><td id="366"><pre>        }</pre></td><td class="line_number">358</td><td id="358"><pre>        }</pre></td></tr>
    <tr><td class="line_number">367</td><td id="367"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">359</td><td id="359"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9923"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9924"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9925"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9926"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9927"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10894"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10895"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10896"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10897"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10898"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td></tr>
    <tr><td class="line_number">368</td><td id="368"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">360</td><td id="360"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">369</td><td id="369"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(2)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">361</td><td id="361"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(2)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">370</td><td id="370"><pre>        }</pre></td><td class="line_number">362</td><td id="362"><pre>        }</pre></td></tr>
    <tr><td class="line_number">371</td><td id="371"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">363</td><td id="363"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9928"><a href="/result/view_message/1/2/7?message_id=3201&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(371),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10899"><a href="/result/view_message/1/2/11?message_id=3201&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(363),(13) :Msg(3:3201) This statement is unreachable.</b></a></div></td></tr>
    <tr><td class="line_number">372</td><td id="372"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(2)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">364</td><td id="364"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(2)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">373</td><td id="373"><pre>        }</pre></td><td class="line_number">365</td><td id="365"><pre>        }</pre></td></tr>
    <tr><td class="line_number">374</td><td id="374"><pre></pre></td><td class="line_number">366</td><td id="366"><pre></pre></td></tr>
    <tr><td class="line_number">375</td><td id="375"><pre>    }</pre></td><td class="line_number">367</td><td id="367"><pre>    }</pre></td></tr>
    <tr><td class="line_number">376</td><td id="376"><pre>    <span class="c">/* ?v???J?n,?o?R???????o????? */</span></pre></td><td class="line_number">368</td><td id="368"><pre>    <span class="c">/* ?v???J?n,?o?R???????o????? */</span></pre></td></tr>
    <tr><td class="line_number">377</td><td id="377"><pre>    <span class="r">if</span>(the_pOption-&gt;m_verbos == ON ){</pre></td><td class="line_number">369</td><td id="369"><pre>    <span class="r">if</span>(the_pOption-&gt;m_verbos == ON ){</pre></td></tr>
    <tr><td class="line_number">378</td><td id="378"><pre>        <span class="c">/* ?o?R???????o????? */</span></pre></td><td class="line_number">370</td><td id="370"><pre>        <span class="c">/* ?o?R???????o????? */</span></pre></td></tr>
    <tr><td class="line_number">379</td><td id="379"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_START);</pre></td><td class="line_number">371</td><td id="371"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_START);</pre></td></tr>
    <tr><td class="line_number">380</td><td id="380"><pre>    }</pre></td><td class="line_number">372</td><td id="372"><pre>    }</pre></td></tr>
    <tr><td class="line_number">381</td><td id="381"><pre></pre></td><td class="line_number">373</td><td id="373"><pre></pre></td></tr>
    <tr><td class="line_number">382</td><td id="382"><pre>    <span class="c">/* ?v???O?A?K?v??v??????File???J?? */</span></pre></td><td class="line_number">374</td><td id="374"><pre>    <span class="c">/* ?v???O?A?K?v??v??????File???J?? */</span></pre></td></tr>
    <tr><td class="line_number">383</td><td id="383"><pre>    the_iRet = OpenResultFile(the_pOption);</pre></td><td class="line_number">375</td><td id="375"><pre>    the_iRet = OpenResultFile(the_pOption);</pre></td></tr>
    <tr><td class="line_number">384</td><td id="384"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">376</td><td id="376"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">385</td><td id="385" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">377</td><td id="377" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">386</td><td id="386"><pre>    }</pre></td><td class="line_number">378</td><td id="378"><pre>    }</pre></td></tr>
    <tr><td class="line_number">387</td><td id="387"><pre></pre></td><td class="line_number">379</td><td id="379"><pre></pre></td></tr>
    <tr><td class="line_number">388</td><td id="388"><pre>    <span class="c">/* ?v???O?A?K?v??v?????????????O???[?o?????????????m?? */</span></pre></td><td class="line_number">380</td><td id="380"><pre>    <span class="c">/* ?v???O?A?K?v??v?????????????O???[?o?????????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">389</td><td id="389"><pre>    the_iRet = AllocResultMemory(the_pOption);</pre></td><td class="line_number">381</td><td id="381"><pre>    the_iRet = AllocResultMemory(the_pOption);</pre></td></tr>
    <tr><td class="line_number">390</td><td id="390"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">382</td><td id="382"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">391</td><td id="391"><pre>        FreeResultMemory(the_pOption);</pre></td><td class="line_number">383</td><td id="383"><pre>        FreeResultMemory(the_pOption);</pre></td></tr>
    <tr><td class="line_number">392</td><td id="392" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">384</td><td id="384" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">393</td><td id="393"><pre>    }</pre></td><td class="line_number">385</td><td id="385"><pre>    }</pre></td></tr>
    <tr><td class="line_number">394</td><td id="394"><pre></pre></td><td class="line_number">386</td><td id="386"><pre></pre></td></tr>
    <tr><td class="line_number">395</td><td id="395"><pre>    <span class="c">/* ?v?????? */</span></pre></td><td class="line_number">387</td><td id="387"><pre>    <span class="c">/* ?v?????? */</span></pre></td></tr>
    <tr><td class="line_number">396</td><td id="396"><pre>    <span class="c">/* ????v?? */</span></pre></td><td class="line_number">388</td><td id="388"><pre>    <span class="c">/* ????v?? */</span></pre></td></tr>
    <tr><td class="line_number">397</td><td id="397"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_COMMON_MEASURE){</pre></td><td class="line_number">389</td><td id="389"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_COMMON_MEASURE){</pre></td></tr>
    <tr><td class="line_number">398</td><td id="398"><pre>        <span class="c">/* ????v??File??????}?N?????????? */</span></pre></td><td class="line_number">390</td><td id="390"><pre>        <span class="c">/* ????v??File??????}?N?????????? */</span></pre></td></tr>
    <tr><td class="line_number">399</td><td id="399"><pre>        the_iRet = GetProcMacro(the_pAnzInfo,ANZ_COMMON_MEASURE);</pre></td><td class="line_number">391</td><td id="391"><pre>        the_iRet = GetProcMacro(the_pAnzInfo,ANZ_COMMON_MEASURE);</pre></td></tr>
    <tr><td class="line_number">400</td><td id="400"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">392</td><td id="392"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">401</td><td id="401" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">393</td><td id="393" class="deleted_line"><pre>            <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">402</td><td id="402"><pre>        }</pre></td><td class="line_number">394</td><td id="394"><pre>        }</pre></td></tr>
    <tr><td class="line_number">403</td><td id="403"><pre>        the_iRet = CommomMeasure(the_pAnzInfo);</pre></td><td class="line_number">395</td><td id="395"><pre>        the_iRet = CommomMeasure(the_pAnzInfo);</pre></td></tr>
    <tr><td class="line_number">404</td><td id="404"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">396</td><td id="396"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">405</td><td id="405"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_ERROR);</pre></td><td class="line_number">397</td><td id="397"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_ERROR);</pre></td></tr>
    <tr><td class="line_number">406</td><td id="406" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">398</td><td id="398" class="deleted_line"><pre>            <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">407</td><td id="407"><pre>        }</pre></td><td class="line_number">399</td><td id="399"><pre>        }</pre></td></tr>
    <tr><td class="line_number">408</td><td id="408"><pre>    }</pre></td><td class="line_number">400</td><td id="400"><pre>    }</pre></td></tr>
    <tr><td class="line_number">409</td><td id="409"><pre>    <span class="c">/* ?????v?? */</span></pre></td><td class="line_number">401</td><td id="401"><pre>    <span class="c">/* ?????v?? */</span></pre></td></tr>
    <tr><td class="line_number">410</td><td id="410"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_TREND_MEASURE){</pre></td><td class="line_number">402</td><td id="402"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_TREND_MEASURE){</pre></td></tr>
    <tr><td class="line_number">411</td><td id="411"><pre>        <span class="c">/* ?????v??File??????}?N?????????? */</span></pre></td><td class="line_number">403</td><td id="403"><pre>        <span class="c">/* ?????v??File??????}?N?????????? */</span></pre></td></tr>
    <tr><td class="line_number">412</td><td id="412"><pre>        the_iRet = GetProcMacro(the_pAnzInfo,ANZ_TREND_MEASURE);</pre></td><td class="line_number">404</td><td id="404"><pre>        the_iRet = GetProcMacro(the_pAnzInfo,ANZ_TREND_MEASURE);</pre></td></tr>
    <tr><td class="line_number">413</td><td id="413"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">405</td><td id="405"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">414</td><td id="414" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">406</td><td id="406" class="deleted_line"><pre>            <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">415</td><td id="415"><pre>        }</pre></td><td class="line_number">407</td><td id="407"><pre>        }</pre></td></tr>
    <tr><td class="line_number">416</td><td id="416"><pre>        the_iRet = TrendMeasure(the_pAnzInfo);</pre></td><td class="line_number">408</td><td id="408"><pre>        the_iRet = TrendMeasure(the_pAnzInfo);</pre></td></tr>
    <tr><td class="line_number">417</td><td id="417"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">409</td><td id="409"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">418</td><td id="418"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_ERROR);</pre></td><td class="line_number">410</td><td id="410"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_ERROR);</pre></td></tr>
    <tr><td class="line_number">419</td><td id="419" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">411</td><td id="411" class="deleted_line"><pre>            <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">420</td><td id="420"><pre>        }</pre></td><td class="line_number">412</td><td id="412"><pre>        }</pre></td></tr>
    <tr><td class="line_number">421</td><td id="421"><pre>    }</pre></td><td class="line_number">413</td><td id="413"><pre>    }</pre></td></tr>
    <tr><td class="line_number">422</td><td id="422"><pre></pre></td><td class="line_number">414</td><td id="414"><pre></pre></td></tr>
    <tr><td class="line_number">423</td><td id="423"><pre>    <span class="c">/* ?o?R???????o????? */</span></pre></td><td class="line_number">415</td><td id="415"><pre>    <span class="c">/* ?o?R???????o????? */</span></pre></td></tr>
    <tr><td class="line_number">424</td><td id="424"><pre>    <span class="r">if</span>(the_pOption-&gt;m_verbos == ON){</pre></td><td class="line_number">416</td><td id="416"><pre>    <span class="r">if</span>(the_pOption-&gt;m_verbos == ON){</pre></td></tr>
    <tr><td class="line_number">425</td><td id="425"><pre>        <span class="r">if</span>(the_pAnzInfo-&gt;m_err == <span class="pc">NULL</span>){</pre></td><td class="line_number">417</td><td id="417"><pre>        <span class="r">if</span>(the_pAnzInfo-&gt;m_err == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">426</td><td id="426"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_NORMAL);</pre></td><td class="line_number">418</td><td id="418"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_NORMAL);</pre></td></tr>
    <tr><td class="line_number">427</td><td id="427"><pre>        }</pre></td><td class="line_number">419</td><td id="419"><pre>        }</pre></td></tr>
    <tr><td class="line_number">428</td><td id="428"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">420</td><td id="420"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number">429</td><td id="429"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MEASURE_FILE_ERROR,the_szCurMetrics,MSG_METRIC_NORMAL);</pre></td><td class="line_number">421</td><td id="421"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MEASURE_FILE_ERROR,the_szCurMetrics,MSG_METRIC_NORMAL);</pre></td></tr>
    <tr><td class="line_number">430</td><td id="430"><pre>        }</pre></td><td class="line_number">422</td><td id="422"><pre>        }</pre></td></tr>
    <tr><td class="line_number">431</td><td id="431"><pre>    }</pre></td><td class="line_number">423</td><td id="423"><pre>    }</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">424</td><td id="424" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">425</td><td id="425" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">426</td><td id="426" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">427</td><td id="427" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">428</td><td id="428" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number">432</td><td id="432"><pre></pre></td><td class="line_number">429</td><td id="429"><pre></pre></td></tr>
    <tr><td class="line_number">433</td><td id="433" class="added_line"><pre><span class="la">EXIT:</span>;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">434</td><td id="434" class="added_line"><pre>    <span class="c">/* Error File???o????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">435</td><td id="435" class="added_line"><pre>    the_iRet = OutErrorFile(the_pAnzInfo-&gt;m_err);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9929"><a href="/result/view_message/1/2/7?message_id=505&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(435),(29) :Msg(7:0505) [U] Dereferencing pointer value that is apparently NULL.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">436</td><td id="436" class="added_line"><pre>    <span class="r">if</span>(the_iRet == ANZ_ERR_MEMORY_FAILED){</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">437</td><td id="437" class="added_line"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MOMORY_FAILED);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">438</td><td id="438" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">439</td><td id="439" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">440</td><td id="440" class="added_line"><pre>    <span class="c">/* ???????????????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">441</td><td id="441" class="added_line"><pre>    <span class="c">/* ?R?}???h???C??????????Option??????????????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">442</td><td id="442" class="added_line"><pre>    <span class="r">if</span>(the_pCmdOption != <span class="pc">NULL</span>){</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">443</td><td id="443" class="added_line"><pre>        free(the_pCmdOption);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">444</td><td id="444" class="added_line"><pre>        the_pCmdOption = <span class="pc">NULL</span>;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">445</td><td id="445" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">446</td><td id="446" class="added_line"><pre>    <span class="c">/* ?v?????List?????????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">447</td><td id="447" class="added_line"><pre>    <span class="r">if</span>(the_pMeasureItem != <span class="pc">NULL</span>) {</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">448</td><td id="448" class="added_line"><pre>        free(the_pMeasureItem);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">449</td><td id="449" class="added_line"><pre>        the_pMeasureItem = <span class="pc">NULL</span>;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">450</td><td id="450" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">451</td><td id="451" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">452</td><td id="452" class="added_line"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">453</td><td id="453" class="added_line"><pre>    FreeAllResourc(the_pAnzInfo);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">454</td><td id="454" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">455</td><td id="455" class="added_line"><pre>    <span class="r">if</span>(g_bOutTime) {</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">456</td><td id="456" class="added_line"><pre>        ftime(&amp;the_ed);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">457</td><td id="457" class="added_line"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="ch">\n</span><span class="k">Total times:%ld ms</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,(the_ed.time - the_st.time) * <span class="i">1000</span> + (the_ed.millitm - the_st.millitm));</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">458</td><td id="458" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">459</td><td id="459" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">460</td><td id="460" class="added_line"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">461</td><td id="461" class="added_line"><pre>  CheckAllMem();</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">462</td><td id="462" class="added_line"><pre>  DestoryMemMan();</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">463</td><td id="463" class="added_line"><pre><span class="pp">#endif</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">464</td><td id="464"><pre>    <span class="r">return</span> the_iRet;</pre></td><td class="line_number">430</td><td id="430"><pre>    <span class="r">return</span> the_iRet;</pre></td></tr>
    <tr><td class="line_number">465</td><td id="465"><pre>}</pre></td><td class="line_number">431</td><td id="431"><pre>}</pre></td></tr>
    <tr><td class="line_number">466</td><td id="466"><pre><span class="c">/**</span></pre></td><td class="line_number">432</td><td id="432"><pre><span class="c">/**</span></pre></td></tr>
    <tr><td class="line_number">467</td><td id="467"><pre><span class="c">*  AbortAnalyzeMe</span></pre></td><td class="line_number">433</td><td id="433"><pre><span class="c">*  AbortAnalyzeMe</span></pre></td></tr>
    <tr><td class="line_number">468</td><td id="468"><pre><span class="c">*  AnalyzeMe Abort</span></pre></td><td class="line_number">434</td><td id="434"><pre><span class="c">*  AnalyzeMe Abort</span></pre></td></tr>
    <tr><td class="line_number">469</td><td id="469"><pre><span class="c">*  @param</span></pre></td><td class="line_number">435</td><td id="435"><pre><span class="c">*  @param</span></pre></td></tr>
    <tr><td class="line_number">470</td><td id="470"><pre><span class="c">*  @return</span></pre></td><td class="line_number">436</td><td id="436"><pre><span class="c">*  @return</span></pre></td></tr>
    <tr><td class="line_number">471</td><td id="471"><pre><span class="c">*          ???</span></pre></td><td class="line_number">437</td><td id="437"><pre><span class="c">*          ???</span></pre></td></tr>
    <tr><td class="line_number">472</td><td id="472"><pre><span class="c">*  @author zhang-gh</span></pre></td><td class="line_number">438</td><td id="438"><pre><span class="c">*  @author zhang-gh</span></pre></td></tr>
    <tr><td class="line_number">473</td><td id="473"><pre><span class="c">*/</span></pre></td><td class="line_number">439</td><td id="439"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">474</td><td id="474"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">440</td><td id="440"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">475</td><td id="475" class="added_line"><pre><span class="di">void</span> AbortAnalyzeMe( <span class="pt">int</span> sig, <span class="pt">int</span> code, <span class="di">void</span> *scp , <span class="pt">char</span> *addr )</pre></td><td class="line_number">441</td><td id="441" class="deleted_line"><pre><span class="di">void</span> AbortAnalyzeMe(<span class="pt">int</span> sig, <span class="pt">int</span> code, <span class="di">void</span> *scp , <span class="pt">char</span> *addr)</pre></td></tr>
    <tr><td class="line_number">476</td><td id="476"><pre><span class="pp">#else</span></pre></td><td class="line_number">442</td><td id="442"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">477</td><td id="477"><pre>BOOL WINAPI AbortAnalyzeMe(DWORD dwCtrlType)</pre></td><td class="line_number">443</td><td id="443"><pre>BOOL WINAPI AbortAnalyzeMe(DWORD dwCtrlType)</pre></td></tr>
    <tr><td class="line_number">478</td><td id="478"><pre><span class="pp">#endif</span></pre></td><td class="line_number">444</td><td id="444"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">479</td><td id="479"><pre>{</pre></td><td class="line_number">445</td><td id="445"><pre>{</pre></td></tr>
    <tr><td class="line_number">480</td><td id="480"><pre>    <span class="pt">char</span> the_errMsg[<span class="i">128</span>]; <span class="c">/* ?G???[???b?Z?[?W */</span></pre></td><td class="line_number">446</td><td id="446"><pre>    <span class="pt">char</span> the_errMsg[<span class="i">128</span>]; <span class="c">/* ?G???[???b?Z?[?W */</span></pre></td></tr>
    <tr><td class="line_number">481</td><td id="481"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">447</td><td id="447"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">482</td><td id="482"><pre>    <span class="c">/*  Signal */</span></pre></td><td class="line_number">448</td><td id="448"><pre>    <span class="c">/*  Signal */</span></pre></td></tr>
    <tr><td class="line_number">483</td><td id="483"><pre>    <span class="r">switch</span>(sig){</pre></td><td class="line_number">449</td><td id="449"><pre>    <span class="r">switch</span>(sig){</pre></td></tr>
    <tr><td class="line_number">484</td><td id="484"><pre>    <span class="r">case</span> SIGINT :</pre></td><td class="line_number">450</td><td id="450"><pre>    <span class="r">case</span> SIGINT :</pre></td></tr>
    <tr><td class="line_number">485</td><td id="485"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGINT(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">451</td><td id="451"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGINT(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">486</td><td id="486"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">452</td><td id="452"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">487</td><td id="487"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">453</td><td id="453"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">488</td><td id="488"><pre>    <span class="r">case</span> SIGQUIT :</pre></td><td class="line_number">454</td><td id="454"><pre>    <span class="r">case</span> SIGQUIT :</pre></td></tr>
    <tr><td class="line_number">489</td><td id="489"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGQUIT(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">455</td><td id="455"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGQUIT(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">490</td><td id="490"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">456</td><td id="456"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">491</td><td id="491"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">457</td><td id="457"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">492</td><td id="492"><pre>    <span class="r">case</span> SIGKILL :</pre></td><td class="line_number">458</td><td id="458"><pre>    <span class="r">case</span> SIGKILL :</pre></td></tr>
    <tr><td class="line_number">493</td><td id="493"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGKILL(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">459</td><td id="459"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGKILL(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">494</td><td id="494"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">460</td><td id="460"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">495</td><td id="495"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">461</td><td id="461"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">496</td><td id="496"><pre>    <span class="r">case</span> SIGTERM :</pre></td><td class="line_number">462</td><td id="462"><pre>    <span class="r">case</span> SIGTERM :</pre></td></tr>
    <tr><td class="line_number">497</td><td id="497"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGTERM(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">463</td><td id="463"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGTERM(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">498</td><td id="498"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">464</td><td id="464"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">499</td><td id="499"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">465</td><td id="465"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">500</td><td id="500"><pre>    <span class="r">case</span> SIGFPE :</pre></td><td class="line_number">466</td><td id="466"><pre>    <span class="r">case</span> SIGFPE :</pre></td></tr>
    <tr><td class="line_number">501</td><td id="501"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGFPE(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">467</td><td id="467"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGFPE(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">502</td><td id="502"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">468</td><td id="468"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">503</td><td id="503"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">469</td><td id="469"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">504</td><td id="504"><pre>    <span class="r">case</span> SIGILL :</pre></td><td class="line_number">470</td><td id="470"><pre>    <span class="r">case</span> SIGILL :</pre></td></tr>
    <tr><td class="line_number">505</td><td id="505"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGILL(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">471</td><td id="471"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGILL(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">506</td><td id="506"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">472</td><td id="472"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">507</td><td id="507"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">473</td><td id="473"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">508</td><td id="508"><pre>    <span class="r">case</span> SIGBUS :</pre></td><td class="line_number">474</td><td id="474"><pre>    <span class="r">case</span> SIGBUS :</pre></td></tr>
    <tr><td class="line_number">509</td><td id="509"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGBUS(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">475</td><td id="475"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGBUS(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">510</td><td id="510"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">476</td><td id="476"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">511</td><td id="511"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">477</td><td id="477"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">512</td><td id="512"><pre>    <span class="r">case</span> SIGSEGV :</pre></td><td class="line_number">478</td><td id="478"><pre>    <span class="r">case</span> SIGSEGV :</pre></td></tr>
    <tr><td class="line_number">513</td><td id="513"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGSEGV(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">479</td><td id="479"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGSEGV(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">514</td><td id="514"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">480</td><td id="480"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">515</td><td id="515"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">481</td><td id="481"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">516</td><td id="516"><pre>    <span class="r">case</span> SIGSYS :</pre></td><td class="line_number">482</td><td id="482"><pre>    <span class="r">case</span> SIGSYS :</pre></td></tr>
    <tr><td class="line_number">517</td><td id="517"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGSYS(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">483</td><td id="483"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGSYS(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">518</td><td id="518"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">484</td><td id="484"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">519</td><td id="519"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">485</td><td id="485"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">520</td><td id="520"><pre>    <span class="r">default</span> :</pre></td><td class="line_number">486</td><td id="486"><pre>    <span class="r">default</span> :</pre></td></tr>
    <tr><td class="line_number">521</td><td id="521"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=%d</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">487</td><td id="487"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=%d</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">522</td><td id="522"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">488</td><td id="488"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">523</td><td id="523"><pre>    }</pre></td><td class="line_number">489</td><td id="489"><pre>    }</pre></td></tr>
    <tr><td class="line_number">524</td><td id="524"><pre></pre></td><td class="line_number">490</td><td id="490"><pre></pre></td></tr>
    <tr><td class="line_number">525</td><td id="525"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td><td class="line_number">491</td><td id="491"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td></tr>
    <tr><td class="line_number">526</td><td id="526"><pre>    FreeAllResourc(g_pAnzInfo);</pre></td><td class="line_number">492</td><td id="492"><pre>    FreeAllResourc(g_pAnzInfo);</pre></td></tr>
    <tr><td class="line_number">527</td><td id="527"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td><td class="line_number">493</td><td id="493"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td></tr>
    <tr><td class="line_number">528</td><td id="528"><pre>    CheckAllMem();</pre></td><td class="line_number">494</td><td id="494"><pre>    CheckAllMem();</pre></td></tr>
    <tr><td class="line_number">529</td><td id="529"><pre>    DestoryMemMan();</pre></td><td class="line_number">495</td><td id="495"><pre>    DestoryMemMan();</pre></td></tr>
    <tr><td class="line_number">530</td><td id="530"><pre><span class="pp">#endif</span></pre></td><td class="line_number">496</td><td id="496"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">531</td><td id="531"><pre>    <span class="c">/* Signal Check */</span></pre></td><td class="line_number">497</td><td id="497"><pre>    <span class="c">/* Signal Check */</span></pre></td></tr>
    <tr><td class="line_number">532</td><td id="532"><pre>    <span class="r">switch</span>(sig){</pre></td><td class="line_number">498</td><td id="498"><pre>    <span class="r">switch</span>(sig){</pre></td></tr>
    <tr><td class="line_number">533</td><td id="533"><pre>    <span class="r">case</span> SIGINT :</pre></td><td class="line_number">499</td><td id="499"><pre>    <span class="r">case</span> SIGINT :</pre></td></tr>
    <tr><td class="line_number">534</td><td id="534"><pre>    <span class="r">case</span> SIGQUIT :</pre></td><td class="line_number">500</td><td id="500"><pre>    <span class="r">case</span> SIGQUIT :</pre></td></tr>
    <tr><td class="line_number">535</td><td id="535"><pre>    <span class="r">case</span> SIGKILL :</pre></td><td class="line_number">501</td><td id="501"><pre>    <span class="r">case</span> SIGKILL :</pre></td></tr>
    <tr><td class="line_number">536</td><td id="536"><pre>    <span class="r">case</span> SIGTERM :</pre></td><td class="line_number">502</td><td id="502"><pre>    <span class="r">case</span> SIGTERM :</pre></td></tr>
    <tr><td class="line_number">537</td><td id="537"><pre>        exit(<span class="i">0</span>) ;</pre></td><td class="line_number">503</td><td id="503"><pre>        exit(<span class="i">0</span>) ;</pre></td></tr>
    <tr><td class="line_number">538</td><td id="538"><pre>    <span class="r">case</span> SIGFPE :</pre></td><td class="line_number">504</td><td id="504"><pre>    <span class="r">case</span> SIGFPE :</pre></td></tr>
    <tr><td class="line_number">539</td><td id="539"><pre>    <span class="r">case</span> SIGILL :</pre></td><td class="line_number">505</td><td id="505"><pre>    <span class="r">case</span> SIGILL :</pre></td></tr>
    <tr><td class="line_number">540</td><td id="540"><pre>    <span class="r">case</span> SIGBUS :</pre></td><td class="line_number">506</td><td id="506"><pre>    <span class="r">case</span> SIGBUS :</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">507</td><td id="507" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">508</td><td id="508" class="deleted_line"><pre>    <span class="r">case</span> SIGSEGV :</pre></td></tr>
    <tr><td class="line_number">541</td><td id="541"><pre><span class="c">/*    case SIGIOT :*/</span></pre></td><td class="line_number">509</td><td id="509"><pre><span class="c">/*    case SIGIOT :*/</span></pre></td></tr>
    <tr><td class="line_number">542</td><td id="542" class="added_line"><pre>    <span class="r">case</span> SIGSEGV :</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">543</td><td id="543"><pre>    <span class="r">case</span> SIGSYS :</pre></td><td class="line_number">510</td><td id="510"><pre>    <span class="r">case</span> SIGSYS :</pre></td></tr>
    <tr><td class="line_number">544</td><td id="544"><pre>        abort() ;</pre></td><td class="line_number">511</td><td id="511"><pre>        abort() ;</pre></td></tr>
    <tr><td class="line_number">545</td><td id="545"><pre>    }</pre></td><td class="line_number">512</td><td id="512"><pre>    }</pre></td></tr>
    <tr><td class="line_number">546</td><td id="546"><pre>    exit(<span class="i">0</span>) ;</pre></td><td class="line_number">513</td><td id="513"><pre>    exit(<span class="i">0</span>) ;</pre></td></tr>
    <tr><td class="line_number">547</td><td id="547"><pre><span class="pp">#else</span></pre></td><td class="line_number">514</td><td id="514"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">548</td><td id="548"><pre>    <span class="r">switch</span>(dwCtrlType){</pre></td><td class="line_number">515</td><td id="515"><pre>    <span class="r">switch</span>(dwCtrlType){</pre></td></tr>
    <tr><td class="line_number">549</td><td id="549"><pre>    <span class="r">case</span> CTRL_C_EVENT:</pre></td><td class="line_number">516</td><td id="516"><pre>    <span class="r">case</span> CTRL_C_EVENT:</pre></td></tr>
    <tr><td class="line_number">550</td><td id="550"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Ctrl + C pressed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">517</td><td id="517"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Ctrl + C pressed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">551</td><td id="551"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">518</td><td id="518"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">552</td><td id="552"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">519</td><td id="519"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">553</td><td id="553"><pre>    <span class="r">case</span> CTRL_BREAK_EVENT:</pre></td><td class="line_number">520</td><td id="520"><pre>    <span class="r">case</span> CTRL_BREAK_EVENT:</pre></td></tr>
    <tr><td class="line_number">554</td><td id="554"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Ctrl + Break pressed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">521</td><td id="521"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Ctrl + Break pressed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">555</td><td id="555"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">522</td><td id="522"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">556</td><td id="556"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">523</td><td id="523"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">557</td><td id="557"><pre>    <span class="r">case</span> CTRL_CLOSE_EVENT:</pre></td><td class="line_number">524</td><td id="524"><pre>    <span class="r">case</span> CTRL_CLOSE_EVENT:</pre></td></tr>
    <tr><td class="line_number">558</td><td id="558"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Console Closed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">525</td><td id="525"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Console Closed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">559</td><td id="559"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">526</td><td id="526"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">560</td><td id="560"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">527</td><td id="527"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">561</td><td id="561"><pre>    <span class="r">case</span> CTRL_LOGOFF_EVENT:</pre></td><td class="line_number">528</td><td id="528"><pre>    <span class="r">case</span> CTRL_LOGOFF_EVENT:</pre></td></tr>
    <tr><td class="line_number">562</td><td id="562"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Windows is logoff!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">529</td><td id="529"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Windows is logoff!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">563</td><td id="563"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">530</td><td id="530"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">564</td><td id="564"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">531</td><td id="531"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">565</td><td id="565"><pre>    <span class="r">case</span> CTRL_SHUTDOWN_EVENT:</pre></td><td class="line_number">532</td><td id="532"><pre>    <span class="r">case</span> CTRL_SHUTDOWN_EVENT:</pre></td></tr>
    <tr><td class="line_number">566</td><td id="566"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Windows is shutdown!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">533</td><td id="533"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Windows is shutdown!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">567</td><td id="567"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">534</td><td id="534"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">568</td><td id="568"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">535</td><td id="535"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">569</td><td id="569"><pre>    <span class="r">default</span>:</pre></td><td class="line_number">536</td><td id="536"><pre>    <span class="r">default</span>:</pre></td></tr>
    <tr><td class="line_number">570</td><td id="570"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Unknowe event!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">537</td><td id="537"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Unknowe event!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">571</td><td id="571"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">538</td><td id="538"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">572</td><td id="572" class="added_line"><pre>        <span class="r">break</span>;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">573</td><td id="573"><pre>    }</pre></td><td class="line_number">539</td><td id="539"><pre>    }</pre></td></tr>
    <tr><td class="line_number">574</td><td id="574"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td><td class="line_number">540</td><td id="540"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td></tr>
    <tr><td class="line_number">575</td><td id="575"><pre>    FreeAllResourc(g_pAnzInfo);</pre></td><td class="line_number">541</td><td id="541"><pre>    FreeAllResourc(g_pAnzInfo);</pre></td></tr>
    <tr><td class="line_number">576</td><td id="576"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td><td class="line_number">542</td><td id="542"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td></tr>
    <tr><td class="line_number">577</td><td id="577"><pre>    CheckAllMem();</pre></td><td class="line_number">543</td><td id="543"><pre>    CheckAllMem();</pre></td></tr>
    <tr><td class="line_number">578</td><td id="578"><pre>    DestoryMemMan();</pre></td><td class="line_number">544</td><td id="544"><pre>    DestoryMemMan();</pre></td></tr>
    <tr><td class="line_number">579</td><td id="579"><pre><span class="pp">#endif</span></pre></td><td class="line_number">545</td><td id="545"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">580</td><td id="580"><pre>    ExitProcess(<span class="i">0</span>);</pre></td><td class="line_number">546</td><td id="546"><pre>    ExitProcess(<span class="i">0</span>);</pre></td></tr>
    <tr><td class="line_number">581</td><td id="581"><pre>    <span class="r">return</span> <span class="i">0</span>;</pre></td><td class="line_number">547</td><td id="547"><pre>    <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">582</td><td id="582"><pre><span class="pp">#endif</span></pre></td><td class="line_number">548</td><td id="548"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">583</td><td id="583"><pre>}</pre></td><td class="line_number">549</td><td id="549"><pre>}</pre></td></tr>
    <tr><td class="line_number">584</td><td id="584"><pre><span class="c">/**</span></pre></td><td class="line_number">550</td><td id="550"><pre><span class="c">/**</span></pre></td></tr>
    <tr><td class="line_number">585</td><td id="585"><pre><span class="c">*  SetSignal</span></pre></td><td class="line_number">551</td><td id="551"><pre><span class="c">*  SetSignal</span></pre></td></tr>
    <tr><td class="line_number">586</td><td id="586"><pre><span class="c">*  ?V?O?????n???h???o?^</span></pre></td><td class="line_number">552</td><td id="552"><pre><span class="c">*  ?V?O?????n???h???o?^</span></pre></td></tr>
    <tr><td class="line_number">587</td><td id="587"><pre><span class="c">*  @param</span></pre></td><td class="line_number">553</td><td id="553"><pre><span class="c">*  @param</span></pre></td></tr>
    <tr><td class="line_number">588</td><td id="588"><pre><span class="c">*         ???</span></pre></td><td class="line_number">554</td><td id="554"><pre><span class="c">*         ???</span></pre></td></tr>
    <tr><td class="line_number">589</td><td id="589"><pre><span class="c">*  @return</span></pre></td><td class="line_number">555</td><td id="555"><pre><span class="c">*  @return</span></pre></td></tr>
    <tr><td class="line_number">590</td><td id="590"><pre><span class="c">*         ???</span></pre></td><td class="line_number">556</td><td id="556"><pre><span class="c">*         ???</span></pre></td></tr>
    <tr><td class="line_number">591</td><td id="591"><pre><span class="c">*  @author zhang-gh</span></pre></td><td class="line_number">557</td><td id="557"><pre><span class="c">*  @author zhang-gh</span></pre></td></tr>
    <tr><td class="line_number">592</td><td id="592"><pre><span class="c">*/</span></pre></td><td class="line_number">558</td><td id="558"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">593</td><td id="593"><pre><span class="di">void</span> SetSignal()</pre></td><td class="line_number">559</td><td id="559"><pre><span class="di">void</span> SetSignal()</pre></td></tr>
    <tr><td class="line_number">594</td><td id="594"><pre>{</pre></td><td class="line_number">560</td><td id="560"><pre>{</pre></td></tr>
    <tr><td class="line_number">595</td><td id="595"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">561</td><td id="561"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">596</td><td id="596"><pre>    <span class="c">/* Signal Set */</span></pre></td><td class="line_number">562</td><td id="562"><pre>    <span class="c">/* Signal Set */</span></pre></td></tr>
    <tr><td class="line_number">597</td><td id="597"><pre>    signal( SIGFPE  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">563</td><td id="563"><pre>    signal( SIGFPE  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">598</td><td id="598"><pre>    signal( SIGILL  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">564</td><td id="564"><pre>    signal( SIGILL  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">599</td><td id="599"><pre>    signal( SIGBUS  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">565</td><td id="565"><pre>    signal( SIGBUS  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">600</td><td id="600" class="added_line"><pre><span class="c">/*    signal( SIGIOT  , (void *)AbortAnalyzeMe); */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">601</td><td id="601"><pre>    signal( SIGSEGV , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">566</td><td id="566"><pre>    signal( SIGSEGV , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">602</td><td id="602"><pre>    signal( SIGSYS , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">567</td><td id="567"><pre>    signal( SIGSYS , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">603</td><td id="603"><pre></pre></td><td class="line_number">568</td><td id="568"><pre></pre></td></tr>
    <tr><td class="line_number">604</td><td id="604"><pre>    signal( SIGINT  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">569</td><td id="569"><pre>    signal( SIGINT  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">605</td><td id="605"><pre>    signal( SIGQUIT , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">570</td><td id="570"><pre>    signal( SIGQUIT , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">606</td><td id="606"><pre>    signal( SIGKILL , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">571</td><td id="571"><pre>    signal( SIGKILL , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">607</td><td id="607" class="added_line"><pre>    signal( SIGTERM , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">572</td><td id="572" class="deleted_line"><pre>    signal( SIGTERM , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">573</td><td id="573" class="deleted_line"><pre><span class="c">/*    signal( SIGIOT  , (void *)AbortAnalyzeMe); */</span></pre></td></tr>
    <tr><td class="line_number">608</td><td id="608"><pre><span class="pp">#else</span></pre></td><td class="line_number">574</td><td id="574"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">609</td><td id="609"><pre>    SetConsoleCtrlHandler(AbortAnalyzeMe, <span class="i">1</span>);</pre></td><td class="line_number">575</td><td id="575"><pre>    SetConsoleCtrlHandler(AbortAnalyzeMe, <span class="i">1</span>);</pre></td></tr>
    <tr><td class="line_number">610</td><td id="610"><pre><span class="pp">#endif</span></pre></td><td class="line_number">576</td><td id="576"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">611</td><td id="611"><pre>    <span class="r">return</span>;</pre></td><td class="line_number">577</td><td id="577"><pre>    <span class="r">return</span>;</pre></td></tr>
    <tr><td class="line_number">612</td><td id="612"><pre>}</pre></td><td class="line_number">578</td><td id="578"><pre>}</pre></td></tr>
    <tr><td class="line_number">613</td><td id="613"><pre></pre></td><td class="line_number">579</td><td id="579"><pre></pre></td></tr>
    <tr><td class="line_number">614</td><td id="614"><pre><span class="c">/**</span></pre></td><td class="line_number">580</td><td id="580"><pre><span class="c">/**</span></pre></td></tr>
    <tr><td class="line_number">615</td><td id="615"><pre><span class="c">*  ResetTrendPath</span></pre></td><td class="line_number">581</td><td id="581"><pre><span class="c">*  ResetTrendPath</span></pre></td></tr>
    <tr><td class="line_number">616</td><td id="616"><pre><span class="c">*  ????p?X????????</span></pre></td><td class="line_number">582</td><td id="582"><pre><span class="c">*  ????p?X????????</span></pre></td></tr>
    <tr><td class="line_number">617</td><td id="617"><pre><span class="c">*  @param</span></pre></td><td class="line_number">583</td><td id="583"><pre><span class="c">*  @param</span></pre></td></tr>
    <tr><td class="line_number">618</td><td id="618"><pre><span class="c">*         io_pPath  input Path</span></pre></td><td class="line_number">584</td><td id="584"><pre><span class="c">*         io_pPath  input Path</span></pre></td></tr>
    <tr><td class="line_number">619</td><td id="619"><pre><span class="c">*  @return</span></pre></td><td class="line_number">585</td><td id="585"><pre><span class="c">*  @return</span></pre></td></tr>
    <tr><td class="line_number">620</td><td id="620"><pre><span class="c">*         ???</span></pre></td><td class="line_number">586</td><td id="586"><pre><span class="c">*         ???</span></pre></td></tr>
    <tr><td class="line_number">621</td><td id="621"><pre><span class="c">*  @author luo-jirong</span></pre></td><td class="line_number">587</td><td id="587"><pre><span class="c">*  @author luo-jirong</span></pre></td></tr>
    <tr><td class="line_number">622</td><td id="622"><pre><span class="c">*/</span></pre></td><td class="line_number">588</td><td id="588"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">623</td><td id="623"><pre><span class="pt">int</span> ResetTrendPath(<span class="pt">char</span> *io_pPath)</pre></td><td class="line_number">589</td><td id="589"><pre><span class="pt">int</span> ResetTrendPath(<span class="pt">char</span> *io_pPath)</pre></td></tr>
    <tr><td class="line_number">624</td><td id="624"><pre>{</pre></td><td class="line_number">590</td><td id="590"><pre>{</pre></td></tr>
    <tr><td class="line_number">625</td><td id="625"><pre>        <span class="pt">char</span> the_szFullPath[MAX_PATH];</pre></td><td class="line_number">591</td><td id="591"><pre>        <span class="pt">char</span> the_szFullPath[MAX_PATH];</pre></td></tr>
    <tr><td class="line_number">626</td><td id="626"><pre>        <span class="pt">char</span> the_szCurPath[MAX_PATH];</pre></td><td class="line_number">592</td><td id="592"><pre>        <span class="pt">char</span> the_szCurPath[MAX_PATH];</pre></td></tr>
    <tr><td class="line_number">627</td><td id="627" class="added_line"><pre>        <span class="pt">int</span> the_iRet = ANZ_SUCCESS;</pre></td><td class="line_number">593</td><td id="593" class="deleted_line"><pre>        <span class="pt">int</span> the_iRet = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">628</td><td id="628"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">594</td><td id="594"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">629</td><td id="629"><pre>        <span class="c">/* ?J?????gDir??????Dir??????? */</span></pre></td><td class="line_number">595</td><td id="595"><pre>        <span class="c">/* ?J?????gDir??????Dir??????? */</span></pre></td></tr>
    <tr><td class="line_number">630</td><td id="630"><pre>        <span class="r">if</span>(io_pPath[<span class="i">0</span>] != <span class="ch">'/'</span>) {</pre></td><td class="line_number">596</td><td id="596"><pre>        <span class="r">if</span>(io_pPath[<span class="i">0</span>] != <span class="ch">'/'</span>) {</pre></td></tr>
    <tr><td class="line_number">631</td><td id="631"><pre>            <span class="r">if</span>(getcwd(the_szCurPath,MAX_PATH) == <span class="pc">NULL</span>) {</pre></td><td class="line_number">597</td><td id="597"><pre>            <span class="r">if</span>(getcwd(the_szCurPath,MAX_PATH) == <span class="pc">NULL</span>) {</pre></td></tr>
    <tr><td class="line_number">632</td><td id="632"><pre>                the_iRet = ANZ_ERROR;</pre></td><td class="line_number">598</td><td id="598"><pre>                the_iRet = ANZ_ERROR;</pre></td></tr>
    <tr><td class="line_number">633</td><td id="633"><pre>                <span class="r">goto</span> EXIT;</pre></td><td class="line_number">599</td><td id="599"><pre>                <span class="r">goto</span> EXIT;</pre></td></tr>
    <tr><td class="line_number">634</td><td id="634"><pre>            }</pre></td><td class="line_number">600</td><td id="600"><pre>            }</pre></td></tr>
    <tr><td class="line_number">635</td><td id="635"><pre>            <span class="r">if</span>(strcmp(io_pPath,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>) {</pre></td><td class="line_number">601</td><td id="601"><pre>            <span class="r">if</span>(strcmp(io_pPath,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>) {</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9930"><a href="/result/view_message/1/2/7?message_id=1021&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_9931"><a href="/result/view_message/1/2/7?message_id=3112&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_9932"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9933"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9934"><a href="/result/view_message/1/2/7?message_id=3346&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10900"><a href="/result/view_message/1/2/11?message_id=1021&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(6:1021) [E] A statement expression is not supported in ISO C, and is treated as a language extension.</b></a></div><div class="common_warning" id="warning_10901"><a href="/result/view_message/1/2/11?message_id=3112&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(3:3112) This statement has no side-effect - it can be removed.</b></a></div><div class="common_warning" id="warning_10902"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10903"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10904"><a href="/result/view_message/1/2/11?message_id=3346&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(2:3346) This 'if' control expression has a constant 'true' value.</b></a></div></td></tr>
    <tr><td class="line_number">636</td><td id="636"><pre>                sprintf(the_szFullPath,<span class="s"><span class="dl">&quot;</span><span class="k">%s/%s</span><span class="dl">&quot;</span></span>,the_szCurPath,io_pPath);</pre></td><td class="line_number">602</td><td id="602"><pre>                sprintf(the_szFullPath,<span class="s"><span class="dl">&quot;</span><span class="k">%s/%s</span><span class="dl">&quot;</span></span>,the_szCurPath,io_pPath);</pre></td></tr>
    <tr><td class="line_number">637</td><td id="637"><pre>            }</pre></td><td class="line_number">603</td><td id="603"><pre>            }</pre></td></tr>
    <tr><td class="line_number">638</td><td id="638"><pre>        }</pre></td><td class="line_number">604</td><td id="604"><pre>        }</pre></td></tr>
    <tr><td class="line_number">639</td><td id="639" class="added_line"><pre>        <span class="r">else</span> {</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">640</td><td id="640" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">641</td><td id="641" class="added_line"><pre>        }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">642</td><td id="642"><pre><span class="pp">#else</span></pre></td><td class="line_number">605</td><td id="605"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">643</td><td id="643"><pre>        <span class="c">/* ?J?????gDir??????Dir??????? */</span></pre></td><td class="line_number">606</td><td id="606"><pre>        <span class="c">/* ?J?????gDir??????Dir??????? */</span></pre></td></tr>
    <tr><td class="line_number">644</td><td id="644"><pre>        <span class="r">if</span>((io_pPath[<span class="i">1</span>] == <span class="ch">':'</span> &amp;&amp; io_pPath[<span class="i">2</span>] == <span class="ch">'\\'</span>) ||</pre></td><td class="line_number">607</td><td id="607"><pre>        <span class="r">if</span>((io_pPath[<span class="i">1</span>] == <span class="ch">':'</span> &amp;&amp; io_pPath[<span class="i">2</span>] == <span class="ch">'\\'</span>) ||</pre></td></tr>
    <tr><td class="line_number">645</td><td id="645"><pre>            (io_pPath[<span class="i">0</span>] == <span class="ch">'\\'</span>)) {</pre></td><td class="line_number">608</td><td id="608"><pre>            (io_pPath[<span class="i">0</span>] == <span class="ch">'\\'</span>)) {</pre></td></tr>
    <tr><td class="line_number">646</td><td id="646"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">609</td><td id="609"><pre>            <span class="r">goto</span> EXIT;</pre></td></tr>
    <tr><td class="line_number">647</td><td id="647"><pre>        }</pre></td><td class="line_number">610</td><td id="610"><pre>        }</pre></td></tr>
    <tr><td class="line_number">648</td><td id="648"><pre>        <span class="r">else</span> {</pre></td><td class="line_number">611</td><td id="611"><pre>        <span class="r">else</span> {</pre></td></tr>
    <tr><td class="line_number">649</td><td id="649"><pre>            <span class="r">if</span>(getcwd(the_szCurPath,MAX_PATH) == <span class="pc">NULL</span>) {</pre></td><td class="line_number">612</td><td id="612"><pre>            <span class="r">if</span>(getcwd(the_szCurPath,MAX_PATH) == <span class="pc">NULL</span>) {</pre></td></tr>
    <tr><td class="line_number">650</td><td id="650"><pre>                the_iRet = ANZ_ERROR;</pre></td><td class="line_number">613</td><td id="613"><pre>                the_iRet = ANZ_ERROR;</pre></td></tr>
    <tr><td class="line_number">651</td><td id="651"><pre>                <span class="r">goto</span> EXIT;</pre></td><td class="line_number">614</td><td id="614"><pre>                <span class="r">goto</span> EXIT;</pre></td></tr>
    <tr><td class="line_number">652</td><td id="652"><pre>            }</pre></td><td class="line_number">615</td><td id="615"><pre>            }</pre></td></tr>
    <tr><td class="line_number">653</td><td id="653"><pre>            <span class="r">if</span>(strcmp(io_pPath,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>) {</pre></td><td class="line_number">616</td><td id="616"><pre>            <span class="r">if</span>(strcmp(io_pPath,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>) {</pre></td></tr>
    <tr><td class="line_number">654</td><td id="654"><pre>                sprintf(the_szFullPath,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\\</span><span class="k">%s</span><span class="dl">&quot;</span></span>,the_szCurPath,io_pPath);</pre></td><td class="line_number">617</td><td id="617"><pre>                sprintf(the_szFullPath,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\\</span><span class="k">%s</span><span class="dl">&quot;</span></span>,the_szCurPath,io_pPath);</pre></td></tr>
    <tr><td class="line_number">655</td><td id="655"><pre>            }</pre></td><td class="line_number">618</td><td id="618"><pre>            }</pre></td></tr>
    <tr><td class="line_number">656</td><td id="656"><pre>        }</pre></td><td class="line_number">619</td><td id="619"><pre>        }</pre></td></tr>
    <tr><td class="line_number">657</td><td id="657"><pre><span class="pp">#endif</span></pre></td><td class="line_number">620</td><td id="620"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">658</td><td id="658"><pre>        strcpy(io_pPath,the_szFullPath);</pre></td><td class="line_number">621</td><td id="621"><pre>        strcpy(io_pPath,the_szFullPath);</pre></td></tr>
    <tr><td class="deleted_warning" id="line_number"></td><td class="deleted_warning"></td><td class="deleted_warning" id="line_number"></td><td><div class="deleted_warning" id="warning_10905"><a href="/result/view_message/1/2/11?message_id=3349&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(621),(25) :Msg(3:3349) This function argument points to data that is apparently unset.</b></a></div></td></tr>
    <tr><td class="line_number">659</td><td id="659" class="added_line"><pre><span class="la">EXIT:</span></pre></td><td class="line_number">622</td><td id="622" class="deleted_line"><pre><span class="la">EXIT:</span></pre></td></tr>
    <tr><td class="line_number">660</td><td id="660" class="added_line"><pre>        <span class="r">return</span> the_iRet;</pre></td><td class="line_number">623</td><td id="623" class="deleted_line"><pre>        <span class="r">return</span> the_iRet;</pre></td></tr>
    <tr><td class="line_number">661</td><td id="661" class="added_line"><pre>}</pre></td><td class="line_number">624</td><td id="624" class="deleted_line"><pre>}</pre></td></tr>
    <tr><td class="line_number">662</td><td id="662"><pre></pre></td><td class="line_number">625</td><td id="625"><pre></pre></td></tr>

  created_at: 2010-12-07 17:14:19
  updated_at: 2010-12-07 17:14:24
  diff_result_id: "11"
  id: "11"
  diff_file_name: 
  critical_contents: |
    <tr><td class="line_number">1</td><td id="1"><pre><span class="c">/*</span></pre></td><td class="line_number">1</td><td id="1"><pre><span class="c">/*</span></pre></td></tr>
    <tr><td class="line_number">2</td><td id="2"><pre><span class="c"> File:</span></pre></td><td class="line_number">2</td><td id="2"><pre><span class="c"> File:</span></pre></td></tr>
    <tr><td class="line_number">3</td><td id="3"><pre><span class="c">      analyzeme.c</span></pre></td><td class="line_number">3</td><td id="3"><pre><span class="c">      analyzeme.c</span></pre></td></tr>
    <tr><td class="line_number">4</td><td id="4"><pre><span class="c"> Copyright:</span></pre></td><td class="line_number">4</td><td id="4"><pre><span class="c"> Copyright:</span></pre></td></tr>
    <tr><td class="line_number">5</td><td id="5"><pre><span class="c">      Copyright (C) 2004 TOSHIBA CORPORATION. All Rights Reserved.</span></pre></td><td class="line_number">5</td><td id="5"><pre><span class="c">      Copyright (C) 2004 TOSHIBA CORPORATION. All Rights Reserved.</span></pre></td></tr>
    <tr><td class="line_number">6</td><td id="6"><pre><span class="c"> Product:</span></pre></td><td class="line_number">6</td><td id="6"><pre><span class="c"> Product:</span></pre></td></tr>
    <tr><td class="line_number">7</td><td id="7"><pre><span class="c">      AnalyzeMe</span></pre></td><td class="line_number">7</td><td id="7"><pre><span class="c">      AnalyzeMe</span></pre></td></tr>
    <tr><td class="line_number">8</td><td id="8"><pre><span class="c"> Abstract:</span></pre></td><td class="line_number">8</td><td id="8"><pre><span class="c"> Abstract:</span></pre></td></tr>
    <tr><td class="line_number">9</td><td id="9"><pre><span class="c">      AnalyzeMe????C??????????`????</span></pre></td><td class="line_number">9</td><td id="9"><pre><span class="c">      AnalyzeMe????C??????????`????</span></pre></td></tr>
    <tr><td class="line_number">10</td><td id="10"><pre><span class="c"> Author:</span></pre></td><td class="line_number">10</td><td id="10"><pre><span class="c"> Author:</span></pre></td></tr>
    <tr><td class="line_number">11</td><td id="11"><pre><span class="c">      zhang-gh</span></pre></td><td class="line_number">11</td><td id="11"><pre><span class="c">      zhang-gh</span></pre></td></tr>
    <tr><td class="line_number">12</td><td id="12"><pre><span class="c"> Date:</span></pre></td><td class="line_number">12</td><td id="12"><pre><span class="c"> Date:</span></pre></td></tr>
    <tr><td class="line_number">13</td><td id="13"><pre><span class="c">      2004/08/20</span></pre></td><td class="line_number">13</td><td id="13"><pre><span class="c">      2004/08/20</span></pre></td></tr>
    <tr><td class="line_number">14</td><td id="14"><pre><span class="c"> REVISION HISTORY:</span></pre></td><td class="line_number">14</td><td id="14"><pre><span class="c"> REVISION HISTORY:</span></pre></td></tr>
    <tr><td class="line_number">15</td><td id="15"><pre><span class="c"></span></pre></td><td class="line_number">15</td><td id="15"><pre><span class="c"></span></pre></td></tr>
    <tr><td class="line_number">16</td><td id="16"><pre><span class="c">*/</span></pre></td><td class="line_number">16</td><td id="16"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">17</td><td id="17"><pre></pre></td><td class="line_number">17</td><td id="17"><pre></pre></td></tr>
    <tr><td class="line_number">18</td><td id="18"><pre><span class="c">/*</span></pre></td><td class="line_number">18</td><td id="18"><pre><span class="c">/*</span></pre></td></tr>
    <tr><td class="line_number">19</td><td id="19"><pre><span class="c">    $AnalyzeMe 1.0.0.1$</span></pre></td><td class="line_number">19</td><td id="19"><pre><span class="c">    $AnalyzeMe 1.0.0.1$</span></pre></td></tr>
    <tr><td class="line_number">20</td><td id="20"><pre><span class="c">*/</span></pre></td><td class="line_number">20</td><td id="20"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">21</td><td id="21"><pre><span class="pp">#include</span> <span class="ic">&quot;analyzeme.h&quot;</span></pre></td><td class="line_number">21</td><td id="21"><pre><span class="pp">#include</span> <span class="ic">&quot;analyzeme.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">22</td><td id="22" class="added_line"><pre><span class="pp">#include</span> <span class="ic">&quot;common.h&quot;</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">23</td><td id="23" class="added_line"><pre><span class="pp">#include</span> <span class="ic">&quot;memory_manage.h&quot;</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">24</td><td id="24"><pre><span class="pp">#include</span> <span class="ic">&quot;parse_cmdline.h&quot;</span></pre></td><td class="line_number">22</td><td id="22"><pre><span class="pp">#include</span> <span class="ic">&quot;parse_cmdline.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">25</td><td id="25"><pre><span class="pp">#include</span> <span class="ic">&quot;common_measure.h&quot;</span></pre></td><td class="line_number">23</td><td id="23"><pre><span class="pp">#include</span> <span class="ic">&quot;common_measure.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">26</td><td id="26"><pre><span class="pp">#include</span> <span class="ic">&quot;trend_measure.h&quot;</span></pre></td><td class="line_number">24</td><td id="24"><pre><span class="pp">#include</span> <span class="ic">&quot;trend_measure.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">27</td><td id="27"><pre><span class="pp">#include</span> <span class="ic">&quot;make_file_list.h&quot;</span></pre></td><td class="line_number">25</td><td id="25"><pre><span class="pp">#include</span> <span class="ic">&quot;make_file_list.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">28</td><td id="28"><pre><span class="pp">#include</span> <span class="ic">&quot;output.h&quot;</span></pre></td><td class="line_number">26</td><td id="26"><pre><span class="pp">#include</span> <span class="ic">&quot;output.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">29</td><td id="29"><pre><span class="pp">#include</span> <span class="ic">&quot;get_process_macro.h&quot;</span></pre></td><td class="line_number">27</td><td id="27"><pre><span class="pp">#include</span> <span class="ic">&quot;get_process_macro.h&quot;</span></pre></td></tr>
    <tr><td class="line_number">30</td><td id="30" class="added_line"><pre><span class="pp">#include</span> <span class="ic">&lt;signal.h&gt;</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">31</td><td id="31"><pre></pre></td><td class="line_number">28</td><td id="28"><pre></pre></td></tr>
    <tr><td class="line_number">32</td><td id="32"><pre><span class="c">/****************************************************/</span></pre></td><td class="line_number">29</td><td id="29"><pre><span class="c">/****************************************************/</span></pre></td></tr>
    <tr><td class="line_number">33</td><td id="33"><pre><span class="c">/*              ????                            */</span></pre></td><td class="line_number">30</td><td id="30"><pre><span class="c">/*              ????                            */</span></pre></td></tr>
    <tr><td class="line_number">34</td><td id="34"><pre><span class="c">/****************************************************/</span></pre></td><td class="line_number">31</td><td id="31"><pre><span class="c">/****************************************************/</span></pre></td></tr>
    <tr><td class="line_number">35</td><td id="35"><pre><span class="di">const</span> <span class="pt">char</span>* TRACEFILE = <span class="s"><span class="dl">&quot;</span><span class="k">analyzeme_trace.txt</span><span class="dl">&quot;</span></span>;</pre></td><td class="line_number">32</td><td id="32"><pre><span class="di">const</span> <span class="pt">char</span>* TRACEFILE = <span class="s"><span class="dl">&quot;</span><span class="k">analyzeme_trace.txt</span><span class="dl">&quot;</span></span>;</pre></td></tr>
    <tr><td class="line_number">36</td><td id="36"><pre><span class="di">const</span> <span class="pt">char</span>* APPLOGFILE = <span class="s"><span class="dl">&quot;</span><span class="k">analyzeme_log.txt</span><span class="dl">&quot;</span></span>;</pre></td><td class="line_number">33</td><td id="33"><pre><span class="di">const</span> <span class="pt">char</span>* APPLOGFILE = <span class="s"><span class="dl">&quot;</span><span class="k">analyzeme_log.txt</span><span class="dl">&quot;</span></span>;</pre></td></tr>
    <tr><td class="line_number">37</td><td id="37"><pre></pre></td><td class="line_number">34</td><td id="34"><pre></pre></td></tr>
    <tr><td class="line_number">38</td><td id="38"><pre><span class="c">/****************************************************/</span></pre></td><td class="line_number">35</td><td id="35"><pre><span class="c">/****************************************************/</span></pre></td></tr>
    <tr><td class="line_number">39</td><td id="39"><pre><span class="c">/*              ?O???[?o???????                  */</span></pre></td><td class="line_number">36</td><td id="36"><pre><span class="c">/*              ?O???[?o???????                  */</span></pre></td></tr>
    <tr><td class="line_number">40</td><td id="40"><pre><span class="c">/****************************************************/</span></pre></td><td class="line_number">37</td><td id="37"><pre><span class="c">/****************************************************/</span></pre></td></tr>
    <tr><td class="line_number">41</td><td id="41"><pre><span class="c">/* ????????File??n???h????????????O???[?o???????? */</span></pre></td><td class="line_number">38</td><td id="38"><pre><span class="c">/* ????????File??n???h????????????O???[?o???????? */</span></pre></td></tr>
    <tr><td class="line_number">42</td><td id="42"><pre></pre></td><td class="line_number">39</td><td id="39"><pre></pre></td></tr>
    <tr><td class="line_number">43</td><td id="43"><pre><span class="c">/* Log File */</span></pre></td><td class="line_number">40</td><td id="40"><pre><span class="c">/* Log File */</span></pre></td></tr>
    <tr><td class="line_number">44</td><td id="44"><pre>FILE *g_fpLogFile = <span class="pc">NULL</span>;       <span class="c">/* Log File pointer */</span></pre></td><td class="line_number">41</td><td id="41"><pre>FILE *g_fpLogFile = <span class="pc">NULL</span>;       <span class="c">/* Log File pointer */</span></pre></td></tr>
    <tr><td class="line_number">45</td><td id="45"><pre><span class="c">/*  Trace File */</span></pre></td><td class="line_number">42</td><td id="42"><pre><span class="c">/*  Trace File */</span></pre></td></tr>
    <tr><td class="line_number">46</td><td id="46"><pre>FILE *g_fpTraceFile = <span class="pc">NULL</span>;     <span class="c">/* Trace File pointer */</span></pre></td><td class="line_number">43</td><td id="43"><pre>FILE *g_fpTraceFile = <span class="pc">NULL</span>;     <span class="c">/* Trace File pointer */</span></pre></td></tr>
    <tr><td class="line_number">47</td><td id="47"><pre><span class="c">/* ?G???[File */</span></pre></td><td class="line_number">44</td><td id="44"><pre><span class="c">/* ?G???[File */</span></pre></td></tr>
    <tr><td class="line_number">48</td><td id="48"><pre>FILE *g_fpErrorFile = <span class="pc">NULL</span>;</pre></td><td class="line_number">45</td><td id="45"><pre>FILE *g_fpErrorFile = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">49</td><td id="49"><pre></pre></td><td class="line_number">46</td><td id="46"><pre></pre></td></tr>
    <tr><td class="line_number">50</td><td id="50" class="added_line"><pre><span class="pt">bool</span> g_bTrace           = <span class="pc">false</span>;    <span class="c">/* Trace flag */</span></pre></td><td class="line_number">47</td><td id="47" class="deleted_line"><pre><span class="pt">bool</span> g_bTrace;    <span class="c">/* Trace flag */</span></pre></td></tr>
    <tr><td class="line_number">51</td><td id="51" class="added_line"><pre><span class="pt">char</span> g_szNVPath[MAX_PATH] = {<span class="i">0</span>};</pre></td><td class="line_number">48</td><td id="48" class="deleted_line"><pre><span class="pt">char</span> g_szNVPath[MAX_PATH] = {</pre></td></tr>
    <tr><td class="line_number">52</td><td id="52" class="added_line"><pre><span class="pt">char</span> g_szOVPath[MAX_PATH] = {<span class="i">0</span>};</pre></td><td class="line_number">49</td><td id="49" class="deleted_line"><pre>    <span class="i">0</span></pre></td></tr>
    <tr><td class="line_number">53</td><td id="53" class="added_line"><pre><span class="pt">bool</span> g_bTrendFile = <span class="pc">false</span>;</pre></td><td class="line_number">50</td><td id="50" class="deleted_line"><pre>};</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">51</td><td id="51" class="deleted_line"><pre><span class="pt">char</span> g_szOVPath[MAX_PATH] = {</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">52</td><td id="52" class="deleted_line"><pre>    <span class="i">0</span></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">53</td><td id="53" class="deleted_line"><pre>};</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">54</td><td id="54" class="deleted_line"><pre><span class="pt">bool</span> g_bTrendFile = <span class="pc">true</span>;</pre></td></tr>
    <tr><td class="line_number">54</td><td id="54"><pre><span class="c">/* Option File????e??????????O???[?o???????? */</span></pre></td><td class="line_number">55</td><td id="55"><pre><span class="c">/* Option File????e??????????O???[?o???????? */</span></pre></td></tr>
    <tr><td class="line_number">55</td><td id="55"><pre><span class="pt">char</span> *g_optionFileCont = <span class="pc">NULL</span>;</pre></td><td class="line_number">56</td><td id="56"><pre><span class="pt">char</span> *g_optionFileCont = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">56</td><td id="56"><pre><span class="c">/* Symbol File????e??????????O???[?o???????? */</span></pre></td><td class="line_number">57</td><td id="57"><pre><span class="c">/* Symbol File????e??????????O???[?o???????? */</span></pre></td></tr>
    <tr><td class="line_number">57</td><td id="57"><pre><span class="pt">char</span> *g_symbolFileCont = <span class="pc">NULL</span>;</pre></td><td class="line_number">58</td><td id="58"><pre><span class="pt">char</span> *g_symbolFileCont = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">58</td><td id="58"><pre><span class="pt">bool</span> g_bOutTime = <span class="pc">false</span>;</pre></td><td class="line_number">59</td><td id="59"><pre><span class="pt">bool</span> g_bOutTime = <span class="pc">false</span>;</pre></td></tr>
    <tr><td class="line_number">59</td><td id="59"><pre>ST_AnalyzeMe *g_pAnzInfo;  <span class="c">/* AnalyzeMe??????? */</span></pre></td><td class="line_number">60</td><td id="60"><pre>ST_AnalyzeMe *g_pAnzInfo;  <span class="c">/* AnalyzeMe??????? */</span></pre></td></tr>
    <tr><td class="line_number">60</td><td id="60"><pre><span class="c">/**</span></pre></td><td class="line_number">61</td><td id="61"><pre><span class="c">/**</span></pre></td></tr>
    <tr><td class="line_number">61</td><td id="61"><pre><span class="c">*  main</span></pre></td><td class="line_number">62</td><td id="62"><pre><span class="c">*  main</span></pre></td></tr>
    <tr><td class="line_number">62</td><td id="62"><pre><span class="c">*  AnalyzeMe????C?????</span></pre></td><td class="line_number">63</td><td id="63"><pre><span class="c">*  AnalyzeMe????C?????</span></pre></td></tr>
    <tr><td class="line_number">63</td><td id="63"><pre><span class="c">*  @param  argc ?R?}???h???C??????????</span></pre></td><td class="line_number">64</td><td id="64"><pre><span class="c">*  @param  argc ?R?}???h???C??????????</span></pre></td></tr>
    <tr><td class="line_number">64</td><td id="64"><pre><span class="c">*  @param  argv ?R?}???h???C?????????z??</span></pre></td><td class="line_number">65</td><td id="65"><pre><span class="c">*  @param  argv ?R?}???h???C?????????z??</span></pre></td></tr>
    <tr><td class="line_number">65</td><td id="65"><pre><span class="c">*  @return</span></pre></td><td class="line_number">66</td><td id="66"><pre><span class="c">*  @return</span></pre></td></tr>
    <tr><td class="line_number">66</td><td id="66"><pre><span class="c">           ANZ_SUCCESS:?????I??</span></pre></td><td class="line_number">67</td><td id="67"><pre><span class="c">           ANZ_SUCCESS:?????I??</span></pre></td></tr>
    <tr><td class="line_number">67</td><td id="67"><pre><span class="c">           ANZ_ERROR  :????I??</span></pre></td><td class="line_number">68</td><td id="68"><pre><span class="c">           ANZ_ERROR  :????I??</span></pre></td></tr>
    <tr><td class="line_number">68</td><td id="68"><pre><span class="c">*  @author zhang-gh</span></pre></td><td class="line_number">69</td><td id="69"><pre><span class="c">*  @author zhang-gh</span></pre></td></tr>
    <tr><td class="line_number">69</td><td id="69"><pre><span class="c">*/</span></pre></td><td class="line_number">70</td><td id="70"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">70</td><td id="70"><pre><span class="pt">int</span> main(<span class="pt">int</span> argc,<span class="pt">char</span> * argv[])</pre></td><td class="line_number">71</td><td id="71"><pre><span class="pt">int</span> main(<span class="pt">int</span> argc,<span class="pt">char</span> * argv[])</pre></td></tr>
    <tr><td class="line_number">71</td><td id="71"><pre>{</pre></td><td class="line_number">72</td><td id="72"><pre>{</pre></td></tr>
    <tr><td class="line_number">72</td><td id="72"><pre>    <span class="c">/* ????? */</span></pre></td><td class="line_number">73</td><td id="73"><pre>    <span class="c">/* ????? */</span></pre></td></tr>
    <tr><td class="line_number">73</td><td id="73"><pre>    <span class="pt">int</span>  the_iRet;                 <span class="c">/* Return?l */</span></pre></td><td class="line_number">74</td><td id="74"><pre>    <span class="pt">int</span>  the_iRet;                 <span class="c">/* Return?l */</span></pre></td></tr>
    <tr><td class="line_number">74</td><td id="74"><pre>    <span class="pt">int</span>  the_iMeasureType;         <span class="c">/* ?v??????F????v???A?????v?? */</span></pre></td><td class="line_number">75</td><td id="75"><pre>    <span class="pt">int</span>  the_iMeasureType;         <span class="c">/* ?v??????F????v???A?????v?? */</span></pre></td></tr>
    <tr><td class="line_number">75</td><td id="75"><pre>    <span class="pt">char</span> **the_pMeasureItem;       <span class="c">/* ?R?}???h???C???????????v????????X?g */</span></pre></td><td class="line_number">76</td><td id="76"><pre>    <span class="pt">char</span> **the_pMeasureItem;       <span class="c">/* ?R?}???h???C???????????v????????X?g */</span></pre></td></tr>
    <tr><td class="line_number">76</td><td id="76"><pre>    <span class="pt">char</span> the_szCurMetrics[MAX_METRICS] = {<span class="i">0</span>};<span class="c">/* ?J?????g?v??Metrics */</span></pre></td><td class="line_number">77</td><td id="77"><pre>    <span class="pt">char</span> the_szCurMetrics[MAX_METRICS] = {<span class="i">0</span>};<span class="c">/* ?J?????g?v??Metrics */</span></pre></td></tr>
    <tr><td class="line_number">77</td><td id="77"><pre>    ST_Option    *the_pCmdOption;    <span class="c">/* ?R?}???h???C??????????Option???? */</span></pre></td><td class="line_number">78</td><td id="78"><pre>    ST_Option    *the_pCmdOption;    <span class="c">/* ?R?}???h???C??????????Option???? */</span></pre></td></tr>
    <tr><td class="line_number">78</td><td id="78"><pre>    ST_AnalyzeMe *the_pAnzInfo;      <span class="c">/* AnalyzeMe??????? */</span></pre></td><td class="line_number">79</td><td id="79"><pre>    ST_AnalyzeMe *the_pAnzInfo;      <span class="c">/* AnalyzeMe??????? */</span></pre></td></tr>
    <tr><td class="line_number">79</td><td id="79"><pre>    ST_Option    *the_pOption;       <span class="c">/* AnalyzeMe???????????Option???? */</span></pre></td><td class="line_number">80</td><td id="80"><pre>    ST_Option    *the_pOption;       <span class="c">/* AnalyzeMe???????????Option???? */</span></pre></td></tr>
    <tr><td class="line_number">80</td><td id="80"><pre>    <span class="pt">char</span> *the_pTrace = <span class="pc">NULL</span>;</pre></td><td class="line_number">81</td><td id="81"><pre>    <span class="pt">char</span> *the_pTrace = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">81</td><td id="81"><pre>    <span class="r">struct</span> timeb the_st ;</pre></td><td class="line_number">82</td><td id="82"><pre>    <span class="r">struct</span> timeb the_st ;</pre></td></tr>
    <tr><td class="line_number">82</td><td id="82"><pre>    <span class="r">struct</span> timeb the_ed ;</pre></td><td class="line_number">83</td><td id="83"><pre>    <span class="r">struct</span> timeb the_ed ;</pre></td></tr>
    <tr><td class="line_number">83</td><td id="83"><pre></pre></td><td class="line_number">84</td><td id="84"><pre></pre></td></tr>
    <tr><td class="line_number">84</td><td id="84"><pre>    <span class="c">/* ????????? */</span></pre></td><td class="line_number">85</td><td id="85"><pre>    <span class="c">/* ????????? */</span></pre></td></tr>
    <tr><td class="line_number">85</td><td id="85"><pre>    the_st.time = <span class="i">0</span>;</pre></td><td class="line_number">86</td><td id="86"><pre>    the_st.time = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">86</td><td id="86"><pre>    the_st.millitm = <span class="i">0</span>;</pre></td><td class="line_number">87</td><td id="87"><pre>    the_st.millitm = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">87</td><td id="87"><pre>    the_ed.time = <span class="i">0</span>;</pre></td><td class="line_number">88</td><td id="88"><pre>    the_ed.time = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">88</td><td id="88"><pre>    the_ed.millitm = <span class="i">0</span>;</pre></td><td class="line_number">89</td><td id="89"><pre>    the_ed.millitm = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">89</td><td id="89"><pre>    the_pAnzInfo = <span class="pc">NULL</span>;</pre></td><td class="line_number">90</td><td id="90"><pre>    the_pAnzInfo = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">90</td><td id="90"><pre>    the_pCmdOption = <span class="pc">NULL</span>;</pre></td><td class="line_number">91</td><td id="91"><pre>    the_pCmdOption = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">91</td><td id="91"><pre>    the_iRet = ANZ_SUCCESS;</pre></td><td class="line_number">92</td><td id="92"><pre>    the_iRet = ANZ_SUCCESS;</pre></td></tr>
    <tr><td class="line_number">92</td><td id="92"><pre>    the_pMeasureItem = <span class="pc">NULL</span>;</pre></td><td class="line_number">93</td><td id="93"><pre>    the_pMeasureItem = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">93</td><td id="93"><pre></pre></td><td class="line_number">94</td><td id="94"><pre></pre></td></tr>
    <tr><td class="line_number">94</td><td id="94" class="added_line"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">95</td><td id="95" class="added_line"><pre>    InitMemMan();</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">96</td><td id="96" class="added_line"><pre><span class="pp">#endif</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">97</td><td id="97" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">98</td><td id="98"><pre>    <span class="c">/* ?V?O?i???n???h????o?^?@*/</span></pre></td><td class="line_number">95</td><td id="95"><pre>    <span class="c">/* ?V?O?i???n???h????o?^?@*/</span></pre></td></tr>
    <tr><td class="line_number">99</td><td id="99"><pre>    SetSignal() ;</pre></td><td class="line_number">96</td><td id="96"><pre>    SetSignal() ;</pre></td></tr>
    <tr><td class="line_number">100</td><td id="100"><pre></pre></td><td class="line_number">97</td><td id="97"><pre></pre></td></tr>
    <tr><td class="line_number">101</td><td id="101"><pre>    the_pTrace = getenv(<span class="s"><span class="dl">&quot;</span><span class="k">AnzTrace</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">98</td><td id="98"><pre>    the_pTrace = getenv(<span class="s"><span class="dl">&quot;</span><span class="k">AnzTrace</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">102</td><td id="102"><pre>    <span class="r">if</span>(the_pTrace != <span class="pc">NULL</span>) {</pre></td><td class="line_number">99</td><td id="99"><pre>    <span class="r">if</span>(the_pTrace != <span class="pc">NULL</span>) {</pre></td></tr>
    <tr><td class="line_number">103</td><td id="103"><pre>        <span class="r">if</span>(strcmp(the_pTrace,<span class="s"><span class="dl">&quot;</span><span class="k">ON</span><span class="dl">&quot;</span></span>) == <span class="i">0</span> ) {</pre></td><td class="line_number">100</td><td id="100"><pre>        <span class="r">if</span>(strcmp(the_pTrace,<span class="s"><span class="dl">&quot;</span><span class="k">ON</span><span class="dl">&quot;</span></span>) == <span class="i">0</span> ) {</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9827"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9828"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(103),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10800"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10801"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(100),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td></tr>
    <tr><td class="line_number">104</td><td id="104"><pre>            g_bTrace = <span class="pc">true</span>;</pre></td><td class="line_number">101</td><td id="101"><pre>            g_bTrace = <span class="pc">true</span>;</pre></td></tr>
    <tr><td class="line_number">105</td><td id="105"><pre>        }</pre></td><td class="line_number">102</td><td id="102"><pre>        }</pre></td></tr>
    <tr><td class="line_number">106</td><td id="106"><pre>    }</pre></td><td class="line_number">103</td><td id="103"><pre>    }</pre></td></tr>
    <tr><td class="line_number">107</td><td id="107"><pre>    <span class="c">/* TraceFile??LogFile???J?? */</span></pre></td><td class="line_number">104</td><td id="104"><pre>    <span class="c">/* TraceFile??LogFile???J?? */</span></pre></td></tr>
    <tr><td class="line_number">108</td><td id="108" class="added_line"><pre>        <span class="c">/*</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">109</td><td id="109"><pre><span class="c">    g_fpTraceFile = fopen(TRACEFILE,&quot;w&quot;);</span></pre></td><td class="line_number">105</td><td id="105"><pre>    g_fpTraceFile = fopen(TRACEFILE,<span class="s"><span class="dl">&quot;</span><span class="k">w</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">110</td><td id="110"><pre><span class="c">    if(g_fpTraceFile == NULL){</span></pre></td><td class="line_number">106</td><td id="106"><pre>    <span class="r">if</span>(g_fpTraceFile == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">111</td><td id="111"><pre><span class="c">        printf(&quot;Create trace file failed!\n&quot;);</span></pre></td><td class="line_number">107</td><td id="107"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">Create trace file failed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">112</td><td id="112"><pre><span class="c">    }</span></pre></td><td class="line_number">108</td><td id="108"><pre>    }</pre></td></tr>
    <tr><td class="line_number">113</td><td id="113" class="added_line"><pre><span class="c">        */</span></pre></td><td class="line_number">109</td><td id="109" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number">114</td><td id="114"><pre>    g_fpLogFile = fopen(APPLOGFILE,<span class="s"><span class="dl">&quot;</span><span class="k">w</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">110</td><td id="110"><pre>    g_fpLogFile = fopen(APPLOGFILE,<span class="s"><span class="dl">&quot;</span><span class="k">w</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">115</td><td id="115"><pre>    <span class="r">if</span>(g_fpLogFile == <span class="pc">NULL</span>){</pre></td><td class="line_number">111</td><td id="111"><pre>    <span class="r">if</span>(g_fpLogFile == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">116</td><td id="116"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">Create log file failed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);   <span class="c">/* */</span></pre></td><td class="line_number">112</td><td id="112"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">Create log file failed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);   <span class="c">/* */</span></pre></td></tr>
    <tr><td class="line_number">117</td><td id="117"><pre>    }</pre></td><td class="line_number">113</td><td id="113"><pre>    }</pre></td></tr>
    <tr><td class="line_number">118</td><td id="118"><pre></pre></td><td class="line_number">114</td><td id="114"><pre></pre></td></tr>
    <tr><td class="line_number">119</td><td id="119"><pre>    <span class="c">/* AnalyzeMe???????????????m?? */</span></pre></td><td class="line_number">115</td><td id="115"><pre>    <span class="c">/* AnalyzeMe???????????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">120</td><td id="120"><pre>    AnzMalloc(the_pAnzInfo,ST_AnalyzeMe*,<span class="r">sizeof</span>(ST_AnalyzeMe));</pre></td><td class="line_number">116</td><td id="116"><pre>    AnzMalloc(the_pAnzInfo,ST_AnalyzeMe*,<span class="r">sizeof</span>(ST_AnalyzeMe));</pre></td></tr>
    <tr><td class="line_number">121</td><td id="121"><pre>    <span class="r">if</span>(the_pAnzInfo == <span class="pc">NULL</span>){</pre></td><td class="line_number">117</td><td id="117"><pre>    <span class="r">if</span>(the_pAnzInfo == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">122</td><td id="122"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td><td class="line_number">118</td><td id="118"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td></tr>
    <tr><td class="line_number">123</td><td id="123" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">119</td><td id="119" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">124</td><td id="124"><pre>    }</pre></td><td class="line_number">120</td><td id="120"><pre>    }</pre></td></tr>
    <tr><td class="line_number">125</td><td id="125"><pre>    memset(the_pAnzInfo,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_AnalyzeMe));</pre></td><td class="line_number">121</td><td id="121"><pre>    memset(the_pAnzInfo,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_AnalyzeMe));</pre></td></tr>
    <tr><td class="line_number">126</td><td id="126"><pre>    g_pAnzInfo = the_pAnzInfo;</pre></td><td class="line_number">122</td><td id="122"><pre>    g_pAnzInfo = the_pAnzInfo;</pre></td></tr>
    <tr><td class="line_number">127</td><td id="127"><pre>    <span class="c">/* AnalyzeMe???????????Option????????????m?? */</span></pre></td><td class="line_number">123</td><td id="123"><pre>    <span class="c">/* AnalyzeMe???????????Option????????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">128</td><td id="128"><pre>    AnzMalloc(the_pAnzInfo-&gt;m_option,ST_Option*,<span class="r">sizeof</span>(ST_Option));</pre></td><td class="line_number">124</td><td id="124"><pre>    AnzMalloc(the_pAnzInfo-&gt;m_option,ST_Option*,<span class="r">sizeof</span>(ST_Option));</pre></td></tr>
    <tr><td class="line_number">129</td><td id="129"><pre>    <span class="r">if</span>(the_pAnzInfo-&gt;m_option == <span class="pc">NULL</span>){</pre></td><td class="line_number">125</td><td id="125"><pre>    <span class="r">if</span>(the_pAnzInfo-&gt;m_option == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">130</td><td id="130"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td><td class="line_number">126</td><td id="126"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td></tr>
    <tr><td class="line_number">131</td><td id="131" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">127</td><td id="127" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">132</td><td id="132"><pre>    }</pre></td><td class="line_number">128</td><td id="128"><pre>    }</pre></td></tr>
    <tr><td class="line_number">133</td><td id="133"><pre>    memset(the_pAnzInfo-&gt;m_option,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_Option));</pre></td><td class="line_number">129</td><td id="129"><pre>    memset(the_pAnzInfo-&gt;m_option,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_Option));</pre></td></tr>
    <tr><td class="line_number">134</td><td id="134"><pre></pre></td><td class="line_number">130</td><td id="130"><pre></pre></td></tr>
    <tr><td class="line_number">135</td><td id="135"><pre>    <span class="c">/* ?v?????Item????????m?? */</span></pre></td><td class="line_number">131</td><td id="131"><pre>    <span class="c">/* ?v?????Item????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">136</td><td id="136"><pre></pre></td><td class="line_number">132</td><td id="132"><pre></pre></td></tr>
    <tr><td class="line_number">137</td><td id="137"><pre>    AnzMalloc(the_pMeasureItem,<span class="pt">char</span>**,argc * <span class="r">sizeof</span>(<span class="pt">char</span> *));</pre></td><td class="line_number">133</td><td id="133"><pre>    AnzMalloc(the_pMeasureItem,<span class="pt">char</span>**,argc * <span class="r">sizeof</span>(<span class="pt">char</span> *));</pre></td></tr>
    <tr><td class="line_number">138</td><td id="138"><pre>    <span class="r">if</span>(the_pMeasureItem == <span class="pc">NULL</span>) {</pre></td><td class="line_number">134</td><td id="134"><pre>    <span class="r">if</span>(the_pMeasureItem == <span class="pc">NULL</span>) {</pre></td></tr>
    <tr><td class="line_number">139</td><td id="139"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td><td class="line_number">135</td><td id="135"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td></tr>
    <tr><td class="line_number">140</td><td id="140" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">136</td><td id="136" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">141</td><td id="141"><pre>    }</pre></td><td class="line_number">137</td><td id="137"><pre>    }</pre></td></tr>
    <tr><td class="line_number">142</td><td id="142"><pre>    memset(the_pMeasureItem,<span class="i">0</span>,argc * <span class="r">sizeof</span>(<span class="pt">char</span> *));</pre></td><td class="line_number">138</td><td id="138"><pre>    memset(the_pMeasureItem,<span class="i">0</span>,argc * <span class="r">sizeof</span>(<span class="pt">char</span> *));</pre></td></tr>
    <tr><td class="line_number">143</td><td id="143"><pre></pre></td><td class="line_number">139</td><td id="139"><pre></pre></td></tr>
    <tr><td class="line_number">144</td><td id="144"><pre>the_pOption = the_pAnzInfo-&gt;m_option;</pre></td><td class="line_number">140</td><td id="140"><pre>the_pOption = the_pAnzInfo-&gt;m_option;</pre></td></tr>
    <tr><td class="line_number">145</td><td id="145"><pre><span class="c">/* ?f?t?H???g?l??Option????the_pCmdOption??????? */</span></pre></td><td class="line_number">141</td><td id="141"><pre><span class="c">/* ?f?t?H???g?l??Option????the_pCmdOption??????? */</span></pre></td></tr>
    <tr><td class="line_number">146</td><td id="146"><pre>the_pOption-&gt;m_version = OFF;</pre></td><td class="line_number">142</td><td id="142"><pre>the_pOption-&gt;m_version = OFF;</pre></td></tr>
    <tr><td class="line_number">147</td><td id="147"><pre>the_pOption-&gt;m_help = OFF;</pre></td><td class="line_number">143</td><td id="143"><pre>the_pOption-&gt;m_help = OFF;</pre></td></tr>
    <tr><td class="line_number">148</td><td id="148"><pre>the_pOption-&gt;m_verbos = OFF;</pre></td><td class="line_number">144</td><td id="144"><pre>the_pOption-&gt;m_verbos = OFF;</pre></td></tr>
    <tr><td class="line_number">149</td><td id="149"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">145</td><td id="145"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">150</td><td id="150"><pre>strcpy(the_pOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">./</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">146</td><td id="146"><pre>strcpy(the_pOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">./</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">151</td><td id="151"><pre><span class="pp">#else</span></pre></td><td class="line_number">147</td><td id="147"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">152</td><td id="152"><pre>strcpy(the_pOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">.</span><span class="ch">\\</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">148</td><td id="148"><pre>strcpy(the_pOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">.</span><span class="ch">\\</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">153</td><td id="153"><pre><span class="pp">#endif</span></pre></td><td class="line_number">149</td><td id="149"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">154</td><td id="154"><pre>strcpy(the_pOption-&gt;m_filePattern,<span class="s"><span class="dl">&quot;</span><span class="k">**/*.[CcHh]</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">150</td><td id="150"><pre>strcpy(the_pOption-&gt;m_filePattern,<span class="s"><span class="dl">&quot;</span><span class="k">**/*.[CcHh]</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">155</td><td id="155"><pre>strcpy(the_pOption-&gt;m_symbolFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">151</td><td id="151"><pre>strcpy(the_pOption-&gt;m_symbolFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">156</td><td id="156"><pre>strcpy(the_pOption-&gt;m_optionFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">152</td><td id="152"><pre>strcpy(the_pOption-&gt;m_optionFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">157</td><td id="157"><pre>the_pOption-&gt;m_fileLOC = ON;</pre></td><td class="line_number">153</td><td id="153"><pre>the_pOption-&gt;m_fileLOC = ON;</pre></td></tr>
    <tr><td class="line_number">158</td><td id="158"><pre>the_pOption-&gt;m_redundancy = OFF;</pre></td><td class="line_number">154</td><td id="154"><pre>the_pOption-&gt;m_redundancy = OFF;</pre></td></tr>
    <tr><td class="line_number">159</td><td id="159"><pre>the_pOption-&gt;m_funcNum = OFF;</pre></td><td class="line_number">155</td><td id="155"><pre>the_pOption-&gt;m_funcNum = OFF;</pre></td></tr>
    <tr><td class="line_number">160</td><td id="160"><pre>the_pOption-&gt;m_eloc = OFF;</pre></td><td class="line_number">156</td><td id="156"><pre>the_pOption-&gt;m_eloc = OFF;</pre></td></tr>
    <tr><td class="line_number">161</td><td id="161"><pre>the_pOption-&gt;m_mccabe = OFF;</pre></td><td class="line_number">157</td><td id="157"><pre>the_pOption-&gt;m_mccabe = OFF;</pre></td></tr>
    <tr><td class="line_number">162</td><td id="162"><pre>the_pOption-&gt;m_similar = OFF;</pre></td><td class="line_number">158</td><td id="158"><pre>the_pOption-&gt;m_similar = OFF;</pre></td></tr>
    <tr><td class="line_number">163</td><td id="163"><pre>the_pOption-&gt;m_trend = OFF;</pre></td><td class="line_number">159</td><td id="159"><pre>the_pOption-&gt;m_trend = OFF;</pre></td></tr>
    <tr><td class="line_number">164</td><td id="164"><pre>the_pOption-&gt;m_funcTrend = OFF;</pre></td><td class="line_number">160</td><td id="160"><pre>the_pOption-&gt;m_funcTrend = OFF;</pre></td></tr>
    <tr><td class="line_number">165</td><td id="165"><pre>the_pOption-&gt;m_symThresh = <span class="i">70</span>;</pre></td><td class="line_number">161</td><td id="161"><pre>the_pOption-&gt;m_symThresh = <span class="i">70</span>;</pre></td></tr>
    <tr><td class="line_number">166</td><td id="166"><pre>the_pOption-&gt;m_minThresh = <span class="i">2</span>;</pre></td><td class="line_number">162</td><td id="162"><pre>the_pOption-&gt;m_minThresh = <span class="i">2</span>;</pre></td></tr>
    <tr><td class="line_number">167</td><td id="167"><pre></pre></td><td class="line_number">163</td><td id="163"><pre></pre></td></tr>
    <tr><td class="line_number">168</td><td id="168"><pre><span class="c">/* ?R?}???h???C??????????Option????????????m?? */</span></pre></td><td class="line_number">164</td><td id="164"><pre><span class="c">/* ?R?}???h???C??????????Option????????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">169</td><td id="169"><pre>    AnzMalloc(the_pCmdOption,ST_Option*,<span class="r">sizeof</span>(ST_Option));</pre></td><td class="line_number">165</td><td id="165"><pre>    AnzMalloc(the_pCmdOption,ST_Option*,<span class="r">sizeof</span>(ST_Option));</pre></td></tr>
    <tr><td class="line_number">170</td><td id="170"><pre>    <span class="r">if</span>(the_pCmdOption == <span class="pc">NULL</span>){</pre></td><td class="line_number">166</td><td id="166"><pre>    <span class="r">if</span>(the_pCmdOption == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">171</td><td id="171"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td><td class="line_number">167</td><td id="167"><pre>        the_iRet = ANZ_ERR_MEMORY_FAILED;</pre></td></tr>
    <tr><td class="line_number">172</td><td id="172" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">168</td><td id="168" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">173</td><td id="173"><pre>    }</pre></td><td class="line_number">169</td><td id="169"><pre>    }</pre></td></tr>
    <tr><td class="line_number">174</td><td id="174"><pre>    memset(the_pCmdOption,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_Option));</pre></td><td class="line_number">170</td><td id="170"><pre>    memset(the_pCmdOption,<span class="ch">'\0'</span>,<span class="r">sizeof</span>(ST_Option));</pre></td></tr>
    <tr><td class="line_number">175</td><td id="175"><pre>    <span class="c">/* ?f?t?H???g?l??Option????the_pCmdOption??????? */</span></pre></td><td class="line_number">171</td><td id="171"><pre>    <span class="c">/* ?f?t?H???g?l??Option????the_pCmdOption??????? */</span></pre></td></tr>
    <tr><td class="line_number">176</td><td id="176"><pre>    the_pCmdOption-&gt;m_version = OFF;</pre></td><td class="line_number">172</td><td id="172"><pre>    the_pCmdOption-&gt;m_version = OFF;</pre></td></tr>
    <tr><td class="line_number">177</td><td id="177"><pre>    the_pCmdOption-&gt;m_help = OFF;</pre></td><td class="line_number">173</td><td id="173"><pre>    the_pCmdOption-&gt;m_help = OFF;</pre></td></tr>
    <tr><td class="line_number">178</td><td id="178"><pre>    the_pCmdOption-&gt;m_verbos = OFF;</pre></td><td class="line_number">174</td><td id="174"><pre>    the_pCmdOption-&gt;m_verbos = OFF;</pre></td></tr>
    <tr><td class="line_number">179</td><td id="179"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">175</td><td id="175"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">180</td><td id="180"><pre>    strcpy(the_pCmdOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">./</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">176</td><td id="176"><pre>    strcpy(the_pCmdOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">./</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">181</td><td id="181"><pre><span class="pp">#else</span></pre></td><td class="line_number">177</td><td id="177"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">182</td><td id="182"><pre>    strcpy(the_pCmdOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">.</span><span class="ch">\\</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">178</td><td id="178"><pre>    strcpy(the_pCmdOption-&gt;m_prefix,<span class="s"><span class="dl">&quot;</span><span class="k">.</span><span class="ch">\\</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">183</td><td id="183"><pre><span class="pp">#endif</span></pre></td><td class="line_number">179</td><td id="179"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">184</td><td id="184"><pre>    strcpy(the_pCmdOption-&gt;m_filePattern,<span class="s"><span class="dl">&quot;</span><span class="k">**/*.[CcHh]</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">180</td><td id="180"><pre>    strcpy(the_pCmdOption-&gt;m_filePattern,<span class="s"><span class="dl">&quot;</span><span class="k">**/*.[CcHh]</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">185</td><td id="185"><pre>    strcpy(the_pCmdOption-&gt;m_symbolFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">181</td><td id="181"><pre>    strcpy(the_pCmdOption-&gt;m_symbolFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">186</td><td id="186"><pre>    strcpy(the_pCmdOption-&gt;m_optionFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">182</td><td id="182"><pre>    strcpy(the_pCmdOption-&gt;m_optionFile,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">187</td><td id="187"><pre>    the_pCmdOption-&gt;m_fileLOC = ON;</pre></td><td class="line_number">183</td><td id="183"><pre>    the_pCmdOption-&gt;m_fileLOC = ON;</pre></td></tr>
    <tr><td class="line_number">188</td><td id="188"><pre>    the_pCmdOption-&gt;m_redundancy = OFF;</pre></td><td class="line_number">184</td><td id="184"><pre>    the_pCmdOption-&gt;m_redundancy = OFF;</pre></td></tr>
    <tr><td class="line_number">189</td><td id="189"><pre>    the_pCmdOption-&gt;m_funcNum = OFF;</pre></td><td class="line_number">185</td><td id="185"><pre>    the_pCmdOption-&gt;m_funcNum = OFF;</pre></td></tr>
    <tr><td class="line_number">190</td><td id="190"><pre>    the_pCmdOption-&gt;m_eloc = OFF;</pre></td><td class="line_number">186</td><td id="186"><pre>    the_pCmdOption-&gt;m_eloc = OFF;</pre></td></tr>
    <tr><td class="line_number">191</td><td id="191"><pre>    the_pCmdOption-&gt;m_mccabe = OFF;</pre></td><td class="line_number">187</td><td id="187"><pre>    the_pCmdOption-&gt;m_mccabe = OFF;</pre></td></tr>
    <tr><td class="line_number">192</td><td id="192"><pre>    the_pCmdOption-&gt;m_similar = OFF;</pre></td><td class="line_number">188</td><td id="188"><pre>    the_pCmdOption-&gt;m_similar = OFF;</pre></td></tr>
    <tr><td class="line_number">193</td><td id="193"><pre>    the_pCmdOption-&gt;m_trend = OFF;</pre></td><td class="line_number">189</td><td id="189"><pre>    the_pCmdOption-&gt;m_trend = OFF;</pre></td></tr>
    <tr><td class="line_number">194</td><td id="194"><pre>    the_pCmdOption-&gt;m_funcTrend = OFF;</pre></td><td class="line_number">190</td><td id="190"><pre>    the_pCmdOption-&gt;m_funcTrend = OFF;</pre></td></tr>
    <tr><td class="line_number">195</td><td id="195"><pre>    the_pCmdOption-&gt;m_symThresh = <span class="i">70</span>;</pre></td><td class="line_number">191</td><td id="191"><pre>    the_pCmdOption-&gt;m_symThresh = <span class="i">70</span>;</pre></td></tr>
    <tr><td class="line_number">196</td><td id="196"><pre>    the_pCmdOption-&gt;m_minThresh = <span class="i">2</span>;</pre></td><td class="line_number">192</td><td id="192"><pre>    the_pCmdOption-&gt;m_minThresh = <span class="i">2</span>;</pre></td></tr>
    <tr><td class="line_number">197</td><td id="197"><pre></pre></td><td class="line_number">193</td><td id="193"><pre></pre></td></tr>
    <tr><td class="line_number">198</td><td id="198"><pre>    <span class="c">/* ?R?}???h???C??????????? */</span></pre></td><td class="line_number">194</td><td id="194"><pre>    <span class="c">/* ?R?}???h???C??????????? */</span></pre></td></tr>
    <tr><td class="line_number">199</td><td id="199"><pre>    the_iRet = AnalyzeCmdLine(argc,argv,the_pCmdOption,the_pMeasureItem);</pre></td><td class="line_number">195</td><td id="195"><pre>    the_iRet = AnalyzeCmdLine(argc,argv,the_pCmdOption,the_pMeasureItem);</pre></td></tr>
    <tr><td class="line_number">200</td><td id="200"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">196</td><td id="196"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">201</td><td id="201" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">197</td><td id="197" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">202</td><td id="202"><pre>    }</pre></td><td class="line_number">198</td><td id="198"><pre>    }</pre></td></tr>
    <tr><td class="line_number">203</td><td id="203"><pre>    <span class="r">if</span>(g_bOutTime) {</pre></td><td class="line_number">199</td><td id="199"><pre>    <span class="r">if</span>(g_bOutTime) {</pre></td></tr>
    <tr><td class="line_number">204</td><td id="204"><pre>        ftime(&amp;the_st);</pre></td><td class="line_number">200</td><td id="200"><pre>        ftime(&amp;the_st);</pre></td></tr>
    <tr><td class="line_number">205</td><td id="205"><pre>    }</pre></td><td class="line_number">201</td><td id="201"><pre>    }</pre></td></tr>
    <tr><td class="line_number">206</td><td id="206"><pre></pre></td><td class="line_number">202</td><td id="202"><pre></pre></td></tr>
    <tr><td class="line_number">207</td><td id="207"><pre>    <span class="c">/* Option??????????? */</span></pre></td><td class="line_number">203</td><td id="203"><pre>    <span class="c">/* Option??????????? */</span></pre></td></tr>
    <tr><td class="line_number">208</td><td id="208"><pre>    the_iRet = SetOption(the_pAnzInfo,the_pCmdOption);</pre></td><td class="line_number">204</td><td id="204"><pre>    the_iRet = SetOption(the_pAnzInfo,the_pCmdOption);</pre></td></tr>
    <tr><td class="line_number">209</td><td id="209"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">205</td><td id="205"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">210</td><td id="210" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">206</td><td id="206" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">211</td><td id="211"><pre>    }</pre></td><td class="line_number">207</td><td id="207"><pre>    }</pre></td></tr>
    <tr><td class="line_number">212</td><td id="212"><pre>    <span class="c">/* ?v?????????????? */</span></pre></td><td class="line_number">208</td><td id="208"><pre>    <span class="c">/* ?v?????????????? */</span></pre></td></tr>
    <tr><td class="line_number">213</td><td id="213"><pre>    the_iRet = GetMeasureType(the_pOption,&amp;the_iMeasureType);</pre></td><td class="line_number">209</td><td id="209"><pre>    the_iRet = GetMeasureType(the_pOption,&amp;the_iMeasureType);</pre></td></tr>
    <tr><td class="line_number">214</td><td id="214"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">210</td><td id="210"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">215</td><td id="215" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">211</td><td id="211" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">216</td><td id="216"><pre>    }</pre></td><td class="line_number">212</td><td id="212"><pre>    }</pre></td></tr>
    <tr><td class="line_number">217</td><td id="217"><pre>    <span class="c">/* ?R?}???h???C??????????Option??????????????? */</span></pre></td><td class="line_number">213</td><td id="213"><pre>    <span class="c">/* ?R?}???h???C??????????Option??????????????? */</span></pre></td></tr>
    <tr><td class="line_number">218</td><td id="218"><pre>    <span class="r">if</span>(the_pCmdOption != <span class="pc">NULL</span>){</pre></td><td class="line_number">214</td><td id="214"><pre>    <span class="r">if</span>(the_pCmdOption != <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">219</td><td id="219"><pre>        free(the_pCmdOption);</pre></td><td class="line_number">215</td><td id="215"><pre>        free(the_pCmdOption);</pre></td></tr>
    <tr><td class="line_number">220</td><td id="220"><pre>        the_pCmdOption = <span class="pc">NULL</span>;</pre></td><td class="line_number">216</td><td id="216"><pre>        the_pCmdOption = <span class="pc">NULL</span>;</pre></td></tr>
    <tr><td class="line_number">221</td><td id="221"><pre>    }</pre></td><td class="line_number">217</td><td id="217"><pre>    }</pre></td></tr>
    <tr><td class="line_number">222</td><td id="222"><pre>    <span class="c">/* ?v???????`?F?b?N???? */</span></pre></td><td class="line_number">218</td><td id="218"><pre>    <span class="c">/* ?v???????`?F?b?N???? */</span></pre></td></tr>
    <tr><td class="line_number">223</td><td id="223"><pre>    the_iRet = CheckMeasureItem(the_pMeasureItem,the_iMeasureType);</pre></td><td class="line_number">219</td><td id="219"><pre>    the_iRet = CheckMeasureItem(the_pMeasureItem,the_iMeasureType);</pre></td></tr>
    <tr><td class="line_number">224</td><td id="224"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">220</td><td id="220"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">225</td><td id="225" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">221</td><td id="221" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">226</td><td id="226"><pre>    }</pre></td><td class="line_number">222</td><td id="222"><pre>    }</pre></td></tr>
    <tr><td class="line_number">227</td><td id="227" class="added_line"><pre>    <span class="c">/* ?G???[File???J?? */</span></pre></td><td class="line_number">223</td><td id="223" class="deleted_line"><pre>   </pre></td></tr>
    <tr><td class="line_number">228</td><td id="228" class="added_line"><pre>    the_iRet = OpenErrorFile(the_pOption);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">229</td><td id="229" class="added_line"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">230</td><td id="230" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">231</td><td id="231" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">232</td><td id="232"><pre>    <span class="c">/* ????????t?@?C????? */</span></pre></td><td class="line_number">224</td><td id="224"><pre>    <span class="c">/* ????????t?@?C????? */</span></pre></td></tr>
    <tr><td class="line_number">233</td><td id="233" class="added_line"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_TREND_MEASURE) {</pre></td><td class="line_number">225</td><td id="225" class="deleted_line"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_TREND_MEASURE)    {</pre></td></tr>
    <tr><td class="line_number">234</td><td id="234"><pre>        <span class="pt">int</span> the_iType = -<span class="i">1</span>;</pre></td><td class="line_number">226</td><td id="226"><pre>        <span class="pt">int</span> the_iType = -<span class="i">1</span>;</pre></td></tr>
    <tr><td class="line_number">235</td><td id="235"><pre>        <span class="pt">int</span> the_pPos = -<span class="i">1</span>;</pre></td><td class="line_number">227</td><td id="227"><pre>        <span class="pt">int</span> the_pPos = -<span class="i">1</span>;</pre></td></tr>
    <tr><td class="line_number">236</td><td id="236"><pre>        isDirOrFile(*the_pMeasureItem,&amp;the_iType);</pre></td><td class="line_number">228</td><td id="228"><pre>        isDirOrFile(*the_pMeasureItem,&amp;the_iType);</pre></td></tr>
    <tr><td class="line_number">237</td><td id="237"><pre>        <span class="r">if</span>(the_iType == ANZ_FILE) {</pre></td><td class="line_number">229</td><td id="229"><pre>        <span class="r">if</span>(the_iType == ANZ_FILE) {</pre></td></tr>
    <tr><td class="line_number">238</td><td id="238"><pre>            g_bTrendFile = <span class="pc">true</span>;</pre></td><td class="line_number">230</td><td id="230"><pre>            g_bTrendFile = <span class="pc">true</span>;</pre></td></tr>
    <tr><td class="line_number">239</td><td id="239"><pre>            <span class="c">/* the_pMeasureItme??Path?????????? */</span></pre></td><td class="line_number">231</td><td id="231"><pre>            <span class="c">/* the_pMeasureItme??Path?????????? */</span></pre></td></tr>
    <tr><td class="line_number">240</td><td id="240"><pre>            GetPathPos(*the_pMeasureItem,&amp;the_pPos);</pre></td><td class="line_number">232</td><td id="232"><pre>            GetPathPos(*the_pMeasureItem,&amp;the_pPos);</pre></td></tr>
    <tr><td class="line_number">241</td><td id="241"><pre>            g_szNVPath[the_pPos] = <span class="ch">'\0'</span>;</pre></td><td class="line_number">233</td><td id="233"><pre>            g_szNVPath[the_pPos] = <span class="ch">'\0'</span>;</pre></td></tr>
    <tr><td class="line_number">242</td><td id="242"><pre>            <span class="r">if</span>(the_pPos &gt; <span class="i">0</span>) {</pre></td><td class="line_number">234</td><td id="234"><pre>            <span class="r">if</span>(the_pPos &gt; <span class="i">0</span>) {</pre></td></tr>
    <tr><td class="line_number">243</td><td id="243"><pre>                *the_pMeasureItem = *the_pMeasureItem + the_pPos + <span class="i">1</span>;</pre></td><td class="line_number">235</td><td id="235"><pre>                *the_pMeasureItem = *the_pMeasureItem + the_pPos + <span class="i">1</span>;</pre></td></tr>
    <tr><td class="line_number">244</td><td id="244"><pre>            }</pre></td><td class="line_number">236</td><td id="236"><pre>            }</pre></td></tr>
    <tr><td class="line_number">245</td><td id="245"><pre></pre></td><td class="line_number">237</td><td id="237"><pre></pre></td></tr>
    <tr><td class="line_number">246</td><td id="246"><pre>            GetPathPos(*(the_pMeasureItem + <span class="i">1</span>),&amp;the_pPos);</pre></td><td class="line_number">238</td><td id="238"><pre>            GetPathPos(*(the_pMeasureItem + <span class="i">1</span>),&amp;the_pPos);</pre></td></tr>
    <tr><td class="line_number">247</td><td id="247"><pre>            g_szOVPath[the_pPos] = <span class="ch">'\0'</span>;</pre></td><td class="line_number">239</td><td id="239"><pre>            g_szOVPath[the_pPos] = <span class="ch">'\0'</span>;</pre></td></tr>
    <tr><td class="line_number">248</td><td id="248"><pre>            <span class="r">if</span>(the_pPos &gt; <span class="i">0</span>) {</pre></td><td class="line_number">240</td><td id="240"><pre>            <span class="r">if</span>(the_pPos &gt; <span class="i">0</span>) {</pre></td></tr>
    <tr><td class="line_number">249</td><td id="249"><pre>                *(the_pMeasureItem + <span class="i">1</span>) =*(the_pMeasureItem + <span class="i">1</span>) + the_pPos + <span class="i">1</span>;</pre></td><td class="line_number">241</td><td id="241"><pre>                *(the_pMeasureItem + <span class="i">1</span>) =*(the_pMeasureItem + <span class="i">1</span>) + the_pPos + <span class="i">1</span>;</pre></td></tr>
    <tr><td class="line_number">250</td><td id="250"><pre>            }</pre></td><td class="line_number">242</td><td id="242"><pre>            }</pre></td></tr>
    <tr><td class="line_number">251</td><td id="251"><pre>            <span class="c">/* g_szNVPath?Ag_szOVPath??????p?X???X???? */</span></pre></td><td class="line_number">243</td><td id="243"><pre>            <span class="c">/* g_szNVPath?Ag_szOVPath??????p?X???X???? */</span></pre></td></tr>
    <tr><td class="line_number">252</td><td id="252"><pre>            the_iRet = ResetTrendPath(g_szNVPath);</pre></td><td class="line_number">244</td><td id="244"><pre>            the_iRet = ResetTrendPath(g_szNVPath);</pre></td></tr>
    <tr><td class="line_number">253</td><td id="253"><pre>            the_iRet = ResetTrendPath(g_szOVPath);</pre></td><td class="line_number">245</td><td id="245"><pre>            the_iRet = ResetTrendPath(g_szOVPath);</pre></td></tr>
    <tr><td class="line_number">254</td><td id="254"><pre>            <span class="r">if</span>(the_iRet != ANZ_SUCCESS) {</pre></td><td class="line_number">246</td><td id="246"><pre>            <span class="r">if</span>(the_iRet != ANZ_SUCCESS) {</pre></td></tr>
    <tr><td class="line_number">255</td><td id="255" class="added_line"><pre>                <span class="r">goto</span> EXIT;</pre></td><td class="line_number">247</td><td id="247" class="deleted_line"><pre>                <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">256</td><td id="256"><pre>            }</pre></td><td class="line_number">248</td><td id="248"><pre>            }</pre></td></tr>
    <tr><td class="line_number">257</td><td id="257"><pre>        }</pre></td><td class="line_number">249</td><td id="249"><pre>        }</pre></td></tr>
    <tr><td class="line_number">258</td><td id="258"><pre>    }</pre></td><td class="line_number">250</td><td id="250"><pre>    }</pre></td></tr>
    <tr><td class="line_number">259</td><td id="259"><pre>    <span class="c">/* ?v?????File??List???????? */</span></pre></td><td class="line_number">251</td><td id="251"><pre>    <span class="c">/* ?v?????File??List???????? */</span></pre></td></tr>
    <tr><td class="line_number">260</td><td id="260"><pre>    the_iRet = MakeMeasureFilesList(the_pAnzInfo,(<span class="di">const</span> <span class="pt">char</span>**)the_pMeasureItem);</pre></td><td class="line_number">252</td><td id="252"><pre>    the_iRet = MakeMeasureFilesList(the_pAnzInfo,(<span class="di">const</span> <span class="pt">char</span>**)the_pMeasureItem);</pre></td></tr>
    <tr><td class="line_number">261</td><td id="261"><pre>    <span class="r">if</span>(the_iRet == ANZ_NO_MEASURE_FILES){</pre></td><td class="line_number">253</td><td id="253"><pre>    <span class="r">if</span>(the_iRet == ANZ_NO_MEASURE_FILES){</pre></td></tr>
    <tr><td class="line_number">262</td><td id="262"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_NO_FILES);</pre></td><td class="line_number">254</td><td id="254"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_NO_FILES);</pre></td></tr>
    <tr><td class="line_number">263</td><td id="263"><pre>    }</pre></td><td class="line_number">255</td><td id="255"><pre>    }</pre></td></tr>
    <tr><td class="line_number">264</td><td id="264"><pre>    <span class="r">if</span>(the_iRet == ANZ_ERR_MEMORY_FAILED){</pre></td><td class="line_number">256</td><td id="256"><pre>    <span class="r">if</span>(the_iRet == ANZ_ERR_MEMORY_FAILED){</pre></td></tr>
    <tr><td class="line_number">265</td><td id="265"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MOMORY_FAILED);</pre></td><td class="line_number">257</td><td id="257"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MOMORY_FAILED);</pre></td></tr>
    <tr><td class="line_number">266</td><td id="266"><pre>    }</pre></td><td class="line_number">258</td><td id="258"><pre>    }</pre></td></tr>
    <tr><td class="line_number">267</td><td id="267"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">259</td><td id="259"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">268</td><td id="268" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">260</td><td id="260" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">269</td><td id="269"><pre>    }</pre></td><td class="line_number">261</td><td id="261"><pre>    }</pre></td></tr>
    <tr><td class="line_number">270</td><td id="270"><pre>    <span class="c">/* ?o?R???????????? */</span></pre></td><td class="line_number">262</td><td id="262"><pre>    <span class="c">/* ?o?R???????????? */</span></pre></td></tr>
    <tr><td class="line_number">271</td><td id="271"><pre>    <span class="c">/* FileLOC?v??Option???w?????? */</span></pre></td><td class="line_number">263</td><td id="263"><pre>    <span class="c">/* FileLOC?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">272</td><td id="272"><pre>    <span class="r">if</span>(the_pOption-&gt;m_fileLOC == ON){</pre></td><td class="line_number">264</td><td id="264"><pre>    <span class="r">if</span>(the_pOption-&gt;m_fileLOC == ON){</pre></td></tr>
    <tr><td class="line_number">273</td><td id="273"><pre>        strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileLOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">265</td><td id="265"><pre>        strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileLOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">274</td><td id="274"><pre>    }</pre></td><td class="line_number">266</td><td id="266"><pre>    }</pre></td></tr>
    <tr><td class="line_number">275</td><td id="275"><pre>    <span class="c">/* File???x?v??Option???w?????? */</span></pre></td><td class="line_number">267</td><td id="267"><pre>    <span class="c">/* File???x?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">276</td><td id="276"><pre>    <span class="r">if</span>(the_pOption-&gt;m_redundancy == ON){</pre></td><td class="line_number">268</td><td id="268"><pre>    <span class="r">if</span>(the_pOption-&gt;m_redundancy == ON){</pre></td></tr>
    <tr><td class="line_number">277</td><td id="277"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">269</td><td id="269"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9829"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9830"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(277),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10802"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10803"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(269),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td></tr>
    <tr><td class="line_number">278</td><td id="278"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">270</td><td id="270"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">279</td><td id="279"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">271</td><td id="271"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">280</td><td id="280"><pre>        }</pre></td><td class="line_number">272</td><td id="272"><pre>        }</pre></td></tr>
    <tr><td class="line_number">281</td><td id="281"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">273</td><td id="273"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number">282</td><td id="282"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">274</td><td id="274"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">283</td><td id="283"><pre>        }</pre></td><td class="line_number">275</td><td id="275"><pre>        }</pre></td></tr>
    <tr><td class="line_number">284</td><td id="284"><pre>    }</pre></td><td class="line_number">276</td><td id="276"><pre>    }</pre></td></tr>
    <tr><td class="line_number">285</td><td id="285"><pre>    <span class="c">/* ??????v??Option???w?????? */</span></pre></td><td class="line_number">277</td><td id="277"><pre>    <span class="c">/* ??????v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">286</td><td id="286"><pre>    <span class="r">if</span>(the_pOption-&gt;m_funcNum){</pre></td><td class="line_number">278</td><td id="278"><pre>    <span class="r">if</span>(the_pOption-&gt;m_funcNum){</pre></td></tr>
    <tr><td class="line_number">287</td><td id="287"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">279</td><td id="279"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9831"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9832"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(287),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10804"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10805"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(279),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td></tr>
    <tr><td class="line_number">288</td><td id="288"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">280</td><td id="280"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">289</td><td id="289"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">281</td><td id="281"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">290</td><td id="290"><pre>        }</pre></td><td class="line_number">282</td><td id="282"><pre>        }</pre></td></tr>
    <tr><td class="line_number">291</td><td id="291"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">283</td><td id="283"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number">292</td><td id="292"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">284</td><td id="284"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">293</td><td id="293"><pre>        }</pre></td><td class="line_number">285</td><td id="285"><pre>        }</pre></td></tr>
    <tr><td class="line_number">294</td><td id="294"><pre>    }</pre></td><td class="line_number">286</td><td id="286"><pre>    }</pre></td></tr>
    <tr><td class="line_number">295</td><td id="295"><pre>    <span class="c">/* ELOC?v??Option???w?????? */</span></pre></td><td class="line_number">287</td><td id="287"><pre>    <span class="c">/* ELOC?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">296</td><td id="296"><pre>    <span class="r">if</span>(the_pOption-&gt;m_eloc){</pre></td><td class="line_number">288</td><td id="288"><pre>    <span class="r">if</span>(the_pOption-&gt;m_eloc){</pre></td></tr>
    <tr><td class="line_number">297</td><td id="297"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">289</td><td id="289"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9833"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9834"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(297),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10806"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10807"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(289),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td></tr>
    <tr><td class="line_number">298</td><td id="298"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">290</td><td id="290"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">299</td><td id="299"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">???ELOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">291</td><td id="291"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">???ELOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">300</td><td id="300"><pre>        }</pre></td><td class="line_number">292</td><td id="292"><pre>        }</pre></td></tr>
    <tr><td class="line_number">301</td><td id="301"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">293</td><td id="293"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number">302</td><td id="302"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">???ELOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">294</td><td id="294"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">???ELOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">303</td><td id="303"><pre>        }</pre></td><td class="line_number">295</td><td id="295"><pre>        }</pre></td></tr>
    <tr><td class="line_number">304</td><td id="304"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">296</td><td id="296"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9835"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9836"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(304),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10808"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10809"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(296),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td></tr>
    <tr><td class="line_number">305</td><td id="305"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">297</td><td id="297"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">306</td><td id="306"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileELOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">298</td><td id="298"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileELOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">307</td><td id="307"><pre>        }</pre></td><td class="line_number">299</td><td id="299"><pre>        }</pre></td></tr>
    <tr><td class="line_number">308</td><td id="308"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">300</td><td id="300"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number">309</td><td id="309"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileELOC</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">301</td><td id="301"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">FileELOC</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">310</td><td id="310"><pre>        }</pre></td><td class="line_number">302</td><td id="302"><pre>        }</pre></td></tr>
    <tr><td class="line_number">311</td><td id="311"><pre>    }</pre></td><td class="line_number">303</td><td id="303"><pre>    }</pre></td></tr>
    <tr><td class="line_number">312</td><td id="312"><pre></pre></td><td class="line_number">304</td><td id="304"><pre></pre></td></tr>
    <tr><td class="line_number">313</td><td id="313"><pre>    <span class="c">/* ???G?x?v??Option???w?????? */</span></pre></td><td class="line_number">305</td><td id="305"><pre>    <span class="c">/* ???G?x?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">314</td><td id="314"><pre>    <span class="r">if</span>(the_pOption-&gt;m_redundancy){</pre></td><td class="line_number">306</td><td id="306"><pre>    <span class="r">if</span>(the_pOption-&gt;m_redundancy){</pre></td></tr>
    <tr><td class="line_number">315</td><td id="315"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">307</td><td id="307"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9837"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9838"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10810"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10811"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(307),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td></tr>
    <tr><td class="line_number">316</td><td id="316"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">308</td><td id="308"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">317</td><td id="317"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">McCabe????G?x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">309</td><td id="309"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">McCabe????G?x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">318</td><td id="318"><pre>        }</pre></td><td class="line_number">310</td><td id="310"><pre>        }</pre></td></tr>
    <tr><td class="line_number">319</td><td id="319"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">311</td><td id="311"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number">320</td><td id="320"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">McCabe????G?x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">312</td><td id="312"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">McCabe????G?x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">321</td><td id="321"><pre>        }</pre></td><td class="line_number">313</td><td id="313"><pre>        }</pre></td></tr>
    <tr><td class="line_number">322</td><td id="322"><pre></pre></td><td class="line_number">314</td><td id="314"><pre></pre></td></tr>
    <tr><td class="line_number">323</td><td id="323"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">315</td><td id="315"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9839"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9840"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(323),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10812"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10813"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(315),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td></tr>
    <tr><td class="line_number">324</td><td id="324"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">316</td><td id="316"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">325</td><td id="325"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???G?x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">317</td><td id="317"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???G?x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">326</td><td id="326"><pre>        }</pre></td><td class="line_number">318</td><td id="318"><pre>        }</pre></td></tr>
    <tr><td class="line_number">327</td><td id="327"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">319</td><td id="319"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number">328</td><td id="328"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???G?x</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">320</td><td id="320"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File???G?x</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">329</td><td id="329"><pre>        }</pre></td><td class="line_number">321</td><td id="321"><pre>        }</pre></td></tr>
    <tr><td class="line_number">330</td><td id="330"><pre>    }</pre></td><td class="line_number">322</td><td id="322"><pre>    }</pre></td></tr>
    <tr><td class="line_number">331</td><td id="331"><pre></pre></td><td class="line_number">323</td><td id="323"><pre></pre></td></tr>
    <tr><td class="line_number">332</td><td id="332"><pre>    <span class="c">/* ?????(1)?v??Option???w?????? */</span></pre></td><td class="line_number">324</td><td id="324"><pre>    <span class="c">/* ?????(1)?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">333</td><td id="333"><pre>    <span class="r">if</span>(the_pOption-&gt;m_trend){</pre></td><td class="line_number">325</td><td id="325"><pre>    <span class="r">if</span>(the_pOption-&gt;m_trend){</pre></td></tr>
    <tr><td class="line_number">334</td><td id="334"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">326</td><td id="326"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9841"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9842"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(334),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10814"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10815"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(326),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td></tr>
    <tr><td class="line_number">335</td><td id="335"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">327</td><td id="327"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">336</td><td id="336"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(1)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">328</td><td id="328"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(1)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">337</td><td id="337"><pre>        }</pre></td><td class="line_number">329</td><td id="329"><pre>        }</pre></td></tr>
    <tr><td class="line_number">338</td><td id="338"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">330</td><td id="330"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number">339</td><td id="339"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(1)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">331</td><td id="331"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(1)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">340</td><td id="340"><pre>        }</pre></td><td class="line_number">332</td><td id="332"><pre>        }</pre></td></tr>
    <tr><td class="line_number">341</td><td id="341"><pre>        strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(1)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">333</td><td id="333"><pre>        strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(1)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">342</td><td id="342"><pre>    }</pre></td><td class="line_number">334</td><td id="334"><pre>    }</pre></td></tr>
    <tr><td class="line_number">343</td><td id="343"><pre></pre></td><td class="line_number">335</td><td id="335"><pre></pre></td></tr>
    <tr><td class="line_number">344</td><td id="344"><pre>    <span class="c">/* ?????(2)?v??Option???w?????? */</span></pre></td><td class="line_number">336</td><td id="336"><pre>    <span class="c">/* ?????(2)?v??Option???w?????? */</span></pre></td></tr>
    <tr><td class="line_number">345</td><td id="345"><pre>    <span class="r">if</span>(the_pOption-&gt;m_funcTrend){</pre></td><td class="line_number">337</td><td id="337"><pre>    <span class="r">if</span>(the_pOption-&gt;m_funcTrend){</pre></td></tr>
    <tr><td class="line_number">346</td><td id="346"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">338</td><td id="338"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9843"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9844"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(346),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10816"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10817"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(338),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td></tr>
    <tr><td class="line_number">347</td><td id="347"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">339</td><td id="339"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">348</td><td id="348"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">????????</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">340</td><td id="340"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">????????</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">349</td><td id="349"><pre>        }</pre></td><td class="line_number">341</td><td id="341"><pre>        }</pre></td></tr>
    <tr><td class="line_number">350</td><td id="350"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">342</td><td id="342"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number">351</td><td id="351"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">????????</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">343</td><td id="343"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">????????</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">352</td><td id="352"><pre>        }</pre></td><td class="line_number">344</td><td id="344"><pre>        }</pre></td></tr>
    <tr><td class="line_number">353</td><td id="353"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">345</td><td id="345"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9845"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9846"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(353),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10818"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10819"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(345),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td></tr>
    <tr><td class="line_number">354</td><td id="354"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">346</td><td id="346"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">355</td><td id="355"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????X??</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">347</td><td id="347"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????X??</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">356</td><td id="356"><pre>        }</pre></td><td class="line_number">348</td><td id="348"><pre>        }</pre></td></tr>
    <tr><td class="line_number">357</td><td id="357"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">349</td><td id="349"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number">358</td><td id="358"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????X??</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">350</td><td id="350"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?????X??</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">359</td><td id="359"><pre>        }</pre></td><td class="line_number">351</td><td id="351"><pre>        }</pre></td></tr>
    <tr><td class="line_number">360</td><td id="360"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">352</td><td id="352"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9847"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9848"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(360),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10820"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10821"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(352),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td></tr>
    <tr><td class="line_number">361</td><td id="361"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">353</td><td id="353"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">362</td><td id="362"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(2)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">354</td><td id="354"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(2)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">363</td><td id="363"><pre>        }</pre></td><td class="line_number">355</td><td id="355"><pre>        }</pre></td></tr>
    <tr><td class="line_number">364</td><td id="364"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">356</td><td id="356"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number">365</td><td id="365"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(2)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">357</td><td id="357"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File?????(2)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">366</td><td id="366"><pre>        }</pre></td><td class="line_number">358</td><td id="358"><pre>        }</pre></td></tr>
    <tr><td class="line_number">367</td><td id="367"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td><td class="line_number">359</td><td id="359"><pre>        <span class="r">if</span>(strcmp(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>){</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9849"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9850"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(367),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10822"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10823"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(359),(12) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td></tr>
    <tr><td class="line_number">368</td><td id="368"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">360</td><td id="360"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">?A</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">369</td><td id="369"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(2)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">361</td><td id="361"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(2)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">370</td><td id="370"><pre>        }</pre></td><td class="line_number">362</td><td id="362"><pre>        }</pre></td></tr>
    <tr><td class="line_number">371</td><td id="371"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">363</td><td id="363"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number">372</td><td id="372"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(2)</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">364</td><td id="364"><pre>            strcat(the_szCurMetrics,<span class="s"><span class="dl">&quot;</span><span class="k">File??X??(2)</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">373</td><td id="373"><pre>        }</pre></td><td class="line_number">365</td><td id="365"><pre>        }</pre></td></tr>
    <tr><td class="line_number">374</td><td id="374"><pre></pre></td><td class="line_number">366</td><td id="366"><pre></pre></td></tr>
    <tr><td class="line_number">375</td><td id="375"><pre>    }</pre></td><td class="line_number">367</td><td id="367"><pre>    }</pre></td></tr>
    <tr><td class="line_number">376</td><td id="376"><pre>    <span class="c">/* ?v???J?n,?o?R???????o????? */</span></pre></td><td class="line_number">368</td><td id="368"><pre>    <span class="c">/* ?v???J?n,?o?R???????o????? */</span></pre></td></tr>
    <tr><td class="line_number">377</td><td id="377"><pre>    <span class="r">if</span>(the_pOption-&gt;m_verbos == ON ){</pre></td><td class="line_number">369</td><td id="369"><pre>    <span class="r">if</span>(the_pOption-&gt;m_verbos == ON ){</pre></td></tr>
    <tr><td class="line_number">378</td><td id="378"><pre>        <span class="c">/* ?o?R???????o????? */</span></pre></td><td class="line_number">370</td><td id="370"><pre>        <span class="c">/* ?o?R???????o????? */</span></pre></td></tr>
    <tr><td class="line_number">379</td><td id="379"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_START);</pre></td><td class="line_number">371</td><td id="371"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_START);</pre></td></tr>
    <tr><td class="line_number">380</td><td id="380"><pre>    }</pre></td><td class="line_number">372</td><td id="372"><pre>    }</pre></td></tr>
    <tr><td class="line_number">381</td><td id="381"><pre></pre></td><td class="line_number">373</td><td id="373"><pre></pre></td></tr>
    <tr><td class="line_number">382</td><td id="382"><pre>    <span class="c">/* ?v???O?A?K?v??v??????File???J?? */</span></pre></td><td class="line_number">374</td><td id="374"><pre>    <span class="c">/* ?v???O?A?K?v??v??????File???J?? */</span></pre></td></tr>
    <tr><td class="line_number">383</td><td id="383"><pre>    the_iRet = OpenResultFile(the_pOption);</pre></td><td class="line_number">375</td><td id="375"><pre>    the_iRet = OpenResultFile(the_pOption);</pre></td></tr>
    <tr><td class="line_number">384</td><td id="384"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">376</td><td id="376"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">385</td><td id="385" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">377</td><td id="377" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">386</td><td id="386"><pre>    }</pre></td><td class="line_number">378</td><td id="378"><pre>    }</pre></td></tr>
    <tr><td class="line_number">387</td><td id="387"><pre></pre></td><td class="line_number">379</td><td id="379"><pre></pre></td></tr>
    <tr><td class="line_number">388</td><td id="388"><pre>    <span class="c">/* ?v???O?A?K?v??v?????????????O???[?o?????????????m?? */</span></pre></td><td class="line_number">380</td><td id="380"><pre>    <span class="c">/* ?v???O?A?K?v??v?????????????O???[?o?????????????m?? */</span></pre></td></tr>
    <tr><td class="line_number">389</td><td id="389"><pre>    the_iRet = AllocResultMemory(the_pOption);</pre></td><td class="line_number">381</td><td id="381"><pre>    the_iRet = AllocResultMemory(the_pOption);</pre></td></tr>
    <tr><td class="line_number">390</td><td id="390"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">382</td><td id="382"><pre>    <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">391</td><td id="391"><pre>        FreeResultMemory(the_pOption);</pre></td><td class="line_number">383</td><td id="383"><pre>        FreeResultMemory(the_pOption);</pre></td></tr>
    <tr><td class="line_number">392</td><td id="392" class="added_line"><pre>        <span class="r">goto</span> EXIT;</pre></td><td class="line_number">384</td><td id="384" class="deleted_line"><pre>        <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">393</td><td id="393"><pre>    }</pre></td><td class="line_number">385</td><td id="385"><pre>    }</pre></td></tr>
    <tr><td class="line_number">394</td><td id="394"><pre></pre></td><td class="line_number">386</td><td id="386"><pre></pre></td></tr>
    <tr><td class="line_number">395</td><td id="395"><pre>    <span class="c">/* ?v?????? */</span></pre></td><td class="line_number">387</td><td id="387"><pre>    <span class="c">/* ?v?????? */</span></pre></td></tr>
    <tr><td class="line_number">396</td><td id="396"><pre>    <span class="c">/* ????v?? */</span></pre></td><td class="line_number">388</td><td id="388"><pre>    <span class="c">/* ????v?? */</span></pre></td></tr>
    <tr><td class="line_number">397</td><td id="397"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_COMMON_MEASURE){</pre></td><td class="line_number">389</td><td id="389"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_COMMON_MEASURE){</pre></td></tr>
    <tr><td class="line_number">398</td><td id="398"><pre>        <span class="c">/* ????v??File??????}?N?????????? */</span></pre></td><td class="line_number">390</td><td id="390"><pre>        <span class="c">/* ????v??File??????}?N?????????? */</span></pre></td></tr>
    <tr><td class="line_number">399</td><td id="399"><pre>        the_iRet = GetProcMacro(the_pAnzInfo,ANZ_COMMON_MEASURE);</pre></td><td class="line_number">391</td><td id="391"><pre>        the_iRet = GetProcMacro(the_pAnzInfo,ANZ_COMMON_MEASURE);</pre></td></tr>
    <tr><td class="line_number">400</td><td id="400"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">392</td><td id="392"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">401</td><td id="401" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">393</td><td id="393" class="deleted_line"><pre>            <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">402</td><td id="402"><pre>        }</pre></td><td class="line_number">394</td><td id="394"><pre>        }</pre></td></tr>
    <tr><td class="line_number">403</td><td id="403"><pre>        the_iRet = CommomMeasure(the_pAnzInfo);</pre></td><td class="line_number">395</td><td id="395"><pre>        the_iRet = CommomMeasure(the_pAnzInfo);</pre></td></tr>
    <tr><td class="line_number">404</td><td id="404"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">396</td><td id="396"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">405</td><td id="405"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_ERROR);</pre></td><td class="line_number">397</td><td id="397"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_ERROR);</pre></td></tr>
    <tr><td class="line_number">406</td><td id="406" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">398</td><td id="398" class="deleted_line"><pre>            <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">407</td><td id="407"><pre>        }</pre></td><td class="line_number">399</td><td id="399"><pre>        }</pre></td></tr>
    <tr><td class="line_number">408</td><td id="408"><pre>    }</pre></td><td class="line_number">400</td><td id="400"><pre>    }</pre></td></tr>
    <tr><td class="line_number">409</td><td id="409"><pre>    <span class="c">/* ?????v?? */</span></pre></td><td class="line_number">401</td><td id="401"><pre>    <span class="c">/* ?????v?? */</span></pre></td></tr>
    <tr><td class="line_number">410</td><td id="410"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_TREND_MEASURE){</pre></td><td class="line_number">402</td><td id="402"><pre>    <span class="r">if</span>(the_iMeasureType == ANZ_TREND_MEASURE){</pre></td></tr>
    <tr><td class="line_number">411</td><td id="411"><pre>        <span class="c">/* ?????v??File??????}?N?????????? */</span></pre></td><td class="line_number">403</td><td id="403"><pre>        <span class="c">/* ?????v??File??????}?N?????????? */</span></pre></td></tr>
    <tr><td class="line_number">412</td><td id="412"><pre>        the_iRet = GetProcMacro(the_pAnzInfo,ANZ_TREND_MEASURE);</pre></td><td class="line_number">404</td><td id="404"><pre>        the_iRet = GetProcMacro(the_pAnzInfo,ANZ_TREND_MEASURE);</pre></td></tr>
    <tr><td class="line_number">413</td><td id="413"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">405</td><td id="405"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">414</td><td id="414" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">406</td><td id="406" class="deleted_line"><pre>            <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">415</td><td id="415"><pre>        }</pre></td><td class="line_number">407</td><td id="407"><pre>        }</pre></td></tr>
    <tr><td class="line_number">416</td><td id="416"><pre>        the_iRet = TrendMeasure(the_pAnzInfo);</pre></td><td class="line_number">408</td><td id="408"><pre>        the_iRet = TrendMeasure(the_pAnzInfo);</pre></td></tr>
    <tr><td class="line_number">417</td><td id="417"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td><td class="line_number">409</td><td id="409"><pre>        <span class="r">if</span>(the_iRet != ANZ_SUCCESS){</pre></td></tr>
    <tr><td class="line_number">418</td><td id="418"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_ERROR);</pre></td><td class="line_number">410</td><td id="410"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_ERROR);</pre></td></tr>
    <tr><td class="line_number">419</td><td id="419" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">411</td><td id="411" class="deleted_line"><pre>            <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">420</td><td id="420"><pre>        }</pre></td><td class="line_number">412</td><td id="412"><pre>        }</pre></td></tr>
    <tr><td class="line_number">421</td><td id="421"><pre>    }</pre></td><td class="line_number">413</td><td id="413"><pre>    }</pre></td></tr>
    <tr><td class="line_number">422</td><td id="422"><pre></pre></td><td class="line_number">414</td><td id="414"><pre></pre></td></tr>
    <tr><td class="line_number">423</td><td id="423"><pre>    <span class="c">/* ?o?R???????o????? */</span></pre></td><td class="line_number">415</td><td id="415"><pre>    <span class="c">/* ?o?R???????o????? */</span></pre></td></tr>
    <tr><td class="line_number">424</td><td id="424"><pre>    <span class="r">if</span>(the_pOption-&gt;m_verbos == ON){</pre></td><td class="line_number">416</td><td id="416"><pre>    <span class="r">if</span>(the_pOption-&gt;m_verbos == ON){</pre></td></tr>
    <tr><td class="line_number">425</td><td id="425"><pre>        <span class="r">if</span>(the_pAnzInfo-&gt;m_err == <span class="pc">NULL</span>){</pre></td><td class="line_number">417</td><td id="417"><pre>        <span class="r">if</span>(the_pAnzInfo-&gt;m_err == <span class="pc">NULL</span>){</pre></td></tr>
    <tr><td class="line_number">426</td><td id="426"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_NORMAL);</pre></td><td class="line_number">418</td><td id="418"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_szCurMetrics,MSG_METRIC_NORMAL);</pre></td></tr>
    <tr><td class="line_number">427</td><td id="427"><pre>        }</pre></td><td class="line_number">419</td><td id="419"><pre>        }</pre></td></tr>
    <tr><td class="line_number">428</td><td id="428"><pre>        <span class="r">else</span>{</pre></td><td class="line_number">420</td><td id="420"><pre>        <span class="r">else</span>{</pre></td></tr>
    <tr><td class="line_number">429</td><td id="429"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MEASURE_FILE_ERROR,the_szCurMetrics,MSG_METRIC_NORMAL);</pre></td><td class="line_number">421</td><td id="421"><pre>            printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s%s%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MEASURE_FILE_ERROR,the_szCurMetrics,MSG_METRIC_NORMAL);</pre></td></tr>
    <tr><td class="line_number">430</td><td id="430"><pre>        }</pre></td><td class="line_number">422</td><td id="422"><pre>        }</pre></td></tr>
    <tr><td class="line_number">431</td><td id="431"><pre>    }</pre></td><td class="line_number">423</td><td id="423"><pre>    }</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">424</td><td id="424" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">425</td><td id="425" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">426</td><td id="426" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">427</td><td id="427" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">428</td><td id="428" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number">432</td><td id="432"><pre></pre></td><td class="line_number">429</td><td id="429"><pre></pre></td></tr>
    <tr><td class="line_number">433</td><td id="433" class="added_line"><pre><span class="la">EXIT:</span>;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">434</td><td id="434" class="added_line"><pre>    <span class="c">/* Error File???o????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">435</td><td id="435" class="added_line"><pre>    the_iRet = OutErrorFile(the_pAnzInfo-&gt;m_err);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="added_warning" id="line_number"></td><td><div class="added_warning" id="warning_9851"><a href="/result/view_message/1/2/7?message_id=505&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(435),(29) :Msg(7:0505) [U] Dereferencing pointer value that is apparently NULL.</b></a></div></td><td class="added_warning" id="line_number"></td><td class="added_warning"></td></tr>
    <tr><td class="line_number">436</td><td id="436" class="added_line"><pre>    <span class="r">if</span>(the_iRet == ANZ_ERR_MEMORY_FAILED){</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">437</td><td id="437" class="added_line"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,MSG_MOMORY_FAILED);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">438</td><td id="438" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">439</td><td id="439" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">440</td><td id="440" class="added_line"><pre>    <span class="c">/* ???????????????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">441</td><td id="441" class="added_line"><pre>    <span class="c">/* ?R?}???h???C??????????Option??????????????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">442</td><td id="442" class="added_line"><pre>    <span class="r">if</span>(the_pCmdOption != <span class="pc">NULL</span>){</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">443</td><td id="443" class="added_line"><pre>        free(the_pCmdOption);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">444</td><td id="444" class="added_line"><pre>        the_pCmdOption = <span class="pc">NULL</span>;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">445</td><td id="445" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">446</td><td id="446" class="added_line"><pre>    <span class="c">/* ?v?????List?????????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">447</td><td id="447" class="added_line"><pre>    <span class="r">if</span>(the_pMeasureItem != <span class="pc">NULL</span>) {</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">448</td><td id="448" class="added_line"><pre>        free(the_pMeasureItem);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">449</td><td id="449" class="added_line"><pre>        the_pMeasureItem = <span class="pc">NULL</span>;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">450</td><td id="450" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">451</td><td id="451" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">452</td><td id="452" class="added_line"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">453</td><td id="453" class="added_line"><pre>    FreeAllResourc(the_pAnzInfo);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">454</td><td id="454" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">455</td><td id="455" class="added_line"><pre>    <span class="r">if</span>(g_bOutTime) {</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">456</td><td id="456" class="added_line"><pre>        ftime(&amp;the_ed);</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">457</td><td id="457" class="added_line"><pre>        printf(<span class="s"><span class="dl">&quot;</span><span class="ch">\n</span><span class="k">Total times:%ld ms</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,(the_ed.time - the_st.time) * <span class="i">1000</span> + (the_ed.millitm - the_st.millitm));</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">458</td><td id="458" class="added_line"><pre>    }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">459</td><td id="459" class="added_line"><pre></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">460</td><td id="460" class="added_line"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">461</td><td id="461" class="added_line"><pre>  CheckAllMem();</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">462</td><td id="462" class="added_line"><pre>  DestoryMemMan();</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">463</td><td id="463" class="added_line"><pre><span class="pp">#endif</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">464</td><td id="464"><pre>    <span class="r">return</span> the_iRet;</pre></td><td class="line_number">430</td><td id="430"><pre>    <span class="r">return</span> the_iRet;</pre></td></tr>
    <tr><td class="line_number">465</td><td id="465"><pre>}</pre></td><td class="line_number">431</td><td id="431"><pre>}</pre></td></tr>
    <tr><td class="line_number">466</td><td id="466"><pre><span class="c">/**</span></pre></td><td class="line_number">432</td><td id="432"><pre><span class="c">/**</span></pre></td></tr>
    <tr><td class="line_number">467</td><td id="467"><pre><span class="c">*  AbortAnalyzeMe</span></pre></td><td class="line_number">433</td><td id="433"><pre><span class="c">*  AbortAnalyzeMe</span></pre></td></tr>
    <tr><td class="line_number">468</td><td id="468"><pre><span class="c">*  AnalyzeMe Abort</span></pre></td><td class="line_number">434</td><td id="434"><pre><span class="c">*  AnalyzeMe Abort</span></pre></td></tr>
    <tr><td class="line_number">469</td><td id="469"><pre><span class="c">*  @param</span></pre></td><td class="line_number">435</td><td id="435"><pre><span class="c">*  @param</span></pre></td></tr>
    <tr><td class="line_number">470</td><td id="470"><pre><span class="c">*  @return</span></pre></td><td class="line_number">436</td><td id="436"><pre><span class="c">*  @return</span></pre></td></tr>
    <tr><td class="line_number">471</td><td id="471"><pre><span class="c">*          ???</span></pre></td><td class="line_number">437</td><td id="437"><pre><span class="c">*          ???</span></pre></td></tr>
    <tr><td class="line_number">472</td><td id="472"><pre><span class="c">*  @author zhang-gh</span></pre></td><td class="line_number">438</td><td id="438"><pre><span class="c">*  @author zhang-gh</span></pre></td></tr>
    <tr><td class="line_number">473</td><td id="473"><pre><span class="c">*/</span></pre></td><td class="line_number">439</td><td id="439"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">474</td><td id="474"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">440</td><td id="440"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">475</td><td id="475" class="added_line"><pre><span class="di">void</span> AbortAnalyzeMe( <span class="pt">int</span> sig, <span class="pt">int</span> code, <span class="di">void</span> *scp , <span class="pt">char</span> *addr )</pre></td><td class="line_number">441</td><td id="441" class="deleted_line"><pre><span class="di">void</span> AbortAnalyzeMe(<span class="pt">int</span> sig, <span class="pt">int</span> code, <span class="di">void</span> *scp , <span class="pt">char</span> *addr)</pre></td></tr>
    <tr><td class="line_number">476</td><td id="476"><pre><span class="pp">#else</span></pre></td><td class="line_number">442</td><td id="442"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">477</td><td id="477"><pre>BOOL WINAPI AbortAnalyzeMe(DWORD dwCtrlType)</pre></td><td class="line_number">443</td><td id="443"><pre>BOOL WINAPI AbortAnalyzeMe(DWORD dwCtrlType)</pre></td></tr>
    <tr><td class="line_number">478</td><td id="478"><pre><span class="pp">#endif</span></pre></td><td class="line_number">444</td><td id="444"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">479</td><td id="479"><pre>{</pre></td><td class="line_number">445</td><td id="445"><pre>{</pre></td></tr>
    <tr><td class="line_number">480</td><td id="480"><pre>    <span class="pt">char</span> the_errMsg[<span class="i">128</span>]; <span class="c">/* ?G???[???b?Z?[?W */</span></pre></td><td class="line_number">446</td><td id="446"><pre>    <span class="pt">char</span> the_errMsg[<span class="i">128</span>]; <span class="c">/* ?G???[???b?Z?[?W */</span></pre></td></tr>
    <tr><td class="line_number">481</td><td id="481"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">447</td><td id="447"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">482</td><td id="482"><pre>    <span class="c">/*  Signal */</span></pre></td><td class="line_number">448</td><td id="448"><pre>    <span class="c">/*  Signal */</span></pre></td></tr>
    <tr><td class="line_number">483</td><td id="483"><pre>    <span class="r">switch</span>(sig){</pre></td><td class="line_number">449</td><td id="449"><pre>    <span class="r">switch</span>(sig){</pre></td></tr>
    <tr><td class="line_number">484</td><td id="484"><pre>    <span class="r">case</span> SIGINT :</pre></td><td class="line_number">450</td><td id="450"><pre>    <span class="r">case</span> SIGINT :</pre></td></tr>
    <tr><td class="line_number">485</td><td id="485"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGINT(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">451</td><td id="451"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGINT(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">486</td><td id="486"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">452</td><td id="452"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">487</td><td id="487"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">453</td><td id="453"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">488</td><td id="488"><pre>    <span class="r">case</span> SIGQUIT :</pre></td><td class="line_number">454</td><td id="454"><pre>    <span class="r">case</span> SIGQUIT :</pre></td></tr>
    <tr><td class="line_number">489</td><td id="489"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGQUIT(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">455</td><td id="455"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGQUIT(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">490</td><td id="490"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">456</td><td id="456"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">491</td><td id="491"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">457</td><td id="457"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">492</td><td id="492"><pre>    <span class="r">case</span> SIGKILL :</pre></td><td class="line_number">458</td><td id="458"><pre>    <span class="r">case</span> SIGKILL :</pre></td></tr>
    <tr><td class="line_number">493</td><td id="493"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGKILL(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">459</td><td id="459"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGKILL(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">494</td><td id="494"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">460</td><td id="460"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">495</td><td id="495"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">461</td><td id="461"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">496</td><td id="496"><pre>    <span class="r">case</span> SIGTERM :</pre></td><td class="line_number">462</td><td id="462"><pre>    <span class="r">case</span> SIGTERM :</pre></td></tr>
    <tr><td class="line_number">497</td><td id="497"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGTERM(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">463</td><td id="463"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGTERM(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">498</td><td id="498"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">464</td><td id="464"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">499</td><td id="499"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">465</td><td id="465"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">500</td><td id="500"><pre>    <span class="r">case</span> SIGFPE :</pre></td><td class="line_number">466</td><td id="466"><pre>    <span class="r">case</span> SIGFPE :</pre></td></tr>
    <tr><td class="line_number">501</td><td id="501"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGFPE(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">467</td><td id="467"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGFPE(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">502</td><td id="502"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">468</td><td id="468"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">503</td><td id="503"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">469</td><td id="469"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">504</td><td id="504"><pre>    <span class="r">case</span> SIGILL :</pre></td><td class="line_number">470</td><td id="470"><pre>    <span class="r">case</span> SIGILL :</pre></td></tr>
    <tr><td class="line_number">505</td><td id="505"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGILL(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">471</td><td id="471"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGILL(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">506</td><td id="506"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">472</td><td id="472"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">507</td><td id="507"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">473</td><td id="473"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">508</td><td id="508"><pre>    <span class="r">case</span> SIGBUS :</pre></td><td class="line_number">474</td><td id="474"><pre>    <span class="r">case</span> SIGBUS :</pre></td></tr>
    <tr><td class="line_number">509</td><td id="509"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGBUS(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">475</td><td id="475"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGBUS(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">510</td><td id="510"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">476</td><td id="476"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">511</td><td id="511"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">477</td><td id="477"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">512</td><td id="512"><pre>    <span class="r">case</span> SIGSEGV :</pre></td><td class="line_number">478</td><td id="478"><pre>    <span class="r">case</span> SIGSEGV :</pre></td></tr>
    <tr><td class="line_number">513</td><td id="513"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGSEGV(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">479</td><td id="479"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGSEGV(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">514</td><td id="514"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">480</td><td id="480"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">515</td><td id="515"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">481</td><td id="481"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">516</td><td id="516"><pre>    <span class="r">case</span> SIGSYS :</pre></td><td class="line_number">482</td><td id="482"><pre>    <span class="r">case</span> SIGSYS :</pre></td></tr>
    <tr><td class="line_number">517</td><td id="517"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGSYS(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">483</td><td id="483"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=SIGSYS(%d)</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">518</td><td id="518"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">484</td><td id="484"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">519</td><td id="519"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">485</td><td id="485"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">520</td><td id="520"><pre>    <span class="r">default</span> :</pre></td><td class="line_number">486</td><td id="486"><pre>    <span class="r">default</span> :</pre></td></tr>
    <tr><td class="line_number">521</td><td id="521"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=%d</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td><td class="line_number">487</td><td id="487"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort Signal=%d</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,sig );</pre></td></tr>
    <tr><td class="line_number">522</td><td id="522"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">488</td><td id="488"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">523</td><td id="523"><pre>    }</pre></td><td class="line_number">489</td><td id="489"><pre>    }</pre></td></tr>
    <tr><td class="line_number">524</td><td id="524"><pre></pre></td><td class="line_number">490</td><td id="490"><pre></pre></td></tr>
    <tr><td class="line_number">525</td><td id="525"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td><td class="line_number">491</td><td id="491"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td></tr>
    <tr><td class="line_number">526</td><td id="526"><pre>    FreeAllResourc(g_pAnzInfo);</pre></td><td class="line_number">492</td><td id="492"><pre>    FreeAllResourc(g_pAnzInfo);</pre></td></tr>
    <tr><td class="line_number">527</td><td id="527"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td><td class="line_number">493</td><td id="493"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td></tr>
    <tr><td class="line_number">528</td><td id="528"><pre>    CheckAllMem();</pre></td><td class="line_number">494</td><td id="494"><pre>    CheckAllMem();</pre></td></tr>
    <tr><td class="line_number">529</td><td id="529"><pre>    DestoryMemMan();</pre></td><td class="line_number">495</td><td id="495"><pre>    DestoryMemMan();</pre></td></tr>
    <tr><td class="line_number">530</td><td id="530"><pre><span class="pp">#endif</span></pre></td><td class="line_number">496</td><td id="496"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">531</td><td id="531"><pre>    <span class="c">/* Signal Check */</span></pre></td><td class="line_number">497</td><td id="497"><pre>    <span class="c">/* Signal Check */</span></pre></td></tr>
    <tr><td class="line_number">532</td><td id="532"><pre>    <span class="r">switch</span>(sig){</pre></td><td class="line_number">498</td><td id="498"><pre>    <span class="r">switch</span>(sig){</pre></td></tr>
    <tr><td class="line_number">533</td><td id="533"><pre>    <span class="r">case</span> SIGINT :</pre></td><td class="line_number">499</td><td id="499"><pre>    <span class="r">case</span> SIGINT :</pre></td></tr>
    <tr><td class="line_number">534</td><td id="534"><pre>    <span class="r">case</span> SIGQUIT :</pre></td><td class="line_number">500</td><td id="500"><pre>    <span class="r">case</span> SIGQUIT :</pre></td></tr>
    <tr><td class="line_number">535</td><td id="535"><pre>    <span class="r">case</span> SIGKILL :</pre></td><td class="line_number">501</td><td id="501"><pre>    <span class="r">case</span> SIGKILL :</pre></td></tr>
    <tr><td class="line_number">536</td><td id="536"><pre>    <span class="r">case</span> SIGTERM :</pre></td><td class="line_number">502</td><td id="502"><pre>    <span class="r">case</span> SIGTERM :</pre></td></tr>
    <tr><td class="line_number">537</td><td id="537"><pre>        exit(<span class="i">0</span>) ;</pre></td><td class="line_number">503</td><td id="503"><pre>        exit(<span class="i">0</span>) ;</pre></td></tr>
    <tr><td class="line_number">538</td><td id="538"><pre>    <span class="r">case</span> SIGFPE :</pre></td><td class="line_number">504</td><td id="504"><pre>    <span class="r">case</span> SIGFPE :</pre></td></tr>
    <tr><td class="line_number">539</td><td id="539"><pre>    <span class="r">case</span> SIGILL :</pre></td><td class="line_number">505</td><td id="505"><pre>    <span class="r">case</span> SIGILL :</pre></td></tr>
    <tr><td class="line_number">540</td><td id="540"><pre>    <span class="r">case</span> SIGBUS :</pre></td><td class="line_number">506</td><td id="506"><pre>    <span class="r">case</span> SIGBUS :</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">507</td><td id="507" class="deleted_line"><pre></pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">508</td><td id="508" class="deleted_line"><pre>    <span class="r">case</span> SIGSEGV :</pre></td></tr>
    <tr><td class="line_number">541</td><td id="541"><pre><span class="c">/*    case SIGIOT :*/</span></pre></td><td class="line_number">509</td><td id="509"><pre><span class="c">/*    case SIGIOT :*/</span></pre></td></tr>
    <tr><td class="line_number">542</td><td id="542" class="added_line"><pre>    <span class="r">case</span> SIGSEGV :</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">543</td><td id="543"><pre>    <span class="r">case</span> SIGSYS :</pre></td><td class="line_number">510</td><td id="510"><pre>    <span class="r">case</span> SIGSYS :</pre></td></tr>
    <tr><td class="line_number">544</td><td id="544"><pre>        abort() ;</pre></td><td class="line_number">511</td><td id="511"><pre>        abort() ;</pre></td></tr>
    <tr><td class="line_number">545</td><td id="545"><pre>    }</pre></td><td class="line_number">512</td><td id="512"><pre>    }</pre></td></tr>
    <tr><td class="line_number">546</td><td id="546"><pre>    exit(<span class="i">0</span>) ;</pre></td><td class="line_number">513</td><td id="513"><pre>    exit(<span class="i">0</span>) ;</pre></td></tr>
    <tr><td class="line_number">547</td><td id="547"><pre><span class="pp">#else</span></pre></td><td class="line_number">514</td><td id="514"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">548</td><td id="548"><pre>    <span class="r">switch</span>(dwCtrlType){</pre></td><td class="line_number">515</td><td id="515"><pre>    <span class="r">switch</span>(dwCtrlType){</pre></td></tr>
    <tr><td class="line_number">549</td><td id="549"><pre>    <span class="r">case</span> CTRL_C_EVENT:</pre></td><td class="line_number">516</td><td id="516"><pre>    <span class="r">case</span> CTRL_C_EVENT:</pre></td></tr>
    <tr><td class="line_number">550</td><td id="550"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Ctrl + C pressed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">517</td><td id="517"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Ctrl + C pressed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">551</td><td id="551"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">518</td><td id="518"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">552</td><td id="552"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">519</td><td id="519"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">553</td><td id="553"><pre>    <span class="r">case</span> CTRL_BREAK_EVENT:</pre></td><td class="line_number">520</td><td id="520"><pre>    <span class="r">case</span> CTRL_BREAK_EVENT:</pre></td></tr>
    <tr><td class="line_number">554</td><td id="554"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Ctrl + Break pressed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">521</td><td id="521"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Ctrl + Break pressed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">555</td><td id="555"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">522</td><td id="522"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">556</td><td id="556"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">523</td><td id="523"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">557</td><td id="557"><pre>    <span class="r">case</span> CTRL_CLOSE_EVENT:</pre></td><td class="line_number">524</td><td id="524"><pre>    <span class="r">case</span> CTRL_CLOSE_EVENT:</pre></td></tr>
    <tr><td class="line_number">558</td><td id="558"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Console Closed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">525</td><td id="525"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Console Closed!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">559</td><td id="559"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">526</td><td id="526"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">560</td><td id="560"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">527</td><td id="527"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">561</td><td id="561"><pre>    <span class="r">case</span> CTRL_LOGOFF_EVENT:</pre></td><td class="line_number">528</td><td id="528"><pre>    <span class="r">case</span> CTRL_LOGOFF_EVENT:</pre></td></tr>
    <tr><td class="line_number">562</td><td id="562"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Windows is logoff!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">529</td><td id="529"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Windows is logoff!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">563</td><td id="563"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">530</td><td id="530"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">564</td><td id="564"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">531</td><td id="531"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">565</td><td id="565"><pre>    <span class="r">case</span> CTRL_SHUTDOWN_EVENT:</pre></td><td class="line_number">532</td><td id="532"><pre>    <span class="r">case</span> CTRL_SHUTDOWN_EVENT:</pre></td></tr>
    <tr><td class="line_number">566</td><td id="566"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Windows is shutdown!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">533</td><td id="533"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Windows is shutdown!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">567</td><td id="567"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">534</td><td id="534"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">568</td><td id="568"><pre>        <span class="r">break</span>;</pre></td><td class="line_number">535</td><td id="535"><pre>        <span class="r">break</span>;</pre></td></tr>
    <tr><td class="line_number">569</td><td id="569"><pre>    <span class="r">default</span>:</pre></td><td class="line_number">536</td><td id="536"><pre>    <span class="r">default</span>:</pre></td></tr>
    <tr><td class="line_number">570</td><td id="570"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Unknowe event!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td><td class="line_number">537</td><td id="537"><pre>        sprintf(the_errMsg,<span class="s"><span class="dl">&quot;</span><span class="k">AnalyzeMe Abort by Unknowe event!</span><span class="ch">\n</span><span class="dl">&quot;</span></span>);</pre></td></tr>
    <tr><td class="line_number">571</td><td id="571"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td><td class="line_number">538</td><td id="538"><pre>        fprintf(g_fpErrorFile,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\n</span><span class="dl">&quot;</span></span>,the_errMsg);</pre></td></tr>
    <tr><td class="line_number">572</td><td id="572" class="added_line"><pre>        <span class="r">break</span>;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">573</td><td id="573"><pre>    }</pre></td><td class="line_number">539</td><td id="539"><pre>    }</pre></td></tr>
    <tr><td class="line_number">574</td><td id="574"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td><td class="line_number">540</td><td id="540"><pre>    <span class="c">/* AnalyzeMe????\?[?X?????????? */</span></pre></td></tr>
    <tr><td class="line_number">575</td><td id="575"><pre>    FreeAllResourc(g_pAnzInfo);</pre></td><td class="line_number">541</td><td id="541"><pre>    FreeAllResourc(g_pAnzInfo);</pre></td></tr>
    <tr><td class="line_number">576</td><td id="576"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td><td class="line_number">542</td><td id="542"><pre><span class="pp">#ifdef</span> _DEBUG</pre></td></tr>
    <tr><td class="line_number">577</td><td id="577"><pre>    CheckAllMem();</pre></td><td class="line_number">543</td><td id="543"><pre>    CheckAllMem();</pre></td></tr>
    <tr><td class="line_number">578</td><td id="578"><pre>    DestoryMemMan();</pre></td><td class="line_number">544</td><td id="544"><pre>    DestoryMemMan();</pre></td></tr>
    <tr><td class="line_number">579</td><td id="579"><pre><span class="pp">#endif</span></pre></td><td class="line_number">545</td><td id="545"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">580</td><td id="580"><pre>    ExitProcess(<span class="i">0</span>);</pre></td><td class="line_number">546</td><td id="546"><pre>    ExitProcess(<span class="i">0</span>);</pre></td></tr>
    <tr><td class="line_number">581</td><td id="581"><pre>    <span class="r">return</span> <span class="i">0</span>;</pre></td><td class="line_number">547</td><td id="547"><pre>    <span class="r">return</span> <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">582</td><td id="582"><pre><span class="pp">#endif</span></pre></td><td class="line_number">548</td><td id="548"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">583</td><td id="583"><pre>}</pre></td><td class="line_number">549</td><td id="549"><pre>}</pre></td></tr>
    <tr><td class="line_number">584</td><td id="584"><pre><span class="c">/**</span></pre></td><td class="line_number">550</td><td id="550"><pre><span class="c">/**</span></pre></td></tr>
    <tr><td class="line_number">585</td><td id="585"><pre><span class="c">*  SetSignal</span></pre></td><td class="line_number">551</td><td id="551"><pre><span class="c">*  SetSignal</span></pre></td></tr>
    <tr><td class="line_number">586</td><td id="586"><pre><span class="c">*  ?V?O?????n???h???o?^</span></pre></td><td class="line_number">552</td><td id="552"><pre><span class="c">*  ?V?O?????n???h???o?^</span></pre></td></tr>
    <tr><td class="line_number">587</td><td id="587"><pre><span class="c">*  @param</span></pre></td><td class="line_number">553</td><td id="553"><pre><span class="c">*  @param</span></pre></td></tr>
    <tr><td class="line_number">588</td><td id="588"><pre><span class="c">*         ???</span></pre></td><td class="line_number">554</td><td id="554"><pre><span class="c">*         ???</span></pre></td></tr>
    <tr><td class="line_number">589</td><td id="589"><pre><span class="c">*  @return</span></pre></td><td class="line_number">555</td><td id="555"><pre><span class="c">*  @return</span></pre></td></tr>
    <tr><td class="line_number">590</td><td id="590"><pre><span class="c">*         ???</span></pre></td><td class="line_number">556</td><td id="556"><pre><span class="c">*         ???</span></pre></td></tr>
    <tr><td class="line_number">591</td><td id="591"><pre><span class="c">*  @author zhang-gh</span></pre></td><td class="line_number">557</td><td id="557"><pre><span class="c">*  @author zhang-gh</span></pre></td></tr>
    <tr><td class="line_number">592</td><td id="592"><pre><span class="c">*/</span></pre></td><td class="line_number">558</td><td id="558"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">593</td><td id="593"><pre><span class="di">void</span> SetSignal()</pre></td><td class="line_number">559</td><td id="559"><pre><span class="di">void</span> SetSignal()</pre></td></tr>
    <tr><td class="line_number">594</td><td id="594"><pre>{</pre></td><td class="line_number">560</td><td id="560"><pre>{</pre></td></tr>
    <tr><td class="line_number">595</td><td id="595"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">561</td><td id="561"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">596</td><td id="596"><pre>    <span class="c">/* Signal Set */</span></pre></td><td class="line_number">562</td><td id="562"><pre>    <span class="c">/* Signal Set */</span></pre></td></tr>
    <tr><td class="line_number">597</td><td id="597"><pre>    signal( SIGFPE  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">563</td><td id="563"><pre>    signal( SIGFPE  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">598</td><td id="598"><pre>    signal( SIGILL  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">564</td><td id="564"><pre>    signal( SIGILL  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">599</td><td id="599"><pre>    signal( SIGBUS  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">565</td><td id="565"><pre>    signal( SIGBUS  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">600</td><td id="600" class="added_line"><pre><span class="c">/*    signal( SIGIOT  , (void *)AbortAnalyzeMe); */</span></pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">601</td><td id="601"><pre>    signal( SIGSEGV , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">566</td><td id="566"><pre>    signal( SIGSEGV , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">602</td><td id="602"><pre>    signal( SIGSYS , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">567</td><td id="567"><pre>    signal( SIGSYS , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">603</td><td id="603"><pre></pre></td><td class="line_number">568</td><td id="568"><pre></pre></td></tr>
    <tr><td class="line_number">604</td><td id="604"><pre>    signal( SIGINT  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">569</td><td id="569"><pre>    signal( SIGINT  , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">605</td><td id="605"><pre>    signal( SIGQUIT , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">570</td><td id="570"><pre>    signal( SIGQUIT , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">606</td><td id="606"><pre>    signal( SIGKILL , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">571</td><td id="571"><pre>    signal( SIGKILL , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number">607</td><td id="607" class="added_line"><pre>    signal( SIGTERM , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td><td class="line_number">572</td><td id="572" class="deleted_line"><pre>    signal( SIGTERM , (<span class="di">void</span> *)AbortAnalyzeMe);</pre></td></tr>
    <tr><td class="line_number"></td><td class="deleted_line"></td><td class="line_number">573</td><td id="573" class="deleted_line"><pre><span class="c">/*    signal( SIGIOT  , (void *)AbortAnalyzeMe); */</span></pre></td></tr>
    <tr><td class="line_number">608</td><td id="608"><pre><span class="pp">#else</span></pre></td><td class="line_number">574</td><td id="574"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">609</td><td id="609"><pre>    SetConsoleCtrlHandler(AbortAnalyzeMe, <span class="i">1</span>);</pre></td><td class="line_number">575</td><td id="575"><pre>    SetConsoleCtrlHandler(AbortAnalyzeMe, <span class="i">1</span>);</pre></td></tr>
    <tr><td class="line_number">610</td><td id="610"><pre><span class="pp">#endif</span></pre></td><td class="line_number">576</td><td id="576"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">611</td><td id="611"><pre>    <span class="r">return</span>;</pre></td><td class="line_number">577</td><td id="577"><pre>    <span class="r">return</span>;</pre></td></tr>
    <tr><td class="line_number">612</td><td id="612"><pre>}</pre></td><td class="line_number">578</td><td id="578"><pre>}</pre></td></tr>
    <tr><td class="line_number">613</td><td id="613"><pre></pre></td><td class="line_number">579</td><td id="579"><pre></pre></td></tr>
    <tr><td class="line_number">614</td><td id="614"><pre><span class="c">/**</span></pre></td><td class="line_number">580</td><td id="580"><pre><span class="c">/**</span></pre></td></tr>
    <tr><td class="line_number">615</td><td id="615"><pre><span class="c">*  ResetTrendPath</span></pre></td><td class="line_number">581</td><td id="581"><pre><span class="c">*  ResetTrendPath</span></pre></td></tr>
    <tr><td class="line_number">616</td><td id="616"><pre><span class="c">*  ????p?X????????</span></pre></td><td class="line_number">582</td><td id="582"><pre><span class="c">*  ????p?X????????</span></pre></td></tr>
    <tr><td class="line_number">617</td><td id="617"><pre><span class="c">*  @param</span></pre></td><td class="line_number">583</td><td id="583"><pre><span class="c">*  @param</span></pre></td></tr>
    <tr><td class="line_number">618</td><td id="618"><pre><span class="c">*         io_pPath  input Path</span></pre></td><td class="line_number">584</td><td id="584"><pre><span class="c">*         io_pPath  input Path</span></pre></td></tr>
    <tr><td class="line_number">619</td><td id="619"><pre><span class="c">*  @return</span></pre></td><td class="line_number">585</td><td id="585"><pre><span class="c">*  @return</span></pre></td></tr>
    <tr><td class="line_number">620</td><td id="620"><pre><span class="c">*         ???</span></pre></td><td class="line_number">586</td><td id="586"><pre><span class="c">*         ???</span></pre></td></tr>
    <tr><td class="line_number">621</td><td id="621"><pre><span class="c">*  @author luo-jirong</span></pre></td><td class="line_number">587</td><td id="587"><pre><span class="c">*  @author luo-jirong</span></pre></td></tr>
    <tr><td class="line_number">622</td><td id="622"><pre><span class="c">*/</span></pre></td><td class="line_number">588</td><td id="588"><pre><span class="c">*/</span></pre></td></tr>
    <tr><td class="line_number">623</td><td id="623"><pre><span class="pt">int</span> ResetTrendPath(<span class="pt">char</span> *io_pPath)</pre></td><td class="line_number">589</td><td id="589"><pre><span class="pt">int</span> ResetTrendPath(<span class="pt">char</span> *io_pPath)</pre></td></tr>
    <tr><td class="line_number">624</td><td id="624"><pre>{</pre></td><td class="line_number">590</td><td id="590"><pre>{</pre></td></tr>
    <tr><td class="line_number">625</td><td id="625"><pre>        <span class="pt">char</span> the_szFullPath[MAX_PATH];</pre></td><td class="line_number">591</td><td id="591"><pre>        <span class="pt">char</span> the_szFullPath[MAX_PATH];</pre></td></tr>
    <tr><td class="line_number">626</td><td id="626"><pre>        <span class="pt">char</span> the_szCurPath[MAX_PATH];</pre></td><td class="line_number">592</td><td id="592"><pre>        <span class="pt">char</span> the_szCurPath[MAX_PATH];</pre></td></tr>
    <tr><td class="line_number">627</td><td id="627" class="added_line"><pre>        <span class="pt">int</span> the_iRet = ANZ_SUCCESS;</pre></td><td class="line_number">593</td><td id="593" class="deleted_line"><pre>        <span class="pt">int</span> the_iRet = <span class="i">0</span>;</pre></td></tr>
    <tr><td class="line_number">628</td><td id="628"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td><td class="line_number">594</td><td id="594"><pre><span class="pp">#ifdef</span> __GNUC__</pre></td></tr>
    <tr><td class="line_number">629</td><td id="629"><pre>        <span class="c">/* ?J?????gDir??????Dir??????? */</span></pre></td><td class="line_number">595</td><td id="595"><pre>        <span class="c">/* ?J?????gDir??????Dir??????? */</span></pre></td></tr>
    <tr><td class="line_number">630</td><td id="630"><pre>        <span class="r">if</span>(io_pPath[<span class="i">0</span>] != <span class="ch">'/'</span>) {</pre></td><td class="line_number">596</td><td id="596"><pre>        <span class="r">if</span>(io_pPath[<span class="i">0</span>] != <span class="ch">'/'</span>) {</pre></td></tr>
    <tr><td class="line_number">631</td><td id="631"><pre>            <span class="r">if</span>(getcwd(the_szCurPath,MAX_PATH) == <span class="pc">NULL</span>) {</pre></td><td class="line_number">597</td><td id="597"><pre>            <span class="r">if</span>(getcwd(the_szCurPath,MAX_PATH) == <span class="pc">NULL</span>) {</pre></td></tr>
    <tr><td class="line_number">632</td><td id="632"><pre>                the_iRet = ANZ_ERROR;</pre></td><td class="line_number">598</td><td id="598"><pre>                the_iRet = ANZ_ERROR;</pre></td></tr>
    <tr><td class="line_number">633</td><td id="633"><pre>                <span class="r">goto</span> EXIT;</pre></td><td class="line_number">599</td><td id="599"><pre>                <span class="r">goto</span> EXIT;</pre></td></tr>
    <tr><td class="line_number">634</td><td id="634"><pre>            }</pre></td><td class="line_number">600</td><td id="600"><pre>            }</pre></td></tr>
    <tr><td class="line_number">635</td><td id="635"><pre>            <span class="r">if</span>(strcmp(io_pPath,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>) {</pre></td><td class="line_number">601</td><td id="601"><pre>            <span class="r">if</span>(strcmp(io_pPath,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>) {</pre></td></tr>
    <tr><td class="line_number"></td><td><div class="common_warning" id="warning_9852"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_9853"><a href="/result/view_message/1/2/7?message_id=3321&sub_id=7&tool_id=1"><b>sample_c/src/analyzeme.c(635),(16) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td><td class="line_number"></td><td><div class="common_warning" id="warning_10824"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(7:3321) [U] The variable '__s1_len' is definitely unset at this point.</b></a></div><div class="common_warning" id="warning_10825"><a href="/result/view_message/1/2/11?message_id=3321&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(601),(16) :Msg(7:3321) [U] The variable '__s2_len' is definitely unset at this point.</b></a></div></td></tr>
    <tr><td class="line_number">636</td><td id="636"><pre>                sprintf(the_szFullPath,<span class="s"><span class="dl">&quot;</span><span class="k">%s/%s</span><span class="dl">&quot;</span></span>,the_szCurPath,io_pPath);</pre></td><td class="line_number">602</td><td id="602"><pre>                sprintf(the_szFullPath,<span class="s"><span class="dl">&quot;</span><span class="k">%s/%s</span><span class="dl">&quot;</span></span>,the_szCurPath,io_pPath);</pre></td></tr>
    <tr><td class="line_number">637</td><td id="637"><pre>            }</pre></td><td class="line_number">603</td><td id="603"><pre>            }</pre></td></tr>
    <tr><td class="line_number">638</td><td id="638"><pre>        }</pre></td><td class="line_number">604</td><td id="604"><pre>        }</pre></td></tr>
    <tr><td class="line_number">639</td><td id="639" class="added_line"><pre>        <span class="r">else</span> {</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">640</td><td id="640" class="added_line"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">641</td><td id="641" class="added_line"><pre>        }</pre></td><td class="line_number"></td><td class="added_line"></td></tr>
    <tr><td class="line_number">642</td><td id="642"><pre><span class="pp">#else</span></pre></td><td class="line_number">605</td><td id="605"><pre><span class="pp">#else</span></pre></td></tr>
    <tr><td class="line_number">643</td><td id="643"><pre>        <span class="c">/* ?J?????gDir??????Dir??????? */</span></pre></td><td class="line_number">606</td><td id="606"><pre>        <span class="c">/* ?J?????gDir??????Dir??????? */</span></pre></td></tr>
    <tr><td class="line_number">644</td><td id="644"><pre>        <span class="r">if</span>((io_pPath[<span class="i">1</span>] == <span class="ch">':'</span> &amp;&amp; io_pPath[<span class="i">2</span>] == <span class="ch">'\\'</span>) ||</pre></td><td class="line_number">607</td><td id="607"><pre>        <span class="r">if</span>((io_pPath[<span class="i">1</span>] == <span class="ch">':'</span> &amp;&amp; io_pPath[<span class="i">2</span>] == <span class="ch">'\\'</span>) ||</pre></td></tr>
    <tr><td class="line_number">645</td><td id="645"><pre>            (io_pPath[<span class="i">0</span>] == <span class="ch">'\\'</span>)) {</pre></td><td class="line_number">608</td><td id="608"><pre>            (io_pPath[<span class="i">0</span>] == <span class="ch">'\\'</span>)) {</pre></td></tr>
    <tr><td class="line_number">646</td><td id="646"><pre>            <span class="r">goto</span> EXIT;</pre></td><td class="line_number">609</td><td id="609"><pre>            <span class="r">goto</span> EXIT;</pre></td></tr>
    <tr><td class="line_number">647</td><td id="647"><pre>        }</pre></td><td class="line_number">610</td><td id="610"><pre>        }</pre></td></tr>
    <tr><td class="line_number">648</td><td id="648"><pre>        <span class="r">else</span> {</pre></td><td class="line_number">611</td><td id="611"><pre>        <span class="r">else</span> {</pre></td></tr>
    <tr><td class="line_number">649</td><td id="649"><pre>            <span class="r">if</span>(getcwd(the_szCurPath,MAX_PATH) == <span class="pc">NULL</span>) {</pre></td><td class="line_number">612</td><td id="612"><pre>            <span class="r">if</span>(getcwd(the_szCurPath,MAX_PATH) == <span class="pc">NULL</span>) {</pre></td></tr>
    <tr><td class="line_number">650</td><td id="650"><pre>                the_iRet = ANZ_ERROR;</pre></td><td class="line_number">613</td><td id="613"><pre>                the_iRet = ANZ_ERROR;</pre></td></tr>
    <tr><td class="line_number">651</td><td id="651"><pre>                <span class="r">goto</span> EXIT;</pre></td><td class="line_number">614</td><td id="614"><pre>                <span class="r">goto</span> EXIT;</pre></td></tr>
    <tr><td class="line_number">652</td><td id="652"><pre>            }</pre></td><td class="line_number">615</td><td id="615"><pre>            }</pre></td></tr>
    <tr><td class="line_number">653</td><td id="653"><pre>            <span class="r">if</span>(strcmp(io_pPath,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>) {</pre></td><td class="line_number">616</td><td id="616"><pre>            <span class="r">if</span>(strcmp(io_pPath,<span class="s"><span class="dl">&quot;</span><span class="dl">&quot;</span></span>) != <span class="i">0</span>) {</pre></td></tr>
    <tr><td class="line_number">654</td><td id="654"><pre>                sprintf(the_szFullPath,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\\</span><span class="k">%s</span><span class="dl">&quot;</span></span>,the_szCurPath,io_pPath);</pre></td><td class="line_number">617</td><td id="617"><pre>                sprintf(the_szFullPath,<span class="s"><span class="dl">&quot;</span><span class="k">%s</span><span class="ch">\\</span><span class="k">%s</span><span class="dl">&quot;</span></span>,the_szCurPath,io_pPath);</pre></td></tr>
    <tr><td class="line_number">655</td><td id="655"><pre>            }</pre></td><td class="line_number">618</td><td id="618"><pre>            }</pre></td></tr>
    <tr><td class="line_number">656</td><td id="656"><pre>        }</pre></td><td class="line_number">619</td><td id="619"><pre>        }</pre></td></tr>
    <tr><td class="line_number">657</td><td id="657"><pre><span class="pp">#endif</span></pre></td><td class="line_number">620</td><td id="620"><pre><span class="pp">#endif</span></pre></td></tr>
    <tr><td class="line_number">658</td><td id="658"><pre>        strcpy(io_pPath,the_szFullPath);</pre></td><td class="line_number">621</td><td id="621"><pre>        strcpy(io_pPath,the_szFullPath);</pre></td></tr>
    <tr><td class="deleted_warning" id="line_number"></td><td class="deleted_warning"></td><td class="deleted_warning" id="line_number"></td><td><div class="deleted_warning" id="warning_10826"><a href="/result/view_message/1/2/11?message_id=3349&sub_id=11&tool_id=1"><b>sample_c/src/analyzeme.c(621),(25) :Msg(3:3349) This function argument points to data that is apparently unset.</b></a></div></td></tr>
    <tr><td class="line_number">659</td><td id="659" class="added_line"><pre><span class="la">EXIT:</span></pre></td><td class="line_number">622</td><td id="622" class="deleted_line"><pre><span class="la">EXIT:</span></pre></td></tr>
    <tr><td class="line_number">660</td><td id="660" class="added_line"><pre>        <span class="r">return</span> the_iRet;</pre></td><td class="line_number">623</td><td id="623" class="deleted_line"><pre>        <span class="r">return</span> the_iRet;</pre></td></tr>
    <tr><td class="line_number">661</td><td id="661" class="added_line"><pre>}</pre></td><td class="line_number">624</td><td id="624" class="deleted_line"><pre>}</pre></td></tr>
    <tr><td class="line_number">662</td><td id="662"><pre></pre></td><td class="line_number">625</td><td id="625"><pre></pre></td></tr>

